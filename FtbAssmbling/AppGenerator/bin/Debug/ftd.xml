<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ftd</name>
    </assembly>
    <members>
        <member name="T:ftd.codegen.FdmDataTableCodeGen">
            <summary>
            DataTable表格類別的程式產生器
            </summary>
        </member>
        <member name="T:ftd.codegen.FtdFileCodeGen">
            <summary>
            檔案CodeGen
            </summary>
        </member>
        <member name="M:ftd.codegen.FtdFileCodeGen.generate">
            <summary>
            產生檔案       
            </summary>
        </member>
        <member name="M:ftd.codegen.FtdFileCodeGen.renderTextFile(System.String,System.Text.Encoding,ftd.codegen.FtdFileCodeGen.RenderTextContent)">
            <summary>
            輸出一般文字檔
            </summary>
        </member>
        <member name="M:ftd.codegen.FtdFileCodeGen.renderXmlFile(System.String,System.Text.Encoding,ftd.codegen.FtdFileCodeGen.RenderXmlContent)">
            <summary>
            輸出一XML檔案
            </summary>
        </member>
        <member name="M:ftd.codegen.FtdFileCodeGen.smartWriteFile(System.String,System.Text.Encoding,System.String)">
            <summary>
            自動比對內容是否一樣，如果一樣的話就不寫入。
            </summary>     
        </member>
        <member name="P:ftd.codegen.FtdFileCodeGen.OutputPath">
            <summary>
            輸出目錄路徑
            </summary>
        </member>
        <member name="T:ftd.codegen.FtdFileCodeGen.RenderTextContent">
            <summary>
            產生內容
            </summary>
        </member>
        <member name="T:ftd.codegen.FtdFileCodeGen.RenderXmlContent">
            <summary>
            產生內容
            </summary>
        </member>
        <member name="F:ftd.codegen.FdmDataTableCodeGen.TableName">
            <summary>
            例: EO_Employee
            </summary>
        </member>
        <member name="F:ftd.codegen.FdmDataTableCodeGen.DmTable">
            <summary>
            DmTable
            </summary>
        </member>
        <member name="F:ftd.codegen.FdmDataTableCodeGen.SortColumns">
            <summary>
            欄位排序順序(PK,CommonFile)
            </summary>
        </member>
        <member name="M:ftd.codegen.FdmDataTableCodeGen.generate">
            <summary>
            產生CodeGen File
            有可能產生例外
            </summary>
        </member>
        <member name="T:ftd.codegen.FdmNameCodeGen">
            <summary>
            DM名稱程式產生器
            </summary>
        </member>
        <member name="M:ftd.codegen.FdmNameCodeGen.generate">
            <summary>
            產生CodeGen File
            有可能產生例外
            </summary>
        </member>
        <member name="P:ftd.codegen.FdmNameCodeGen.AppDataNameType">
            <summary>
            AppDataNameType
            </summary>
        </member>
        <member name="P:ftd.codegen.FdmNameCodeGen.FileName">
            <summary>
            檔案名稱
            </summary>
        </member>
        <member name="T:ftd.codegen.FdmServiceCodeGen">
            <summary>
            表格定義產生服務
            </summary>
        </member>
        <member name="M:ftd.codegen.FdmServiceCodeGen.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.codegen.FdmServiceCodeGen.renderSystem(System.String)">
            <summary>
            輸出指定的系統
            </summary>
        </member>
        <member name="P:ftd.codegen.FdmServiceCodeGen.DataOuputPath">
            <summary>
            DATA-輸出目錄
            </summary>
        </member>
        <member name="P:ftd.codegen.FdmServiceCodeGen.ProviderOuputPath">
            <summary>
            DATA-輸出目錄
            </summary>
        </member>
        <member name="T:ftd.codegen.NsDatabaseSyncCodeGen">
            <summary>
            資料庫同步的CodeGen
            </summary>
        </member>
        <member name="M:ftd.codegen.NsDatabaseSyncCodeGen.renderUpgradeSql(System.String,System.String,System.IO.TextWriter)">
            <summary>
            匯至Sql
            </summary>
        </member>
        <member name="T:ftd.codegen.FtdWebServiceImporterExtension">
            <summary>
            配合微軟WebServiceProxy產生器
            於產生WebProxy類別時，引用原本的類別定義(目前僅支援FtdDataTable)    
            </summary>
        </member>
        <member name="T:ftd.codegen.FtdWebServieProxyCodeGen">
            <summary>
            產生WebService Proxy類別
            特殊功能為，資料類別可引用原本的表格，而不用另外產生。
            </summary>
        </member>
        <member name="M:ftd.codegen.FtdWebServieProxyCodeGen.addWebService(System.String,System.String)">
            <summary>
            加入要產生的WebService
            </summary>
            <param node_4="url">例:http://localhost:12055/webservice/WmStationService.asmx</param>
            <param node_4="typeName">例:ftd.webservice.WmStationService</param>
        </member>
        <member name="M:ftd.codegen.FtdWebServieProxyCodeGen.generate">
            <summary>
            產生CodeGen File
            有可能產生例外
            </summary>
        </member>
        <member name="M:ftd.codegen.FtdWebServieProxyCodeGen.createWebServiceProxy(ftd.codegen.FtdWebServieProxyCodeGen.CService,System.IO.StreamWriter)">
            <summary>
            產生WebProxy
            </summary>
        </member>
        <member name="T:ftd.codegen.FtdWebServieProxyCodeGen.CService">
            <summary>
            WebService
            </summary>
        </member>
        <member name="P:ftd.codegen.FtdWebServieProxyCodeGen.CService.ServiceUrl">
            <summary>
            WebService Url
            例:http://localhost:12055/webservice/WmStationService.asmx
            </summary>
        </member>
        <member name="P:ftd.codegen.FtdWebServieProxyCodeGen.CService.ServiceTypeName">
            <summary>
            名稱空間
            例:ftd.webservice.WmStationService
            </summary>
        </member>
        <member name="T:ftd.codegen.NsTableCodeGen">
            <summary>
            表格類別的程式產生器
            </summary>
        </member>
        <member name="F:ftd.codegen.NsTableCodeGen.DmTable">
            <summary>
            DmTable
            </summary>
        </member>
        <member name="F:ftd.codegen.NsTableCodeGen.SortColumns">
            <summary>
            欄位排序順序(PK,CommonFile)
            </summary>
        </member>
        <member name="P:ftd.codegen.NsTableCodeGen.TableName">
            <summary>
            例: EO_Employee
            </summary>
        </member>
        <member name="T:ftd.codegen.NsTableProviderCodeGen">
            <summary>
            表格類別的程式產生器
            </summary>
        </member>
        <member name="P:ftd.codegen.NsTableProviderCodeGen.TableName">
            <summary>
            ex.EO_Employee
            </summary>
        </member>
        <member name="P:ftd.codegen.NsTableProviderCodeGen.NameSpace">
            <summary>
            ex.ftd.dataaccess
            </summary>
        </member>
        <member name="P:ftd.codegen.NsTableProviderCodeGen.ClassName">
            <summary>
            ex.EoEmployeeProvider
            </summary>
        </member>
        <member name="T:ftd.codegen.NsDmHelperCodeGen">
            <summary>
            表格類別的程式產生器
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmDoubleType">
            <summary>
            Double
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmDataType">
            <summary>
            欄位資料型別
            [文字](TEXT) [內容](ObjectValue) [資料庫值](DbValue)
            </summary>    
        </member>
        <member name="T:ftd.data.model.tag.FdmDataTypeAttribute">
            <summary>
            DD資料型別
            </summary>
        </member>
        <member name="M:ftd.data.model.tag.FdmDataTypeAttribute.toDataType">
            <summary>
            SdmServie會Call此函數取得型別
            </summary>
        </member>
        <member name="M:ftd.data.model.datatype.FdmDataType.isConvertableOfTextToValue(System.String,System.String@)">
            <summary>
            可否轉換 [文字] To [內容]
            </summary>
        </member>
        <member name="M:ftd.data.model.datatype.FdmDataType.isValueValid(System.Object,System.String@)">
            <summary>
            [內容]是否合理
            </summary>
        </member>
        <member name="M:ftd.data.model.datatype.FdmDataType.convertOfTextToValue(System.String)">
            <summary>
            [文字]轉換成[內容]        
            </summary>        
        </member>
        <member name="M:ftd.data.model.datatype.FdmDataType.convertOfValueToText(System.Object)">
            <summary>
            [內容]轉換成[文字]
            </summary>        
        </member>
        <member name="M:ftd.data.model.datatype.FdmDataType.convertOfDbToValue(System.Object)">
            <summary>
            [內容]轉換成[資料庫值]
            </summary>       
        </member>
        <member name="M:ftd.data.model.datatype.FdmDataType.convertOfValueToDb(System.Object)">
            <summary>
            [資料庫值]轉換成[內容]
            </summary>
        </member>
        <member name="M:ftd.data.model.datatype.FdmDataType.isNullOfText(System.String)">
            <summary>
             [文字]是否為NULL
            </summary>     
        </member>
        <member name="M:ftd.data.model.datatype.FdmDataType.isNullOfValue(System.Object)">
            <summary>
             [內容]是否為NULL
            </summary> 
        </member>
        <member name="M:ftd.data.model.datatype.FdmDataType.isNullOfDb(System.Object)">
            <summary>
             [資料庫值]是否為NULL
            </summary> 
        </member>
        <member name="M:ftd.data.model.datatype.FdmDataType.toDataType">
            <summary>
            SdmServie會Call此函數取得型別
            </summary>
        </member>
        <member name="M:ftd.data.model.datatype.FdmDataType.toDbColumn(System.String)">
            <summary>
            轉成資料庫欄位
            </summary>
        </member>
        <member name="P:ftd.data.model.datatype.FdmDataType.TextMaxLength">
            <summary>
            [文字]最大輸入長度
            </summary>
        </member>
        <member name="P:ftd.data.model.datatype.FdmDataType.DotNetType">
            <summary>
            代表的DotNet資料型別
            </summary>
        </member>
        <member name="P:ftd.data.model.datatype.FdmDataType.NSqlType">
            <summary>
            代表的NSql資料型別
            </summary>
        </member>
        <member name="M:ftd.data.model.datatype.FdmDoubleType.#ctor">
            <summary>
            Constructor
            </summary>        
        </member>
        <member name="M:ftd.data.model.datatype.FdmDoubleType.#ctor(ftd.data.model.datatype.FdmDoubleType.TextFormatName)">
            <summary>
            Constructor
            </summary>        
        </member>
        <member name="M:ftd.data.model.datatype.FdmDoubleType.#ctor(System.Double,System.Double,ftd.data.model.datatype.FdmDoubleType.TextFormatName)">
            <summary>
            Constructor
            </summary>     
        </member>
        <member name="F:ftd.data.model.datatype.FdmDoubleType.TextFormatName.Normal">
            <summary>
            例：1.234
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmBTextType">
            <summary>
            Text Type
            </summary>
        </member>
        <member name="P:ftd.data.model.datatype.FdmBTextType.TextMaxLength">
            <summary>
            文字長度
            </summary>
        </member>
        <member name="T:ftd.data.model.tag.FdmCodeGenAttribute">
            <summary>
            程式產生器的參考項目
            </summary>
        </member>
        <member name="M:ftd.data.model.tag.FdmCodeGenAttribute.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.data.model.tag.FdmCodeGenAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:ftd.data.model.tag.FdmCodeGenAttribute.Title">
            <summary>
            標題
            </summary>
        </member>
        <member name="P:ftd.data.model.tag.FdmCodeGenAttribute.IsRequired">
            <summary>
            必要的?(Default:false)
            </summary>
        </member>
        <member name="P:ftd.data.model.tag.FdmCodeGenAttribute.IsSearch">
            <summary>
            搜尋欄位?(Default:true)
            </summary>
        </member>
        <member name="P:ftd.data.model.tag.FdmCodeGenAttribute.IsUnique">
            <summary>
            唯一值?(Default:false)
            </summary>
        </member>
        <member name="P:ftd.data.model.tag.FdmCodeGenAttribute.IsSearchRange">
            <summary>
            範圍值?(Default:false)
            </summary>
        </member>
        <member name="P:ftd.data.model.tag.FdmCodeGenAttribute.IsListVisible">
            <summary>
            列表顯示否?(Default:true)
            </summary>
        </member>
        <member name="P:ftd.data.model.tag.FdmCodeGenAttribute.IsCreateVisible">
            <summary>
            新增時顯示否?(Default:true)
            </summary>
        </member>
        <member name="P:ftd.data.model.tag.FdmCodeGenAttribute.IsEditVisible">
            <summary>
            修改時顯示否?(Default:true)
            </summary>
        </member>
        <member name="T:ftd.data.model.tag.FdmCodeName_CUAttribute">
            <summary>
            目前使用者語系的CodeName 計算欄位
            </summary>
        </member>
        <member name="T:ftd.data.model.tag.FdmCodeNameAttribute">
            <summary>
            CodeName 計算欄位
            </summary>
        </member>
        <member name="T:ftd.data.model.tag.FdmCalculateAttribute">
            <summary>
            設定衍生欄位為計算欄位
            </summary>
        </member>
        <member name="M:ftd.data.model.tag.FdmCalculateAttribute.#ctor">
            <summary>
            屬性設定
            </summary>        
        </member>
        <member name="M:ftd.data.model.tag.FdmCalculateAttribute.addCalculateData(System.Collections.IDictionary)">
            <summary>
            追加自訂義計算欄位資料
            </summary>
        </member>
        <member name="M:ftd.data.model.tag.FdmCalculateAttribute.getCalculateData">
            <summary>
            追加自訂義計算欄位資料
            </summary>
        </member>
        <member name="M:ftd.data.model.tag.FdmCodeNameAttribute.#ctor(System.String,System.String)">
            <summary>
            建構子
            </summary>        
        </member>
        <member name="M:ftd.data.model.tag.FdmCodeNameAttribute.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            建構子
            </summary>        
        </member>
        <member name="F:ftd.data.model.tag.FdmCodeNameAttribute.CodeTypeName">
            <summary>
            CodeTypeName
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmCodeNameAttribute.KeyColumnName">
            <summary>
             連結鍵值
             </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmCodeNameAttribute.LangCode">
            <summary>
            CodeName語系
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmCodeNameAttribute.IsMultiKey">
            <summary>
            是否是多值("()" 分隔)
            </summary>
        </member>
        <member name="T:ftd.data.model.tag.FdmCodeNameAttribute.CData">
            <summary>
            CodeName資料
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmCodeNameAttribute.CData.CodeTypeName">
            <summary>
            CodeTypeName
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmCodeNameAttribute.CData.KeyColumnName">
            <summary>
             連結鍵值
             </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmCodeNameAttribute.CData.IsMultiKey">
            <summary>
            是否是多值("()" 分隔)
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmCodeNameAttribute.CData.LangCode">
            <summary>
            語系CODE
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmCodeNameAttribute.CData.IsLangCodeByCurrentUser">
            <summary>
            語系CODE依目前使用者的語系
            </summary>
        </member>
        <member name="M:ftd.data.model.tag.FdmCodeName_CUAttribute.#ctor(System.String,System.String)">
            <summary>
            建構子
            </summary>        
        </member>
        <member name="M:ftd.data.model.tag.FdmCodeName_CUAttribute.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            建構子
            </summary>        
        </member>
        <member name="T:ftd.data.FtdConfigData">
            <summary>
            ConfigData
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.Environments">
            <summary>
            環境變數-集合
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.AppSettings">
            <summary>
            一般變數-集合
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.DbConns">
            <summary>
            連線字串-集合
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.MailServices">
            <summary>
            一般變數-集合
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.Printers">
            <summary>
            印表機-集合
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.PrintSettings">
            <summary>
            印表設定-集合
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.CodeTypes">
            <summary>
            CodeType集合
            注意如果有指定語系的話，DictionaryKEY會存放成CODE#LANG_CODE
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.DataTables">
            <summary>
            資料表-集合
            </summary>
        </member>
        <member name="T:ftd.data.FtdConfigData.CEnvironment">
            <summary>
            環境變數
            </summary>
        </member>
        <member name="T:ftd.data.FtdConfigData.CAppSetting">
            <summary>
            一般變數
            </summary>
        </member>
        <member name="T:ftd.data.FtdConfigData.CDbConn">
            <summary>
            連線字串
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.CDbConn.ConnID">
            <summary>
            連線ID
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.CDbConn.DbAccessClass">
            <summary>
            資料存取類別 ex.ftd.dataaccess.FdbOracle10Access,ftd
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.CDbConn.ObjectNamePrefix">
            <summary>
            物件前置名稱 Ex.HealthCare.dbo.
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.CDbConn.ConnectionString">
            <summary>
            連線字串
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.CDbConn.Description">
            <summary>
            備註
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.CDbConn.CommandTimeout">
            <summary>
            最長命令執行秒數
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.CDbConn.TransGroup">
            <summary>
            交易群組
            不同的交易群組，無法協同交易
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.CDbConn.Inherits">
            <summary>
            繼承那一個連線ID
            </summary>
        </member>
        <member name="T:ftd.data.FtdConfigData.CMailService">
            <summary>
            MailService
            </summary>
        </member>
        <member name="T:ftd.data.FtdConfigData.CPrintSetting">
            <summary>
            列印設定
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.CPrintSetting.PaperRawKind">
            <summary>
            取得紙張的實際Id
            通常用於CrystalReport
            </summary>
        </member>
        <member name="T:ftd.data.FtdConfigData.CPrinter">
            <summary>
            列表機
            </summary>
        </member>
        <member name="T:ftd.data.FtdConfigData.CCodeType">
            <summary>
            CCodeType        
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.CCodeType.Name">
            <summary>
            CodeTypeName
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.CCodeType.LangCode">
            <summary>
            語系內容
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.CCodeType.Items">
            <summary>
            Items
            </summary>
        </member>
        <member name="T:ftd.data.FtdConfigData.CCodeItem">
            <summary>
            CodeItem
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.CCodeItem.Code">
            <summary>
            ex.M
            </summary>
        </member>
        <member name="P:ftd.data.FtdConfigData.CCodeItem.Name">
            <summary>
            ex.男
            </summary>
        </member>
        <member name="T:ftd.console.FcoSimpleMenu">
            <summary>
            Console 簡單功能表
            </summary>
        </member>
        <member name="F:ftd.console.FcoSimpleMenu.EntryNode">
            <summary>
            目前進入節點
            </summary>
        </member>
        <member name="M:ftd.console.FcoSimpleMenu.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.console.FcoSimpleMenu.start">
            <summary>
            開始動作
            </summary>
        </member>
        <member name="M:ftd.console.FcoSimpleMenu.show_menu_list(ftd.console.FcoSimpleMenu.Node)">
            <summary>
            進入節點
            </summary>
        </member>
        <member name="P:ftd.console.FcoSimpleMenu.RootNode">
            <summary>
            根結點
            </summary>
        </member>
        <member name="P:ftd.console.FcoSimpleMenu.Title">
            <summary>
            標題
            </summary>
        </member>
        <member name="T:ftd.console.FcoSimpleMenu.Node">
            <summary>
            功能表節點
            </summary>
        </member>
        <member name="T:ftd.data.FtdTreeNode`1">
            <summary>
            標準樹系節點
            </summary>
        </member>
        <member name="T:ftd.data.IFtdRestoreBinding">
            <summary>
            物件反序列完成後，如果需要重新繫結物件的話，應實作此介面。
            會呼叫ReBinding方法來完成
            </summary>
        </member>
        <member name="M:ftd.data.IFtdRestoreBinding.reBinding">
            <summary>
            重新繫結
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeNode`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeNode`1.addNodes(`0[])">
            <summary>
            加入節點
            </summary>        
        </member>
        <member name="M:ftd.data.FtdTreeNode`1.addNodes(System.Collections.IList)">
            <summary>
            加入節點
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeNode`1.removeNode(`0)">
            <summary>
            移除子節點
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeNode`1.cloneNodeTree(ftd.data.FtdTreeNode{`0}.DCloneNode,ftd.data.FtdTreeNode{`0}.DAddCloneNode)">
            <summary>
            Clone節點樹結構
            </summary>
        </member>
        <member name="F:ftd.data.FtdTreeNode`1.Position">
            <summary>
            座標資訊
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeNode`1.calcHorizontalPosition(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            計算座標位置
            虛節點代表其本身是不畫的
            </summary>
            <param node_4="isVirtualNode">本節點是否是虛節點</param>
        </member>
        <member name="M:ftd.data.FtdTreeNode`1.onReBinding">
            <summary>
            重新繫結
            </summary>
        </member>
        <member name="P:ftd.data.FtdTreeNode`1.ParentNode">
            <summary>
            父節點
            </summary>        
        </member>
        <member name="P:ftd.data.FtdTreeNode`1.Nodes">
            <summary>
            子節點集合
            </summary>        
        </member>
        <member name="T:ftd.data.FtdTreeNode`1.CPosition">
            <summary>
            座標資訊
            </summary>
        </member>
        <member name="T:ftd.data.FtdTreeIterator`1.CNodeHelper">
            <summary>
            提供Node的資訊
            </summary>
        </member>
        <member name="T:ftd.data.FtdTreeIterator`1">
            <summary>
            Tree Iterator
            </summary>   
        </member>
        <member name="F:ftd.data.FtdTreeIterator`1.Node_Helper">
            <summary>
            Node Helper
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeIterator`1.#ctor(`0,ftd.data.FtdTreeIterator{`0}.CNodeHelper)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeIterator`1.setReturn">
            <summary>
            要本點立即由回頭
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeIterator`1.setReturnAll">
            <summary>
            要所經過的任一點都回頭
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeIterator`1.itorTree">
            <summary>
            尋訪整個樹系(包含自己)
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeIterator`1.itorSubTree">
            <summary>
            尋訪整個樹系(不包含自己)            
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeIterator`1.itorAllParent">
            <summary>
            由近親至遠親尋訪所有Parent
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeIterator`1.selectAll">
            <summary>
            遞回找出所有符合條件與類型的控制項
            </summary>   
        </member>
        <member name="M:ftd.data.FtdTreeIterator`1.selectAll(System.Func{`0,System.Boolean})">
            <summary>
            遞回找出所有符合條件與類型的控制項
            </summary>   
        </member>
        <member name="M:ftd.data.FtdTreeIterator`1.selectAll``1">
            <summary>
            遞回找出所有符合條件與類型的控制項
            </summary>        
        </member>
        <member name="M:ftd.data.FtdTreeIterator`1.selectParentsFirst``1">
            <summary>
            尋找第一個符合條件的近親
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeIterator`1.selectParentsFirst``1(System.Func{``0,System.Boolean})">
            <summary>
            尋找第一個符合條件的近親
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeIterator`1.selectAllFirst``1">
            <summary>
            尋找整棵樹的第一個
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeIterator`1.selectAllFirst``1(System.Func{``0,System.Boolean})">
            <summary>
            尋找整棵樹的第一個
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeIterator`1.selectAll``1(System.Func{``0,System.Boolean})">
            <summary>
            遞回找出所有符合條件與類型的控制項
            </summary>        
        </member>
        <member name="P:ftd.data.FtdTreeIterator`1.Node">
            <summary>
            起始節點
            </summary>
        </member>
        <member name="P:ftd.data.FtdTreeIterator`1.EntryFrom">
            <summary>
            由哪一點進入的
            </summary>
        </member>
        <member name="P:ftd.data.FtdTreeIterator`1.OnEntry">
            <summary>
            進入節點動作
            </summary>
        </member>
        <member name="P:ftd.data.FtdTreeIterator`1.OnLeave">
            <summary>
            離開節點動作
            </summary>
        </member>
        <member name="P:ftd.data.FtdTreeIterator`1.Level">
            <summary>
            路徑階層 0.....
            </summary>
        </member>
        <member name="T:ftd.data.FtdTreeIterator`1.CNodeHelper">
            <summary>
            提供Node的資訊
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeIterator`1.CNodeHelper.getChilds(`0)">
            <summary>
            取得子結點集合
            </summary>
        </member>
        <member name="M:ftd.data.FtdTreeIterator`1.CNodeHelper.getParent(`0)">
            <summary>
            取得父節點
            </summary>
        </member>
        <member name="T:ftd.data.FtdTreeNode`1.DCloneNode">
            <summary>
            建立節點
            </summary>
        </member>
        <member name="T:ftd.data.FtdTreeNode`1.DAddCloneNode">
            <summary>
            加入子節點
            </summary>        
        </member>
        <member name="P:ftd.console.FcoSimpleMenu.Node.PressKey">
            <summary>
            按壓鍵
            </summary>
        </member>
        <member name="P:ftd.console.FcoSimpleMenu.Node.Title">
            <summary>
            顯示標題
            </summary>
        </member>
        <member name="P:ftd.console.FcoSimpleMenu.Node.PressAction">
            <summary>
            執行動作
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmDataName">
            <summary>
            資料名稱
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_ID">
            <summary>
            (資料型別) 主鍵
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_NID">
            <summary>
            (資料型別) 主鍵(UniCode)
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_DECIMAL">
            <summary>
            (資料型別)DECIMAL
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_INTEGER">
            <summary>
            (資料型別)整數
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_DOUBLE">
            <summary>
            (資料型別)DOUBLE
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_BOOL_TF">
            <summary>
            (資料型別)Ｔ 或 F
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_NBOOL_TF">
            <summary>
            (資料型別)(UniCode)Ｔ 或 F 
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_DATETIME_19">
            <summary>
            (資料型別)yyyy/MM/dd hh:mm:ss
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_DATETIME_10">
            <summary>
            (資料型別)yyyy/MM/dd
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_DATE_8">
            <summary>
            (資料型別)yyyyMMdd
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_DATETIME_16">
            <summary>
            (資料型別)yyyy/MM/dd HH:mm
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_NVARCHAR1">
            <summary>
            (資料型別)(UniCode)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_NVARCHAR10">
            <summary>
            (資料型別)(UniCode)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_NVARCHAR20">
            <summary>
            (資料型別)(UniCode)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_NVARCHAR50">
            <summary>
            (資料型別)(UniCode)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_NVARCHAR100">
            <summary>
            (資料型別)(UniCode)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_NVARCHAR200">
            <summary>
            (資料型別)(UniCode)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_NVARCHAR500">
            <summary>
            (資料型別)(UniCode)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_NVARCHAR1000">
            <summary>
            (資料型別)(UniCode)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_NVARCHAR4000">
            <summary>
            (資料型別)(UniCode)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_VARCHAR1">
            <summary>
            (資料型別)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_VARCHAR10">
            <summary>
            (資料型別)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_VARCHAR20">
            <summary>
            (資料型別)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_VARCHAR50">
            <summary>
            (資料型別)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_VARCHAR100">
            <summary>
            (資料型別)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_VARCHAR200">
            <summary>
            (資料型別)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_VARCHAR500">
            <summary>
            (資料型別)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_VARCHAR1000">
            <summary>
            (資料型別)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_VARCHAR4000">
            <summary>
            (資料型別)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_TEXT">
            <summary>
            (資料型別)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_NTEXT">
            <summary>
            (資料型別)(UniCode)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_BTEXT">
            <summary>
            (資料型別)(UniCode)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_EMAIL">
            <summary>
            (資料型別)電子郵件(50字)
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDataName.DTN_NEMAIL">
            <summary>
            (資料型別)(UniCode)電子郵件(50字)
            </summary>        
        </member>
        <member name="T:ftd.data.model.datatype.FdmDateTimeType">
            <summary>
            型別日期
            </summary>
        </member>
        <member name="M:ftd.data.model.datatype.FdmDateTimeType.dateCheck(System.Int32,System.Int32,System.Int32,System.String@)">
            <summary>
            日期檢查
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmDateTimeType.TextFormatName.EDate">
            <summary>
            例 2003/01/01
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmDateTimeType.TextFormatName.EDate8">
            <summary>
            例 20030101
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmDateTimeType.TextFormatName.EDate6">
            <summary>
            例 200301
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmDateTimeType.TextFormatName.EDateTime">
            <summary>
            例 2003/01/01 23:16:15
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmDateTimeType.TextFormatName.EDateTime16">
            <summary>
            例 2003/01/01 23:16
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmDateTimeType.TextFormatName.CDate">
            <summary>
            中文年 例 100/01/01 
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmDateTimeType.TextFormatName.CDate7">
            <summary>
            中文年 例 1000101 
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmDateTimeType.TextFormatName.CDate5">
            <summary>
            中文年 例 10001
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmDateTimeType.TextFormatName.CDateTime">
            <summary>
            中文年 例 100/01/01 23:16:15
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmDateTimeType.TextFormatName.CDateTime15">
            <summary>
            中文年 例 100/01/01 23:16
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmDecimalType">
            <summary>
            Decimal
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmDecimalType.DigitsPrecision">
            <summary>
            decimal digits
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmDecimalType.DigitsScale">
            <summary>
            Digits to right of decimal point in a number
            </summary>
        </member>
        <member name="M:ftd.data.model.datatype.FdmDecimalType.#ctor(ftd.data.model.datatype.FdmDecimalType.TextFormatName)">
            <summary>
            Constructor
            </summary>        
        </member>
        <member name="M:ftd.data.model.datatype.FdmDecimalType.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="digits_precision">decimal digits</param>
            <param name="digits_scale">Digits to right of decimal point in a number</param>
        </member>
        <member name="M:ftd.data.model.datatype.FdmDecimalType.#ctor(System.Decimal,System.Decimal,ftd.data.model.datatype.FdmDecimalType.TextFormatName)">
            <summary>
            Constructor
            </summary>     
        </member>
        <member name="F:ftd.data.model.datatype.FdmDecimalType.TextFormatName.Normal">
            <summary>
            例：123456
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmIntegerType">
            <summary>
            Integer
            </summary>
        </member>
        <member name="M:ftd.data.model.datatype.FdmIntegerType.dateCheck(System.Int32,System.Int32,System.Int32,System.String@)">
            <summary>
            日期檢查
            </summary>        
        </member>
        <member name="F:ftd.data.model.datatype.FdmIntegerType.TextFormatName.Normal">
            <summary>
            例：123456
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmIntegerType.TextFormatName.EDate6">
            <summary>
            西元年月 例：200301
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmIntegerType.TextFormatName.CDate5">
            <summary>
            中文年月 例：10001
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmNEmailType">
            <summary>
            Email格式 NVarchar
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmNVarcharType">
            <summary>
            NVarcharType
            </summary>
        </member>
        <member name="M:ftd.data.model.datatype.FdmNVarcharType.dateCheck(System.Int32,System.Int32,System.Int32,System.String@)">
            <summary>
            日期檢查
            </summary>        
        </member>
        <member name="P:ftd.data.model.datatype.FdmNVarcharType.CharacterCasing">
            <summary>
            字元轉換
            </summary>
        </member>
        <member name="P:ftd.data.model.datatype.FdmNVarcharType.IsAutoTrim">
            <summary>
            TRIM空白
            </summary>
        </member>
        <member name="P:ftd.data.model.datatype.FdmNVarcharType.DbLength">
            <summary>
            資料庫長度
            </summary>
        </member>
        <member name="P:ftd.data.model.datatype.FdmNVarcharType.TextMaxLength">
            <summary>
            文字長度
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmNVarcharType.TextFormatName.Normal">
            <summary>
            例：123456
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmNVarcharType.TextFormatName.EDate6">
            <summary>
            西元年月 例：200301
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmNVarcharType.TextFormatName.CDate5">
            <summary>
            中文年月 例：10001
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmNVarcharType.CharacterCasingName">
            <summary>
            大小寫轉換
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmNStringBooleanType">
            <summary>
            字串式的Boolean值
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmTextType">
            <summary>
            Text Type
            </summary>
        </member>
        <member name="P:ftd.data.model.datatype.FdmTextType.TextMaxLength">
            <summary>
            文字長度
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmVarcharType">
            <summary>
            VarcharType
            </summary>
        </member>
        <member name="M:ftd.data.model.datatype.FdmVarcharType.dateCheck(System.Int32,System.Int32,System.Int32,System.String@)">
            <summary>
            日期檢查
            </summary>        
        </member>
        <member name="P:ftd.data.model.datatype.FdmVarcharType.CharacterCasing">
            <summary>
            字元轉換
            </summary>
        </member>
        <member name="P:ftd.data.model.datatype.FdmVarcharType.IsAutoTrim">
            <summary>
            TRIM空白
            </summary>
        </member>
        <member name="P:ftd.data.model.datatype.FdmVarcharType.DbLength">
            <summary>
            資料庫長度
            </summary>
        </member>
        <member name="P:ftd.data.model.datatype.FdmVarcharType.TextMaxLength">
            <summary>
            文字長度
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmVarcharType.TextFormatName.Normal">
            <summary>
            例：123456
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmVarcharType.TextFormatName.EDate6">
            <summary>
            西元年月 例：200301
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmVarcharType.TextFormatName.CDate5">
            <summary>
            中文年月 例：10001
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmVarcharType.CharacterCasingName">
            <summary>
            大小寫轉換
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmNTextType">
            <summary>
            Text Type
            </summary>
        </member>
        <member name="P:ftd.data.model.datatype.FdmNTextType.TextMaxLength">
            <summary>
            文字長度
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmStringBooleanType">
            <summary>
            字串式的Boolean值
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmEmailType">
            <summary>
            Email格式
            </summary>
        </member>
        <member name="T:ftd.data.model.tag.FdmDefaultValueAttribute">
            <summary>
            設定欄位的預設值
            </summary>
        </member>
        <member name="T:ftd.data.model.tag.FdmDirectRequiredAttribute">
            <summary>
            是否限定此欄位一定要是可直讀的
            </summary>
        </member>
        <member name="T:ftd.data.model.tag.FdmLinkAttribute">
            <summary>
            設定欄位連結資料來源定義
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmLinkAttribute.KeyFieldName">
            <summary>
            連結鍵值
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmLinkAttribute.ValueFieldName">
            <summary>
            連結內容
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmLinkAttribute.KeyAsValueWhenLinkless">
            <summary>
            當連結不到內容時，以Key作為Value的值
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmLinkAttribute.LinkLessDefault">
            <summary>        
            當連結不到時的預設值
            此優先權低於KeyAsValueWhenLinkLess=true
            </summary>
        </member>
        <member name="M:ftd.data.model.tag.FdmLinkAttribute.#ctor(System.String,System.String)">
            <summary>
            屬性設定
            </summary>        
        </member>
        <member name="M:ftd.data.model.tag.FdmLinkAttribute.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            屬性設定
            </summary>        
        </member>
        <member name="T:ftd.data.model.tag.FdmPrimaryKeyAttribute">
            <summary>
            表格主鍵
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmPrimaryKeyAttribute.KeyNames">
            <summary>
            主鍵集合
            </summary>
        </member>
        <member name="T:ftd.data.model.datatype.FdmStyleTypeAttribute">
            <summary>
            常用型別類型
            </summary>
        </member>
        <member name="F:ftd.data.model.datatype.FdmStyleTypeAttribute.StyleName">
            <summary>
            樣式名稱
            </summary>
        </member>
        <member name="T:ftd.data.model.tag.FdmSystemDefAttribute">
            <summary>
            系統定義
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmSystemDefAttribute.NameSpace">
            <summary>
            資料的NameSpace
            (default) ftd.data
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmSystemDefAttribute.TableNamePrefix">
            <summary>
            系統所屬資料表Prefix 例： KM_
            </summary>
        </member>
        <member name="T:ftd.data.model.tag.FdmTableDefAttribute">
            <summary>
            資料表定義
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmTableDefAttribute.ColumnNamePrefix">
            <summary>
            欄位前置名稱
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmTableDefAttribute.TableKind">
            <summary>
            表格類型
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmTableDefAttribute.PrimaryKeyName">
            <summary>
            主鍵值欄位
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmTableDefAttribute.KeyPrefix">
            <summary>
            主鍵值內容的前置碼 例:EOE_
            預設值 = 欄位前置名稱
            如此值為空字串，代表主鍵為複合鍵值
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmTableDefAttribute.PrimaryKeySerialName">
            <summary>
            主鍵序號產生器名稱(未指定將自動指定預設值)
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmTableDefAttribute.RowVersionName">
            <summary>
            RowVersion欄位
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmTableDefAttribute.RowVersionConflictEnable">
            <summary>
            版本衝突啟動嗎？
            設定資料版本的話，若資料更新時非原版本的話，會發生例外。
            (預設為True)
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmTableDefAttribute.RowUpdateDateName">
            <summary>
            Row UpdateDate 欄位
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmTableDefAttribute.RowInsertDateName">
            <summary>
            Row InsertDate 欄位
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmTableDefAttribute.RowModifyDateName">
            <summary>
            RowModifyDate 欄位(新增／異動)
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmTableDefAttribute.RowModifyUserName">
            <summary>
            RowModifyDate 欄位(新增／異動)
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmTableDefAttribute.RowInsertUserName">
            <summary>
            RowInsertUserName
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmTableDefAttribute.RowUpdateUserName">
            <summary>
            RowUpdateUserName
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmTableDefAttribute.IsSessionEnable">
            <summary>
            是否啟用Session(Default false)
            </summary>
        </member>
        <member name="M:ftd.data.model.tag.FdmTableDefAttribute.#ctor(System.String)">
            <summary>
            建構子
            </summary>        
        </member>
        <member name="M:ftd.data.model.tag.FdmTableDefAttribute.#ctor(System.String,System.String)">
            <summary>
            建構子
            </summary>        
        </member>
        <member name="T:ftd.data.model.tag.FdmTableProviderAttribute">
            <summary>
            1.指示這個表格的TableProvider類別   
            </summary>
        </member>
        <member name="F:ftd.data.model.tag.FdmTableProviderAttribute.TableProviderType">
            <summary>
            表格資料提供者
            例：ftd.dataaccess.DsUserProvider, DsService
            </summary>
        </member>
        <member name="T:ftd.data.model.FdmColumn">
            <summary>
            欄位定義
            </summary>
        </member>
        <member name="M:ftd.data.model.FdmColumn.#ctor(ftd.service.FdmService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumn.ColumnName">
            <summary>
            欄位名稱
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumn.ColumnKind">
            <summary>
            欄位類型
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumn.DataType">
            <summary>
            資料類型
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumn.Table">
            <summary>
            所屬資料表
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumn.CodeGenAttributes">
            <summary>
            程式產生器屬性集合
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumn.IsPrimaryKey">
            <summary>
            是否為主鍵值
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumn.IsSqlable">
            <summary>            
            指出此欄位計算程序是否有SQL程序
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumn.IsDirectable">
            <summary>            
            指出此欄位是否可以直讀？
            此數值為定義與Provider完整載入後計算得知。
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumn.IsDirectRequired">
            <summary>            
            是否要求本欄位一定要可以直讀         
            如果不能時，Load will throw Exception
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumn.DefaultValue">
            <summary>
            欄位預設值(NULL)表示沒有
            設定的話此值將會設定在DataTable上
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumn.CalcData">
            <summary>
            計算欄位資料(可自訂義 見 FdmCalculateAttribute)
            可能會有資料，如沒有資料其值為NULL。
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumn.Links">
            <summary>
            連結欄位設定
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumn.Title">
            <summary>
            預設標題 ex.個案姓名
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumn.Note">
            <summary>
            備註
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumn.DependLevel">
            <summary>
            相依階層號碼 0為最底層
            通常0是原生欄位或可直讀衍生欄位
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumn.Dependencys">
            <summary>
            所相依的同表欄位清單
            </summary>
        </member>
        <member name="T:ftd.data.model.FdmColumnKind">
            <summary>
            欄位類型
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmColumnKind.Unknown">
            <summary>
            未知或初始類型
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmColumnKind.Native">
            <summary>
            資料庫-實體欄位
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmColumnKind.Select">
            <summary>
            Select陳述式的欄位
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmColumnKind.Calculate">
            <summary>
            模型-衍生欄位-計算欄位
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmColumnKind.Link">
            <summary>
            模型-衍生欄位-連結欄位
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmColumnLink.LinkKeyName">
            <summary>
            連結資料鍵值欄位-For Link
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmColumnLink.LinkKey">
            <summary>
            連結資料鍵值欄位-For Link
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmColumnLink.LinkValueName">
            <summary>
            連結資料來源欄位-For Get Data
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmColumnLink.LinkValue">
            <summary>
            連結資料來源欄位-For Get Data
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmColumnLink.KeyAsValueWhenLinkLess">
            <summary>
            當連結不到時，以Key作為Value的內容
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmColumnLink.LinkLessDefault">
            <summary>        
            當連結不到時的預設值
            此優先權低於KeyAsValueWhenLinkLess=true
            </summary>
        </member>
        <member name="M:ftd.data.model.FdmColumnLink.#ctor(ftd.service.FdmService)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmColumnLink.DmService">
            <summary>
            
            </summary>
        </member>
        <member name="T:ftd.data.model.FdmExtColumnsExpander">
            <summary>
            展開指定引用欄位的全部引用    
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmExtColumnsExpander.DmTable">
            <summary>
            表格
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmExtColumnsExpander.NativeColumns">
            <summary>
            要求的Native欄位集合
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmExtColumnsExpander.ExtendColumns">
            <summary>
            要求的衍生欄位集合
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmExtColumnsExpander.ExtendColumnsMaxLevel">
            <summary>
            要求的衍生欄位集合之最大階層數
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmExtColumnsExpander.DdService">
            <summary>
            服務
            </summary>
        </member>
        <member name="M:ftd.data.model.FdmExtColumnsExpander.#ctor(ftd.data.model.FdmTable,System.Collections.Generic.List{ftd.data.model.FdmColumn})">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:ftd.data.model.FdmExtColumnsExpander.addReferences(ftd.data.model.FdmColumn)">
            <summary>
            加入指定欄位與其所有參考欄位(不重複)
            </summary>
        </member>
        <member name="M:ftd.data.model.FdmExtColumnsExpander.validExtColumn(ftd.data.model.FdmColumn)">
            <summary>
            1.必須是衍生欄位
            2.非直讀衍生欄位階層必須 >= 1                                            
            3.衍生欄位必須隸屬同一表格
            </summary>          
        </member>
        <member name="M:ftd.data.model.FdmExtColumnsExpander.getLevel0ColumnNames">
            <summary>
            取得第0階會使用的欄位(Native+Direct)
            </summary>
        </member>
        <member name="M:ftd.data.model.FdmExtColumnsExpander.getLevelExtFields(System.Int32)">
            <summary>
            找尋指定階層的衍生欄位
            </summary>
        </member>
        <member name="T:ftd.data.model.FdmSystem">
            <summary>
            系統定義
            </summary>
        </member>
        <member name="M:ftd.data.model.FdmSystem.#ctor(ftd.service.FdmService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmSystem.SystemName">
            <summary>
            系統名稱
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmSystem.NameSpace">
            <summary>
            系統資料的NameSpace
            ex.用於程式產生器 DataTable, INsTable
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmSystem.TableNamePrefix">
            <summary>
            所屬資料表名稱前置符號 例:KM_
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmSystem.Tables">
            <summary>
            系統所屬資料表
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmSystem.DmService">
            <summary>
            
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmSystem.CodeGenAttributes">
            <summary>
            程式產生器屬性集合
            </summary>
        </member>
        <member name="T:ftd.data.model.FdmTable">
            <summary>
            資料表定義
            </summary>        
        </member>
        <member name="F:ftd.data.model.FdmTable.DefaultSerialNamePrefix">
            <summary>
            預設表格主鍵序號產生器前置名稱
            </summary>
        </member>
        <member name="M:ftd.data.model.FdmTable.#ctor(ftd.service.FdmService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.data.model.FdmTable.getTableSchema_Dm">
            <summary>
            取得表格的TableSchema(DM)
            </summary>
        </member>
        <member name="M:ftd.data.model.FdmTable.createDataTable">
            <summary>
            建立符合此表格的資料表
            如有強行別DataType會優先傳回
            </summary>            
        </member>
        <member name="M:ftd.data.model.FdmTable.getNextPrimaryKey">
            <summary>
            取得下個主鍵序號
            </summary>           
        </member>
        <member name="P:ftd.data.model.FdmTable.TableKind">
            <summary>
            表格類型
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.DmService">
            <summary>
            服務
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.TableProvider">
            <summary>
            TableProvider
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.TableProviderType">
            <summary>
            TableProviderType
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.TableProviderTypeName">
            <summary>
            TableProviderTypeName
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.TypedDataTable">
            <summary>
            TYPE 強行別資料表
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.TypedNsTable">
            <summary>
            TYPE 強行別資料表 for NSql
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.TypedINsTable">
            <summary>
            TYPE 強行別資料表 for NSql
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.IsSessionEnable">
            <summary>
            本表是否啟用Session功能
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.IsSessionTable">
            <summary>
            本表是否為Session表格(即本表是否為Session_XXX表格)
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.SessionTable">
            <summary>
            所屬的Session表格定義
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.TableName">
            <summary>
            資料表名稱
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.CodeGenAttributes">
            <summary>
            程式產生器屬性集合
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.PrimaryKeySerialName">
            <summary>
            主鍵序號產生器名稱
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.PrimaryKeyName">
            <summary>
            單主鍵名稱(若表格為多主鍵此值為空)
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.PrimaryKeys">
            <summary>
            表格主鍵集合
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.PrimaryKey">
            <summary>
            單主鍵(若表格為多主鍵此值為空)
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.RowUpdateDate">
            <summary>
            列更新日期
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.RowUpdateUser">
            <summary>
            列更新人員
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.RowInsertDate">
            <summary>
            列新增日期
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.RowInsertUser">
            <summary>
            列新增人員
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.RowModifyDate">
            <summary>
            異動日期 (Insert + Update)
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.RowModifyUser">
            <summary>
            異動人員 (Insert + Update)
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.NsSessionId">
            <summary>
            SessionId欄位(Session表格才有)
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.NsPrimaryKey">
            <summary>
            Session的主鍵值(Session表格才有)
            (單一Session才成立)
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.NsRowState">
            <summary>
            RowState欄位(Session表格才有)
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.RowVersionConflictEnable">
            <summary>
            版本衝突啟動嗎？
            設定資料版本的話，若資料更新時非原版本的話，會發生例外。
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.RowVersion">
            <summary>
            版本欄位          
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.ColumnNamePrefix">
            <summary>
            資料表所屬欄位前置名稱 例:BAUSR_
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.KeyPrefix">
            <summary>
            主鍵值內容的前置碼 例:EOE_
            預設值 = 欄位前置名稱
            如此值為空字串，代表主鍵為複合鍵值
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.System">
            <summary>
            資料表所屬系統
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.Columns">
            <summary>
            資料表擁有的欄位
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.Title">
            <summary>
            預設標題 ex.個案主檔
            </summary>
        </member>
        <member name="P:ftd.data.model.FdmTable.Note">
            <summary>
            備註
            </summary>
        </member>
        <member name="T:ftd.data.model.FdmTableKindEnum">
            <summary>
            表格類型
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmTableKindEnum.Table">
            <summary>
            實體表格
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmTableKindEnum.View">
            <summary>
            實體唯讀表格 | 實體Viiew
            (不會執行與資料庫的同步檢查)
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmTableKindEnum.NSqlView">
            <summary>
            NSql語法組成的View
            (不會執行與資料庫的同步檢查)
            </summary>
        </member>
        <member name="T:ftd.data.model.FdmTableUpdater">
            <summary>
            產生指定資料表的DataAdapter，可用以更新該資料表    
            </summary>
        </member>
        <member name="F:ftd.data.model.FdmTableUpdater.DdService">
            <summary>
            服務項目
            </summary>
        </member>
        <member name="M:ftd.data.model.FdmTableUpdater.#ctor(ftd.service.FdmService)">
            <summary>
            Constructor
            </summary>            
        </member>
        <member name="M:ftd.data.model.FdmTableUpdater.doUpdateTable(System.Collections.ICollection,ftd.nsql.NsSession,System.Collections.Generic.IList{System.String})">
            <summary>
            更新資料表資料
            </summary>        
        </member>
        <member name="M:ftd.data.model.FdmTableUpdater.doEmptyToNull(System.Data.DataTable,System.Data.DataRow[])">
            <summary>
            將空字串變成NULL
            </summary>
        </member>
        <member name="M:ftd.data.model.FdmTableUpdater.doAutoColumnUpdate(System.Data.DataTable,ftd.data.model.FdmTable,System.Data.DataRow[])">
            <summary>
            自動欄位更新，如列版本，異動日期
            </summary>        
        </member>
        <member name="M:ftd.data.model.FdmTableUpdater.writeBackRowVersion(ftd.data.model.FdmTable,System.Data.DataTable,System.Data.DataRow[])">
            <summary>
            回寫版本號碼，於非版本衝突模式時
            </summary>
        </member>
        <member name="M:ftd.data.model.FdmTableUpdater.importTable(System.Data.DataTable)">
            <summary>
            匯入資料，不會有預設值與任何的更新紀錄
            </summary>
        </member>
        <member name="T:ftd.dataaccess.FdbAccess">
            <summary>
            基礎資料庫存取物件
            </summary>	    
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.createDbAccessFromConfig(System.String)">
            <summary>
            依據Config取得DbAccess
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.createConnection">
            <summary>
            產生一新的DbConnection物件
            </summary>       
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.createDataAdapter">
            <summary>
            產生一新的IDbDataAdapter物件
            </summary>
            <returns></returns>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.createSqlWriter">
            <summary>
            建立SqlWriter物件
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.createCommand">
            <summary>
            產生一新的IDbCommand物件
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.logSql(System.Data.IDbCommand)">
            <summary>
            紀錄執行的SQL
            </summary>        
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.db_execute(System.Action{System.Data.IDbConnection,System.Data.IDbTransaction})">
            <summary>
            執行跟資料庫相關的操作       
            禁止關閉連線與關閉交易
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.db_execute``1(System.Func{System.Data.IDbConnection,System.Data.IDbTransaction,``0})">
            <summary>
            執行跟資料庫相關的操作,並回傳
            禁止關閉連線與關閉交易
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.doCreateActiveDbConnection">
            <summary>
            建立Active連線
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.initOpenConnection(System.Data.IDbConnection)">
            <summary>
            初始開啟的連線
            </summary>       
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.truncateTable(System.String)">
            <summary>
            Truncate Table
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.executeNonQuery(System.String)">
            <summary>
            執行處理命令
            </summary>	
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.executeNonQuery(System.Data.IDbCommand)">
            <summary>
            執行處理命令
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.executeScalar(System.String)">
            <summary>
            執行查詢，並傳回查詢所傳回的結果集 (Resultset) 第一個資料列的第一個資料行
            </summary>	
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.executeScalar(System.Data.IDbCommand)">
            <summary>
            執行查詢，並傳回查詢所傳回的結果集 (Resultset) 第一個資料列的第一個資料行
            </summary>	
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.fillDataTable(System.Data.DataTable,System.String)">
            <summary>
            對DataTable填入資料
            </summary>	
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.fillDataTable(System.Data.DataTable,System.String,System.Data.Common.DataTableMapping)">
            <summary>
            對DataTable填入資料
            </summary>	
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.fillDataTable(System.Data.DataTable,System.Data.IDbCommand)">
            <summary>
            對DataTable填入資料
            </summary>	
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.fillDataTable(System.Data.DataTable,System.Data.IDbCommand,System.Data.Common.DataTableMapping)">
            <summary>
            對DataTable填入資料
            </summary>	
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.fillDataTable(System.Data.DataTable,System.Data.IDbCommand,System.Int32,System.Int32)">
            <summary>
            對DataTable填入資料
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.fillDataTable(System.Data.DataTable,System.Data.IDbDataAdapter)">
            <summary>
            對DataTable填入資料
            </summary>	
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.beforeCommandExecute(System.Data.IDbCommand,System.Data.IDbConnection,System.Data.IDbTransaction,System.Boolean)">
            <summary>
            Command 執行前事件
            </summary>		
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.adapterUpdateTable(System.Data.IDbDataAdapter,System.Data.DataTable)">
            <summary>
            更新Table
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.adapterUpdateTableRows(System.Data.IDbDataAdapter,System.Data.DataRow[])">
            <summary>
            更新TableRow紀錄
            </summary>		
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.doAdapterUpdateTable(System.Data.IDbDataAdapter,System.Data.DataRow[])">
            <summary>
            更新Table
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.addAdapterRowEventHandler(System.Data.IDbDataAdapter)">
            <summary>
            對指定的DataAdapter加上Row事件
            </summary>        
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.removeAdapterRowEventHandler(System.Data.IDbDataAdapter)">
            <summary>
            對指定的DataAdapter移除Row事件
            </summary>        
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.onAdapterRowUpdating(System.Object,System.Data.Common.RowUpdatingEventArgs)">
            <summary>
            當資料更新前事件
            </summary>       
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.onAdapterRowUpdated(System.Object,System.Data.Common.RowUpdatedEventArgs)">
            <summary>
            當資料更新後前事件
            </summary> 
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.getParameterName(System.String)">
            <summary>
            取得實際參數名稱 例 @Hello(MSSql) :Hello(Oracle)
            </summary>
            <param node_4="paramName"></param>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.getDbTableFromDb(System.String)">
            <summary>
            傳回指定的TableSchema
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.getDbTablesFromDb">
            <summary>
            取得所有表格的定義
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.createSchemaWriter">
            <summary>
            建立SchemaWriter
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.createSqlRender">
            <summary>
            建立SqlRender
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.converFromOleCommand(System.Data.OleDb.OleDbCommand)">
            <summary>
            將OleDbCommand轉換成對應的命令
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.converToDbColumn(ftd.nsql.provider.NsTpColumn)">
            <summary>
            轉換指定的DmColumn成為DbColumn
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbAccess.getDbTableFromProvider(ftd.nsql.provider.NsTpDmTableProvider)">
            <summary>
            轉換Provider成為DbTable
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbAccess.NSQL_ObjectPrefixName">
            <summary>
            (NSQL)資料庫物件前置名稱
            例: HC2009.dbo.
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbAccess.NSQL_MaxObjectNameLength">
            <summary>
            最長的物件名稱
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbAccess.CommandTimeout">
            <summary>
            IDbCommand執行timeout(預設為30秒)
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbAccess.TransGroup">
            <summary>
            交易群組
            不同的交易群組，無法協同交易
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbAccess.ConnectionString">
            <summary>
            連線字串
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbAccess.DatabaseKind">
            <summary>
            資料庫類型
            </summary>        
        </member>
        <member name="T:ftd.dataaccess.FdbColumn">
            <summary>
            欄位定義
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbColumn.isEqlTypeWithSize(ftd.dataaccess.FdbColumn)">
            <summary>
            類型是否等於指定的類型(about Size)
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbColumn.ColumnName">
            <summary>
            欄位名稱
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbColumn.DataType">
            <summary>
            資料類型
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbColumn.IsPrimaryKey">
            <summary>
            主鍵欄位
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbColumn.IsStringType">
            <summary>
            是否為字串型別
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbColumn.Note">
            <summary>
            註解
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbColumn.StringLen">
            <summary>
            字串類型的長度 (Varchar/NVarchar/char/Nchar)
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbColumn.NumPrecision">
            <summary>
            整體數字位數
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbColumn.NumScale">
            <summary>
            小數數字位數
            </summary>
        </member>
        <member name="T:ftd.dataaccess.FdbConfigContext">
            <summary>
            資料環境設定Context    
            </summary>
        </member>
        <member name="T:ftd.data.FtdContext`1">
            <summary>
            無法跨執行緒傳送的Context
            </summary>    
        </member>
        <member name="M:ftd.data.FtdContext`1.use_begin">
            <summary>
            Context Begin 在Call Use後
            </summary>
        </member>
        <member name="M:ftd.data.FtdContext`1.use_end">
            <summary>
            Context End
            </summary>
        </member>
        <member name="P:ftd.data.FtdContext`1.Calls">
            <summary>
            Call(Now), Call(3), Call(2) .. Call(First)
            </summary>
        </member>
        <member name="P:ftd.data.FtdContext`1.PreviousCall">
            <summary>
            上一個
            </summary>
        </member>
        <member name="T:ftd.data.FtdContext`1.CUse">
            <summary>
            作為USE呼叫用
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbConfigContext.rest">
            <summary>
            重新設定
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbConfigContext.getSystemConn(System.String)">
            <summary>
            取得系統連線
            </summary>        
        </member>
        <member name="M:ftd.dataaccess.FdbConfigContext.setSystemConn(System.String,ftd.data.FtdConfigData.CDbConn)">
            <summary>
            設定系統連線
            </summary>
        </member>
        <member name="T:ftd.dataaccess.FdbDatabaseKind">
            <summary>
            資料庫類型
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbDatabaseKind.Unknown">
            <summary>
            未知的
            </summary>
        </member>
        <member name="T:ftd.dataaccess.FdbDataType">
            <summary>
            資料類型
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbDataType.NVarchar">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbDataType.Varchar">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbDataType.Float">
            <summary>
            4 bytes 7有效位數
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbDataType.Double">
            <summary>
            8 bytes 15~16 有效位數
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbDataType.Decimal">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbDataType.DateTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbDataType.Int">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbDataType.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbDataType.NText">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbDataType.BText">
            <summary>
            2015/01/01 by rmkuo
            </summary>
        </member>
        <member name="T:ftd.dataaccess.FdbJetAccess">
            <summary>
            Access OleDb DbAccess
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbJetAccess.truncateTable(System.String)">
            <summary>
            Truncate Table
            </summary>
        </member>
        <member name="T:ftd.dataaccess.FdbJetAccess.CSchemaWriter">
            <summary>
            AccessSqlSchemaWriter
            </summary>
        </member>
        <member name="T:ftd.dataaccess.FdbSchemaWriter">
            <summary>
            SchemaWriter
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbSchemaWriter.writerAlterTableSql(System.IO.StringWriter,ftd.dataaccess.FdbTable,ftd.dataaccess.FdbTable)">
            <summary>
            寫出由 Name Schema 變成 Name_U Schema的Sql命令            
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbSchemaWriter.writerNewTableSql(System.IO.StringWriter,ftd.dataaccess.FdbTable)">
            <summary>
            產生Table的Sql命令
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbJetAccess.CSchemaWriter.writerAlterTableSql(System.IO.StringWriter,ftd.dataaccess.FdbTable,ftd.dataaccess.FdbTable)">
            <summary>
            寫出由DbSchema變成DmSchema的Sql            
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbJetAccess.CSchemaWriter.writerNewTableSql(System.IO.StringWriter,ftd.dataaccess.FdbTable)">
            <summary>
            寫出DmSchema的Sql  
            </summary>         
        </member>
        <member name="M:ftd.dataaccess.FdbJetAccess.CSchemaWriter.getDbColumnDefine(ftd.dataaccess.FdbColumn)">
            <summary>
            取得TypeWithSize
            </summary>           
        </member>
        <member name="M:ftd.dataaccess.FdbExcelHelper.selectExcelSheet(System.String,System.String)">
            <summary>
            取得指定Excel檔案 Sheet內容
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbOracle10Access.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbOracle10Access.getDbTableFromProvider(ftd.nsql.provider.NsTpDmTableProvider)">
            <summary>
            轉換Provider成為DbTable
            </summary>
        </member>
        <member name="T:ftd.dataaccess.FdbOracle10Access.CSchemaWriter">
            <summary>
            OracleSqlSchemaWriter
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbOracle10Access.CSchemaWriter.writerAlterTableSql(System.IO.StringWriter,ftd.dataaccess.FdbTable,ftd.dataaccess.FdbTable)">
            <summary>
            寫出由 Name Schema 變成 Name_U Schema的Sql命令            
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbOracle10Access.CSchemaWriter.getDbColumnDefine(ftd.dataaccess.FdbColumn)">
            <summary>
            取得TypeWithSize
            </summary>           
        </member>
        <member name="T:ftd.dataaccess.FdbSqlWriter">
            <summary>
            簡單SqlWriter
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbSqlWriter.contains(System.String)">
            <summary>
            like '%VALUE%'
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbSqlWriter.toSqlConstString(System.Object)">
            <summary>
            轉為sql const string
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbSqlWriter.toSqlConstNumber(System.Object)">
            <summary>
            轉為sql const Number
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbSqlWriter.toSqlConst(System.String)">
            <summary>
            轉為sql const
            </summary>
        </member>
        <member name="T:ftd.dataaccess.FdbSql2kAccess">
            <summary>
            SQL2KAccess 的摘要描述。
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbSql2kAccess.getDbTablesFromDb">
            <summary>
            取得所有表格的定義
            </summary>
        </member>
        <member name="T:ftd.dataaccess.FdbSql2kAccess.CSchemaWriter">
            <summary>
            MsSqlSchemaWriter
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbSql2kAccess.CSchemaWriter.writerAlterTableSql(System.IO.StringWriter,ftd.dataaccess.FdbTable,ftd.dataaccess.FdbTable)">
            <summary>
            寫出由 Name Schema 變成 Name_U Schema的Sql命令            
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbSql2kAccess.CSchemaWriter.getDbColumnDefine(ftd.dataaccess.FdbColumn)">
            <summary>
            取得TypeWithSize
            </summary>           
        </member>
        <member name="T:ftd.dataaccess.FdbTable">
            <summary>
            表格定義
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbTable.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbTable.findColumn(System.String)">
            <summary>
            搜尋欄位
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbTable.TableName">
            <summary>
            表格名稱
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbTable.Columns">
            <summary>
            欄位集合
            </summary>
        </member>
        <member name="T:ftd.dataaccess.FdbTransObject">
            <summary>
            交易物件
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbTransObject.TransList">
            <summary>
            Trans List
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbTransObject.db_getConnection(ftd.dataaccess.FdbAccess)">
            <summary>
            取得連線物件 (For dbAccess)
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbTransObject.db_getTransaction">
            <summary>
            取得交易物件 (For dbAccess)
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbTransObject.db_closeConnection(System.Data.IDbConnection)">
            <summary>
            關閉連線物件 (For dbAccess)
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbTransObject.newTransObject">
            <summary>
            產生新的TransCache並加入
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbTransObject.removeTransObject(System.String)">
            <summary>
            移除指定的Trans
            </summary>        
        </member>
        <member name="M:ftd.dataaccess.FdbTransObject.getTransObject(System.String)">
            <summary>
            取得TransCache
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbTransObject.makeSureSingleCall(System.Action)">
            <summary>
            確保單工運行
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbTransObject.JoinTrans">
            <summary>
            一同參與的交易
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbTransObject.Local_Connection">
            <summary>
            本機交易 連線物件
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbTransObject.Local_Trans">
            <summary>
            本機交易 交易物件
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbTransObject.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbTransObject.trans_begin">
            <summary>
            交易開始(Call By Conext)
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbTransObject.trans_complete">
            <summary>
            交易完成(Call By Conext)
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbTransObject.doCommit">
            <summary>
            完成交易
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbTransObject.trans_abort">
            <summary>
            交易取消(Call By Conext)
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbTransObject.TransId">
            <summary>
            Trans Object Id
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbTransObject.TransLevel">
            <summary>
            TransLevel 
            0.Finish
            1.Init
            -1.Abort
            </summary>
        </member>
        <member name="T:ftd.dataaccess.FdbTransScope">
            <summary>
            本機資料庫交易
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbTransScope.TransStatus">
            <summary>
            1.Init 0.Complete -1.Exception
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbTransScope.#ctor(ftd.dataaccess.FdbTransScopeOption)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.dataaccess.FdbTransScope.complete">
            <summary>
            完成交易
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbTransScope.JoinTrans">
            <summary>
            一同參予資料庫交易的對象
            必須在USE前就加入
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbTransScope.TransId">
            <summary>
            Trans Cache Id
            </summary>
        </member>
        <member name="P:ftd.dataaccess.FdbTransScope.Scope">
            <summary>
            交易範圍
            </summary>
        </member>
        <member name="T:ftd.dataaccess.FdbTransScope.IJoinTran">
            <summary>
            參予資料庫交易的介面
            </summary>
        </member>
        <member name="T:ftd.dataaccess.FdbTransScopeOption">
            <summary>
            交易範圍
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbTransScopeOption.Required">
            <summary>
            必須有交易，或參予已存在的交易
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbTransScopeOption.RequiresNew">
            <summary>
            必須有新交易
            </summary>
        </member>
        <member name="F:ftd.dataaccess.FdbTransScopeOption.Suppress">
            <summary>
            禁止交易
            </summary>
        </member>
        <member name="T:ftd.web.ui.FtdWebUiExt">
            <summary>
            Web控制項的擴充函數
            </summary>
        </member>
        <member name="M:ftd.web.ui.FtdWebUiExt.ns_findAllExt(ftd.web.ui.FwbWebGrid)">
            <summary>
            搜尋WebGrid全部的衍生欄位
            </summary>
        </member>
        <member name="M:ftd.web.ui.FtdWebUiExt.ns_findAll(ftd.web.ui.FwbWebGrid)">
            <summary>
            搜尋WebGrid全部的欄位(包含衍生欄位)
            </summary>
        </member>
        <member name="T:ftd.FtdCsvHelper">
            <summary>
            處理csv格式的工具
            </summary>
        </member>
        <member name="M:ftd.FtdCsvHelper.DataTableToCSV(System.Data.DataTable)">
            <summary>
            將DataTable的欄位名稱和記錄內容轉換為CSV格式
            </summary>
        </member>
        <member name="M:ftd.FtdCsvHelper.DataTableToCSV(System.Data.DataTable,System.Collections.Generic.ICollection{ftd.FtdCsvHelper.ColumnCaptionPair})">
            <summary>
            依欄位名稱和標題來轉換DataTable
            </summary>
        </member>
        <member name="M:ftd.FtdCsvHelper.DataViewToCSV(System.Data.DataView)">
            <summary>
            將DataView的欄位名稱和記錄內容轉換為CSV格式
            </summary>
        </member>
        <member name="M:ftd.FtdCsvHelper.DataViewToCSV(System.Data.DataView,System.Collections.Generic.ICollection{ftd.FtdCsvHelper.ColumnCaptionPair})">
            <summary>
            依欄位名稱和標題來轉換DataView
            </summary>
        </member>
        <member name="M:ftd.FtdCsvHelper.Encode(System.String)">
            <summary>
            將字串格式為csv欄位
            </summary>
        </member>
        <member name="T:ftd.FtdCsvHelper.ColumnCaptionPair">
            <summary>
            欄位名稱與標題的配對
            </summary>
        </member>
        <member name="F:ftd.nsql.provider.NsTpCalcData.Handler">
            <summary>
            計算欄位求值處理者
            </summary>
        </member>
        <member name="F:ftd.nsql.provider.NsTpCalcData.ReferenceColumns">
            <summary>
            計算程序需參考的欄位
            </summary>
        </member>
        <member name="T:ftd.nsql.provider.NsTpColumn">
            <summary>
            欄位定義
            </summary>
        </member>
        <member name="F:ftd.nsql.provider.NsTpColumn.TableProvider">
            <summary>
            表格
            </summary>      
        </member>
        <member name="M:ftd.nsql.provider.NsTpColumn.#ctor(ftd.nsql.provider.NsTpTableProvider,System.String,ftd.nsql.NsDataType,System.String,ftd.data.model.FdmColumnKind,System.Boolean)">
            <summary>
            Constructor
            </summary>        
        </member>
        <member name="M:ftd.nsql.provider.NsTpColumn.#ctor(ftd.nsql.provider.NsTpTableProvider,ftd.data.model.FdmColumn)">
            <summary>
            Constructor
            </summary>        
        </member>
        <member name="P:ftd.nsql.provider.NsTpColumn.DataType">
            <summary>
            資料型別
            </summary>
        </member>
        <member name="P:ftd.nsql.provider.NsTpColumn.DotNetType">
            <summary>
            DotNet資料型別
            </summary>
        </member>
        <member name="P:ftd.nsql.provider.NsTpColumn.ColumnKind">
            <summary>
            欄位類型
            </summary>
        </member>
        <member name="P:ftd.nsql.provider.NsTpColumn.IsDirectable">
            <summary>
            是否可以直讀
            </summary>
        </member>
        <member name="P:ftd.nsql.provider.NsTpColumn.ColumnName">
            <summary>
            欄位名稱
            </summary>
        </member>
        <member name="P:ftd.nsql.provider.NsTpColumn.DbColumnName">
            <summary>
            資料庫-欄位名稱
            </summary>
        </member>
        <member name="P:ftd.nsql.provider.NsTpColumn.DbReadOnly">
            <summary>
            資料庫-唯讀性質
            </summary>
        </member>
        <member name="P:ftd.nsql.provider.NsTpColumn.Note">
            <summary>
            註解
            </summary>
        </member>
        <member name="T:ftd.nsql.provider.NsTpDataMap">
            <summary>
            資料映對
            </summary>
        </member>
        <member name="F:ftd.nsql.provider.NsTpDataMap.DataName">
            <summary>
            資料名稱
            </summary>
        </member>
        <member name="F:ftd.nsql.provider.NsTpDataMap.DbName">
            <summary>
            資料庫-資料名稱
            </summary>
        </member>
        <member name="F:ftd.nsql.provider.NsTpDataMap.ReadOnly">
            <summary>
            是否是唯讀性質
            </summary>
        </member>
        <member name="T:ftd.nsql.provider.NsTpCalcHandler">
            <summary>
            計算欄位求值處理者
            </summary>        
        </member>
        <member name="T:ftd.nsql.provider.NsTpSqlHandler">
            <summary>
            計算欄位求值處理者(直讀欄位)
            </summary>    
        </member>
        <member name="T:ftd.nsql.provider.NsTpTableProvider">
            <summary>
            表格資料提供者
            </summary>
        </member>
        <member name="F:ftd.nsql.provider.NsTpTableProvider.DataMaps">
            <summary>
            資料映對表
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpTableProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpTableProvider.findColumn(System.String)">
            <summary>
            尋找指定欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpTableProvider.addDataMap(System.String,System.Boolean)">
            <summary>
            加入資料對應
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpTableProvider.addDataMap(System.String,System.String)">
            <summary>
            加入資料對應
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpTableProvider.addDataMap(System.String,System.String,System.Boolean)">
            <summary>
            加入資料對應
            </summary>
        </member>
        <member name="P:ftd.nsql.provider.NsTpTableProvider.TableName">
            <summary>
            表格名稱
            </summary>
        </member>
        <member name="P:ftd.nsql.provider.NsTpTableProvider.Columns">
            <summary>
            欄位集合
            </summary>
        </member>
        <member name="P:ftd.nsql.provider.NsTpTableProvider.Note">
            <summary>
            備註
            </summary>
        </member>
        <member name="P:ftd.nsql.provider.NsTpTableProvider.DbTableName">
            <summary>
            資料庫-表格名稱
            </summary>
        </member>
        <member name="P:ftd.nsql.provider.NsTpTableProvider.DbReadOnly">
            <summary>
            資料庫-唯讀性質
            </summary>
        </member>
        <member name="P:ftd.nsql.provider.NsTpTableProvider.DbAccess">
            <summary>
            資料存取
            </summary>
        </member>
        <member name="T:ftd.nsql.NsQueryContext">
            <summary>
            NsSql查詢參數
            NsSql查詢時，會檢查有沒有環境參數，如果沒有一定會建立一個。
            </summary>
        </member>
        <member name="M:ftd.nsql.NsQueryContext.getCurrentValue(System.String)">
            <summary>
            取得目前Context的參數，
            如果目前Context不存在，則回傳NULL
            </summary>
        </member>
        <member name="M:ftd.nsql.NsQueryContext.getCurrentUserId">
            <summary>
            取得目前Context的CurrentUserId，
            如果目前Context不存在，則回傳NULL
            </summary>
        </member>
        <member name="M:ftd.nsql.NsQueryContext.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:ftd.nsql.NsQueryContext.Params">
            <summary>
            查詢參數
            </summary>
        </member>
        <member name="P:ftd.nsql.NsQueryContext.UserId">
            <summary>
            目前使用者Id, 其值將被自動記錄異動使用者的系統功能所呼叫        
            </summary>
        </member>
        <member name="P:ftd.nsql.NsQueryContext.Item(System.String)">
            <summary>
            查詢參數
            </summary>
        </member>
        <member name="T:ftd.nsql.NSQL">
            <summary>
            查詢Helper
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.converToDotNetType(ftd.nsql.NsDataType)">
            <summary>
            轉成DotNet型別
            </summary>        
        </member>
        <member name="M:ftd.nsql.NSQL.converFromDotNetType(System.Type)">
            <summary>
            轉成VsDataType
            </summary>        
        </member>
        <member name="M:ftd.nsql.NSQL.getCondition(System.Func{ftd.nsql.NsValue,ftd.nsql.NsValue})">
            <summary>
            取得條件式
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.getdate">
            <summary>
            取得系統日期
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.inquery(ftd.nsql.NsDbQuery,ftd.nsql.NsValue,ftd.nsql.NsSqlFunc)">
            <summary>
            in SubQuery
            Only Can Use in DbQuery
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.inquery(ftd.nsql.NsValue,ftd.nsql.NsSqlFunc)">
            <summary>
            in SubQuery
            Only Can Use in DbQuery
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.round(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            四捨5入
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.like(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            %為任意字串(數量>=0)
            _為任意字元(數量==1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.like(ftd.nsql.NsValue,ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            %為任意字串(數量>=0)
            _為任意字元(數量==1)        
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.contains(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            是否包含特定內容
            同like('%' + data + '%')
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.contains(ftd.nsql.NsValue,ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            是否包含特定內容
            同like('%' + data + '%')
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.concat(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            字串相加
            </summary>     
        </member>
        <member name="M:ftd.nsql.NSQL.addSeconds(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            時間追加秒數
            <param name="value">日期</param>
            <param name="seconds">秒數(int)</param>
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.addMinutes(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            時間追加分鐘
            <param name="value">日期</param>
            <param name="minutes">分鐘(int)</param>
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.addHours(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            時間追加小時
            <param name="value">日期</param>
            <param name="hours">小時(int)</param>
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.addDays(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            時間追加天數
            <param name="value">日期</param>
            <param name="days">天數(int)</param>
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.todatetime(ftd.nsql.NsValue,ftd.nsql.NsDataFormat)">
            <summary>
            轉成日期
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.toNetValue(ftd.nsql.NsValue)">
            <summary>
            將指定的物件(必須是常數)轉成DotNet數值
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.toNetValue``1(ftd.nsql.NsValue)">
            <summary>
            將指定的物件(必須是常數)轉成DotNet數值
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.isnull(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            空值轉換
            如受測值為空值回應指定內容，否則回應受測值。
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.nullif(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            空值轉換
            nullif(a, b) => a==b ? null : a;
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.betweenDateOpt1(ftd.nsql.NsValue,ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            介於日期(欄位,日期1, 日期2)
            </summary>    
        </member>
        <member name="M:ftd.nsql.NSQL.case">
            <summary>
            SQL-Case When 語法
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.case(ftd.nsql.NsValue)">
            <summary>
            SQL-Case When 語法
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.iif(ftd.nsql.NsValue,ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            SQL-Case When 語法
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.decode(ftd.nsql.NsValue,ftd.nsql.NsValue,ftd.nsql.NsValue,ftd.nsql.NsValue[])">
            <summary>
            ORACLE decode函數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.requireVar(ftd.nsql.NsValue,System.Boolean)">
            <summary>
            必要性變數(條件自定)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.optionalVar(ftd.nsql.NsValue,System.Boolean)">
            <summary>
            選擇性變數(條件自定)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.optionalVar1(ftd.nsql.NsValue)">
            <summary>
            選擇性變數(長度>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.requireVar1(ftd.nsql.NsValue)">
            <summary>
            必要性變數(長度>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.require(ftd.nsql.NsValue)">
            <summary>
            必要性陳述式
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.optional(ftd.nsql.NsValue)">
            <summary>
            選擇性陳述式
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.conditionVarStandard(ftd.nsql.NsVarCondition,ftd.nsql.NsValue)">
            <summary>
            標準變數條件式
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL.conditionVar(System.Boolean,ftd.nsql.NsVarCondition,ftd.nsql.NsValue)">
            <summary>
            變數條件式
            </summary>
        </member>
        <member name="T:ftd.nsql.provider.NsTpDmTableProvider">
            <summary>
            Dm表格資料提供者
            </summary>
        </member>
        <member name="F:ftd.nsql.provider.NsTpDmTableProvider.CalcHanlders">
            <summary>
            計算Handler
            (Hanlder, ReferecneFields)
            </summary>
        </member>
        <member name="F:ftd.nsql.provider.NsTpDmTableProvider.SqlHanlders">
            <summary>
            計算Handler(直讀欄位)
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.initTableProvider(ftd.data.model.FdmTable)">
            <summary>
            初始TableProvider,由DdService呼叫,此時所有Provider尚未載入完成
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.initTableProviderII">
            <summary>
            初始TableProvider,由DdService呼叫,此時所有Provider已載入完成 
            整體性計算也已經完成
            </summary>        
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.onSchemaLoading">
            <summary>
            載入定義-初始
            通常加入欄位資料
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.onSchemaLoaded">
            <summary>
            載入定義-完成
            通常加入自訂計算程序
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.onSchemaLoaded_Auto">
            <summary>
            載入定義-完成
            通常加入自動計算程序 例:CodeName
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.onSchemaLoadedII">
            <summary>
            載入定義-完成
            通常加入實體欄位對應
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.getSqlExpress(ftd.nsql.NsColumn)">
            <summary>
            取得指定欄位的SQL陳述式
            例: t11.A_XX => t11.A1 + t11.A2
            </summary>        
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.dm_calc_extcolumns(System.Data.DataTable,System.Collections.Generic.List{System.String})">
            <summary>
            計算衍生欄位
            這裡的衍生欄位一定都是非值讀的
            </summary>       
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.calc_sql_calc(System.Data.DataTable,System.Collections.Generic.List{System.String})">
            <summary>
            要求算出計算欄位為(Sql)
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.addCalcHandler(System.String,System.String[],ftd.nsql.provider.NsTpCalcHandler)">
            <summary>
            計算欄位求值處理函數
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.addCalcHandler(System.String[],System.String[],ftd.nsql.provider.NsTpCalcHandler)">
            <summary>
            計算欄位求值處理函數
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.addSqlHandler(System.String,ftd.nsql.provider.NsTpSqlHandler)">
            <summary>
            計算欄位求值處理函數
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.getTableMapping">
            <summary>
            取得TableMapping
            </summary>        
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.createDbDataAdapter(System.Collections.Generic.IList{System.String},System.Boolean)">
            <summary>
            產生指定資料表的DbDataAdapter
            (可指名只要更新的欄位{updateColumnNames})
            (可指定為匯入模式版本控制將不起作用{isImportMode})
            </summary>        
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.setSqlView(ftd.nsql.NsDbQuery,ftd.nsql.NsViewTable)">
            <summary>
            建立SqlView
            </summary>        
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.createTable">
            <summary>
            建立一個Table
            </summary>
            <returns></returns>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.isSqlHandlerExists(System.String)">
            <summary>
            欄位是否存在自訂的SqlHandler
            </summary>        
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.isCalcHandlerExists(System.String)">
            <summary>
            欄位是否存在自訂的CalcHandler or SqlHandler
            </summary>        
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.getCalcReferColumns(System.String)">
            <summary>
            取得計算欄位的參考欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.getSqlReferColumns(System.String)">
            <summary>
            取得計算欄位的參考欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTableProvider.clone_provider">
            <summary>
            自我Clone
            </summary>
        </member>
        <member name="P:ftd.nsql.provider.NsTpDmTableProvider.DmTable">
            <summary>
            FdmTable
            </summary>
        </member>
        <member name="P:ftd.nsql.provider.NsTpDmTableProvider.DbAccess">
            <summary>
            資料存取
            </summary>
        </member>
        <member name="T:ftd.nsql.provider.NsTpDmTableProvider.EnumColumnUpdateKind">
            <summary>
            欄位更新模式
            </summary>
        </member>
        <member name="F:ftd.nsql.provider.NsTpDmTableProvider.EnumColumnUpdateKind.PK_Updateable">
            <summary>
            主鍵欄位(可更新)
            </summary>
        </member>
        <member name="F:ftd.nsql.provider.NsTpDmTableProvider.EnumColumnUpdateKind.PK_NoUpdate">
            <summary>
            主鍵欄位(不可更新,因為非限定)
            </summary>
        </member>
        <member name="F:ftd.nsql.provider.NsTpDmTableProvider.EnumColumnUpdateKind.DATA">
            <summary>
            資料欄位
            </summary>
        </member>
        <member name="F:ftd.nsql.provider.NsTpDmTableProvider.EnumColumnUpdateKind.VERSION_CONFLICT">
            <summary>
            版本欄位,欄位以目前值更新，並列入Where條件式
            </summary>
        </member>
        <member name="F:ftd.nsql.provider.NsTpDmTableProvider.EnumColumnUpdateKind.VERSION_LOG">
            <summary>
            版本欄位,欄位不以目前值更新，而是加一後回傳
            </summary>
        </member>
        <member name="F:ftd.nsql.provider.NsTpDmTableProvider.EnumColumnUpdateKind.NO_UPDATE">
            <summary>
            免更新欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTypedTableProvider`2.addTypedCalcHandler">
            <summary>
            計算欄位求值處理函數
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTypedTableProvider`2.addTypedSqlHandler">
            <summary>
            計算欄位求值處理函數
            </summary>
        </member>
        <member name="T:ftd.nsql.provider.NsTpDmTypedTableProvider`2.C1">
            <summary>
            C1
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTypedTableProvider`2.C1.setColumns(System.String[])">
            <summary>
            設定要計算的欄位
            </summary>            
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTypedTableProvider`2.C1.setReferences(System.String[])">
            <summary>
            設定要引用的欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTypedTableProvider`2.C1.setHandler(ftd.nsql.provider.NsTpDmTypedTableProvider{`0,`1}.CTypedCalcHandler)">
            <summary>
            設定計算程序的欄位
            </summary>
        </member>
        <member name="T:ftd.nsql.provider.NsTpDmTypedTableProvider`2.C2">
            <summary>
            C2
            </summary>
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTypedTableProvider`2.C2.setColumns(System.String)">
            <summary>
            設定要計算的欄位
            </summary>            
        </member>
        <member name="M:ftd.nsql.provider.NsTpDmTypedTableProvider`2.C2.setHandler(ftd.nsql.provider.NsTpDmTypedTableProvider{`0,`1}.CTypedDirectHandler)">
            <summary>
            設定計算程序的欄位
            </summary>
        </member>
        <member name="T:ftd.nsql.provider.NsTpDmTypedTableProvider`2.CTypedCalcHandler">
            <summary>
            計算欄位求值處理者
            </summary>        
        </member>
        <member name="T:ftd.nsql.provider.NsTpDmTypedTableProvider`2.CTypedDirectHandler">
            <summary>
            計算欄位求值處理者(直讀欄位)
            </summary>    
        </member>
        <member name="T:ftd.nsql.NsTableProxy">
            <summary>
            TableProxy
            </summary>
        </member>
        <member name="T:ftd.nsql.INsTable">
            <summary>
            強型別表格介面
            </summary>
        </member>
        <member name="M:ftd.nsql.INsTable.tryLink``1(System.Func{``0,ftd.nsql.NsValue})">
            <summary>
            Name.tryLink(Name_U) => 確定表格有A left join Name_U on XXXX 的關係
            並回傳B
            </summary>
        </member>
        <member name="P:ftd.nsql.INsTable.AllPhysical">
            <summary>
            所有實體欄位
            </summary>
        </member>
        <member name="P:ftd.nsql.INsTable.AllExt">
            <summary>
            所有衍生欄位
            </summary>
        </member>
        <member name="P:ftd.nsql.INsTable.AllDirect">
            <summary>
            所有直讀的衍生欄位
            </summary>
        </member>
        <member name="P:ftd.nsql.INsTable.PrimaryKey">
            <summary>
            主鍵值
            </summary>
        </member>
        <member name="P:ftd.nsql.INsTable.DbQuery">
            <summary>
            Query
            </summary>
        </member>
        <member name="P:ftd.nsql.INsTable.Item(System.String)">
            <summary>
            表格欄位
            </summary>
        </member>
        <member name="P:ftd.nsql.INsTable.Item(System.Int32)">
            <summary>
            表格欄位
            </summary>
        </member>
        <member name="P:ftd.nsql.INsTable.Entity">
            <summary>
            實體NsTable
            </summary>
        </member>
        <member name="M:ftd.nsql.NsTableProxy.#ctor(ftd.nsql.INsTable)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.nsql.NsTableProxy.typed``1(System.Func{ftd.nsql.NsTableProxy,``0})">
            <summary>
            轉換成強行別Select表格
            </summary>
        </member>
        <member name="M:ftd.nsql.INsValue.As(System.String)">
            <summary>
            設定別名
            </summary>
        </member>
        <member name="P:ftd.nsql.INsValue.Entity">
            <summary>
            實際代表的NsValue
            </summary>
        </member>
        <member name="P:ftd.nsql.INsValue.Asc">
            <summary>
            正向排序
            </summary>          
        </member>
        <member name="P:ftd.nsql.INsValue.Desc">
            <summary>
            逆向排序
            </summary>
        </member>
        <member name="T:ftd.nsql.render.NsBatchSqlGenerator">
            <summary>
            批次SQL產生器
            </summary>
        </member>
        <member name="F:ftd.nsql.render.NsBatchSqlGenerator.SqlTemplate">
            <summary>
            SQL樣本
            </summary>
        </member>
        <member name="F:ftd.nsql.render.NsBatchSqlGenerator.ConstValues">
            <summary>
            批次函數節點
            </summary>
        </member>
        <member name="F:ftd.nsql.render.NsBatchSqlGenerator.SqlRender">
            <summary>
            SQLRender
            </summary>
        </member>
        <member name="F:ftd.nsql.render.NsBatchSqlGenerator.BatchSqls">
            <summary>
            批次SQL命令
            </summary>
        </member>
        <member name="F:ftd.nsql.render.NsBatchSqlGenerator.Values">
            <summary>
            轉成SQL的所有輸出
            </summary>
        </member>
        <member name="F:ftd.nsql.render.NsBatchSqlGenerator.Marks">
            <summary>
            標記
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsBatchSqlGenerator.doGenerator">
            <summary>
            建立批次SQL
            </summary>        
        </member>
        <member name="M:ftd.nsql.render.NsBatchSqlGenerator.generateSql(System.Int32,System.Int32)">
            <summary>
            依據值起訖產生SQL並加入輸出
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsBatchSqlGenerator.replaceMark(System.Collections.Generic.List{ftd.nsql.render.NsBatchSqlGenerator.CMark})">
            <summary>
            將Mark取代為指定的值
            </summary>
        </member>
        <member name="F:ftd.nsql.render.NsBatchSqlGenerator.CMark.ColumnExpression">
            <summary>
            欄位位陳述式 例 t11.HelloWorld
            </summary>
        </member>
        <member name="F:ftd.nsql.render.NsBatchSqlGenerator.CMark.ReplaceContent">
            <summary>
            置換內容 例 t11.HelloWorld in ('Name', 'Name_U', 'C')
            </summary>
        </member>
        <member name="T:ftd.nsql.NsCaseWhenExecuter">
            <summary>
            CaseWhen執行者
            </summary>
        </member>
        <member name="T:ftd.nsql.NsExecuter">
            <summary>
            實際運算式執行
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExecuter.Context">
            <summary>
            執行環境
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExecuter.ValueNode">
            <summary>
            值節點
            </summary>
        </member>
        <member name="M:ftd.nsql.NsExecuter.prepareExecuter(ftd.nsql.NsExecuteContext,ftd.nsql.NsValue)">
            <summary>
            備妥Executer
            </summary>      
        </member>
        <member name="M:ftd.nsql.NsExecuter.getValue">
            <summary>
            取得其值
            </summary>
        </member>
        <member name="T:ftd.nsql.NsCaseWhenValue">
            <summary>
            CaseWhenValue
            </summary>
        </member>
        <member name="T:ftd.nsql.NsValue">
            <summary>
            基本數值
            </summary>
        </member>
        <member name="T:ftd.nsql.NsNode">
            <summary>
            基本節點
            </summary>    
        </member>
        <member name="M:ftd.nsql.NsNode.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.nsql.NsNode.createSqlRender">
            <summary>
            建立SqlRender
            </summary>
        </member>
        <member name="M:ftd.nsql.NsNode.renderSql(ftd.nsql.render.NsSqlRender)">
            <summary>
            繪製sql
            </summary>        
        </member>
        <member name="M:ftd.nsql.NsNode.replaceChild(ftd.nsql.NsNode,ftd.nsql.NsNode)">
            <summary>
            以新節點取代舊節點，並且不可變動順序。
            </summary>
        </member>
        <member name="M:ftd.nsql.NsNode.cloneValue_Tree">
            <summary>
            複製值程序-(複製本節點與所屬子節點)
            </summary>
        </member>
        <member name="M:ftd.nsql.NsNode.cloneValue_node">
            <summary>
            複製值程序-(不含子節點)
            </summary>
        </member>
        <member name="M:ftd.nsql.NsNode.addNodes(ftd.nsql.NsNode[])">
            <summary>
            加入節點
            </summary>        
        </member>
        <member name="M:ftd.nsql.NsNode.removeByParent">
            <summary>
            自父節點移除自己
            </summary>
        </member>
        <member name="M:ftd.nsql.NsNode.addNodes(System.Collections.IList)">
            <summary>
            加入節點
            </summary>
        </member>
        <member name="M:ftd.nsql.NsNode.removeNode(ftd.nsql.NsNode)">
            <summary>
            移除子節點
            </summary>
        </member>
        <member name="M:ftd.nsql.NsNode.cloneNodeTree(ftd.nsql.NsNode.DCloneNode,ftd.nsql.NsNode.DAddCloneNode)">
            <summary>
            Clone節點樹結構
            </summary>
        </member>
        <member name="M:ftd.nsql.NsNode.onReBinding">
            <summary>
            重新繫結
            </summary>
        </member>
        <member name="P:ftd.nsql.NsNode.ParentNode">
            <summary>
            父節點
            </summary>        
        </member>
        <member name="P:ftd.nsql.NsNode.Nodes">
            <summary>
            子節點集合
            </summary>        
        </member>
        <member name="P:ftd.nsql.NsNode.Note">
            <summary>
            註解
            </summary>
        </member>
        <member name="P:ftd.nsql.NsNode.SQLWithNote">
            <summary>
            SQL命令(含註解的)
            </summary>
        </member>
        <member name="P:ftd.nsql.NsNode.SQL">
            <summary>
            Sql命令
            </summary>
        </member>
        <member name="T:ftd.nsql.NsNode.DCloneNode">
            <summary>
            建立節點
            </summary>
        </member>
        <member name="T:ftd.nsql.NsNode.DAddCloneNode">
            <summary>
            加入子節點
            </summary>        
        </member>
        <member name="M:ftd.nsql.NsValue.As(System.String)">
            <summary>
            設定別名
            </summary>
        </member>
        <member name="F:ftd.nsql.NsValue.Executer">
            <summary>
            執行者
            </summary>
        </member>
        <member name="M:ftd.nsql.NsValue.op_Addition(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            Add
            </summary>
        </member>
        <member name="M:ftd.nsql.NsValue.op_Subtraction(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            Subtract
            </summary>
        </member>
        <member name="M:ftd.nsql.NsValue.op_Multiply(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            Multiply
            </summary>
        </member>
        <member name="M:ftd.nsql.NsValue.op_Division(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            Divide
            </summary>
        </member>
        <member name="M:ftd.nsql.NsValue.op_BitwiseAnd(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            and
            </summary>
        </member>
        <member name="M:ftd.nsql.NsValue.op_BitwiseOr(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            or
            </summary>
        </member>
        <member name="M:ftd.nsql.NsValue.isDelegateChildsExecuter">
            <summary>
            是否代理子節點的執行者建立
            通常只有CaseWhen會傳回True
            </summary>
        </member>
        <member name="M:ftd.nsql.NsValue.prepareExecute(ftd.nsql.NsExecuteContext)">
            <summary>
            準備執行
            </summary>
        </member>
        <member name="M:ftd.nsql.NsValue.cloneValue">
            <summary>
            複製陳述式
            </summary>        
        </member>
        <member name="P:ftd.nsql.NsValue.EmptyExpress">
            <summary>
            空陳述式
            </summary>
        </member>
        <member name="P:ftd.nsql.NsValue.AsName">
            <summary>
            別名
            </summary>
        </member>
        <member name="P:ftd.nsql.NsValue.IsConstExpr">
            <summary>
            指出這個內容，是否是一個常數運算式
            例如 "Name".ToUpper().Left(3) 或是 "Name" + "Name_U"        
            </summary>
        </member>
        <member name="P:ftd.nsql.NsValue.IsNull">
            <summary>
            是否為常數NULL值
            </summary>
        </member>
        <member name="P:ftd.nsql.NsValue.IsEmptyString">
            <summary>
            是否為空字串，連續空白也算。
            </summary>
        </member>
        <member name="P:ftd.nsql.NsValue.IsEmptyRequire">
            <summary>
            特殊值:是否為EmptyRequire
            </summary>
        </member>
        <member name="P:ftd.nsql.NsValue.IsEmptyOptional">
            <summary>
            特殊值:是否為EmptyOptional
            </summary>
        </member>
        <member name="P:ftd.nsql.NsValue.IsEmpty">
            <summary>
            特殊值:是否為EmptyRequire or EmptyOptional
            </summary>
        </member>
        <member name="P:ftd.nsql.NsValue.DataType">
            <summary>
            資料型別
            </summary>
        </member>
        <member name="P:ftd.nsql.NsValue.DotNetType">
            <summary>
            DotNet資料型別
            </summary>
        </member>
        <member name="P:ftd.nsql.NsValue.Asc">
            <summary>
            正向排序
            </summary>          
        </member>
        <member name="P:ftd.nsql.NsValue.Desc">
            <summary>
            逆向排序
            </summary>
        </member>
        <member name="M:ftd.nsql.NsCaseWhenValue.createCaseNode">
            <summary>
            建立Case節點
            </summary>
        </member>
        <member name="M:ftd.nsql.NsCaseWhenValue.createCaseNode(ftd.nsql.NsValue)">
            <summary>
            建立Case節點
            </summary>
        </member>
        <member name="M:ftd.nsql.NsCaseWhenValue.addWhenThenNode(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            加入When節點
            </summary>
        </member>
        <member name="M:ftd.nsql.NsCaseWhenValue.addElseNode(ftd.nsql.NsValue)">
            <summary>
            加入Else節點
            </summary>
        </member>
        <member name="M:ftd.nsql.NsCaseWhenValue.checkSyntax">
            <summary>
            檢查語法是否完整正確
            </summary>
        </member>
        <member name="P:ftd.nsql.NsCaseWhenValue.CaseNode">
            <summary>
            CaseNode 有時是空的
            </summary>
        </member>
        <member name="P:ftd.nsql.NsCaseWhenValue.WhenThenNodes">
            <summary>
            WhenThenNodes
            </summary>
        </member>
        <member name="P:ftd.nsql.NsCaseWhenValue.ElseNode">
            <summary>
            Else陳述式
            </summary>
        </member>
        <member name="T:ftd.nsql.NsCaseWhenValue.CWNodeKind">
            <summary>
            CaseWhen節點類型
            </summary>
        </member>
        <member name="F:ftd.nsql.NsCaseWhenValue.CWNodeKind.CaseNode">
            <summary>
            Case XXX or Case end
            </summary>
        </member>
        <member name="F:ftd.nsql.NsCaseWhenValue.CWNodeKind.WhenThenNode">
            <summary>
            When XXX then XXX
            </summary>
        </member>
        <member name="F:ftd.nsql.NsCaseWhenValue.CWNodeKind.ElseNode">
            <summary>
            Else XXX
            </summary>
        </member>
        <member name="T:ftd.nsql.NsCaseWhenValue.ICWNode">
            <summary>
            使用者介面
            </summary>
        </member>
        <member name="T:ftd.nsql.NsCaseWhenValue.CWNode">
            <summary>
            Node(Case,WhenThen,Else)
            </summary>
        </member>
        <member name="F:ftd.nsql.NsCaseWhenValue.CWNode.Kind">
            <summary>
            節點類型
            </summary>
        </member>
        <member name="M:ftd.nsql.NsCaseWhenValue.CWNode.when(ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            加入When節點
            </summary>
        </member>
        <member name="M:ftd.nsql.NsCaseWhenValue.CWNode.else_(ftd.nsql.NsValue)">
            <summary>
            加入Else節點
            </summary>
        </member>
        <member name="M:ftd.nsql.NsCaseWhenValue.CWNode.else(ftd.nsql.NsValue)">
            <summary>
            加入Else節點
            </summary>
        </member>
        <member name="M:ftd.nsql.NsCaseWhenValue.CWNode.end">
            <summary>
            結束描述
            </summary>
        </member>
        <member name="P:ftd.nsql.NsCaseWhenValue.CWNode.Value1">
            <summary>
            值1
            </summary>
        </member>
        <member name="P:ftd.nsql.NsCaseWhenValue.CWNode.Value2">
            <summary>
            值2
            </summary>
        </member>
        <member name="T:ftd.nsql.NsColumn">
            <summary>
            欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.NsColumn.#ctor(ftd.nsql.NsTable,System.String)">
            <summary>
            建構子
            </summary>
        </member>
        <member name="P:ftd.nsql.NsColumn.ColumnSchema">
            <summary>
            欄位定義
            </summary>       
        </member>
        <member name="P:ftd.nsql.NsColumn.Table">
            <summary>
            表格
            </summary>       
        </member>
        <member name="P:ftd.nsql.NsColumn.DataType">
            <summary>
            資料型別
            </summary>
        </member>
        <member name="P:ftd.nsql.NsColumn.ColumnName">
            <summary>
            欄位名稱 HelloWorld
            </summary>
        </member>
        <member name="P:ftd.nsql.NsColumn.ColumnNameDB">
            <summary>
            資料庫-欄位名稱 HelloWorld
            </summary>
        </member>
        <member name="T:ftd.nsql.NsColumnExecuter">
            <summary>
            欄位執行者
            </summary>
        </member>
        <member name="T:ftd.nsql.NsColumnProxy">
            <summary>
            代理 NsColumn
            </summary>
        </member>
        <member name="T:ftd.nsql.NsSqlFunc">
            <summary>
            設定Select陳述式
            </summary>
        </member>
        <member name="T:ftd.nsql.NsGetExpression`1">
            <summary>
            取得Join條件陳述式
            </summary>
        </member>
        <member name="T:ftd.nsql.NsGetExecuteValue">
            <summary>
            取得執行結果
            </summary>
        </member>
        <member name="T:ftd.nsql.NsJoinType">
            <summary>
            連結類型
            </summary>
        </member>
        <member name="T:ftd.nsql.NsFunctionType">
            <summary>
            函數類型
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.Lower">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.Upper">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.LTrim">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.RTrim">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.Substring">
            <summary>
            SubString('ABCD', 1, 2) => 'AB'
            SubString('ABCD', 2, 2) => 'BC'
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.Length">
            <summary>
            字串長度
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.Right">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.InStr">
            <summary>
            InStr('AAABB', 'BB') => 4
            InStr('AAABB', 'CC') => 0
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.Replace">
            <summary>
            Replace('AAABB', 'BB', 'CC') => 'AAACC'
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.Concat">
            <summary>
            字串相加
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.Count">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.Max">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.Min">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.Sum">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.Avg">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.Like">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.Round">
            <summary>
            4捨五入函數
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.ToString">
            <summary>
            轉成字串
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.ToDecimal">
            <summary>
            轉成Decimal
            toDecimal('100.45',1) => 100.5        
            進位規則為4捨5入
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.ToInteger">
            <summary>
            轉成Integer
            toInteger('100.99') => 100
            無條件捨去
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.ToDouble">
            <summary>
            轉成Double
            toDouble('100.99') => 100.99        
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.ToDateTime">
            <summary>
            轉成日期
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.GetDate">
            <summary>
            取得系統日期
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.AddSeconds">
            <summary>
            日期追加秒數
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.AddMinutes">
            <summary>
            日期追加分鐘
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.AddHours">
            <summary>
            日期追加小時
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.AddDays">
            <summary>
            日期追加天數
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.Exists">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.In">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.BatchIn">
            <summary>
            批次In
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.IsNull">
            <summary>
            Null轉換
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunctionType.NullIf">
            <summary>
            Null轉換 nullif(a, b) => a == b ? null : a;
            </summary>
        </member>
        <member name="T:ftd.nsql.NsOperatorType">
            <summary>
            運算子列表
            </summary>
        </member>
        <member name="F:ftd.nsql.NsOperatorType.Add">
            <summary>
            加(數字)
            </summary>
        </member>
        <member name="F:ftd.nsql.NsOperatorType.Subtract">
            <summary>
            減(數字)
            </summary>
        </member>
        <member name="F:ftd.nsql.NsOperatorType.Multiply">
            <summary>
            乘(數字)
            </summary>
        </member>
        <member name="F:ftd.nsql.NsOperatorType.Divide">
            <summary>
            除(數字)
            </summary>
        </member>
        <member name="F:ftd.nsql.NsOperatorType.AND">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsOperatorType.OR">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsOperatorType.EQU">
            <summary>
            等於
            </summary>
        </member>
        <member name="F:ftd.nsql.NsOperatorType.GT">
            <summary>
            大於
            </summary>
        </member>
        <member name="F:ftd.nsql.NsOperatorType.GE">
            <summary>
            大於等於
            </summary>
        </member>
        <member name="F:ftd.nsql.NsOperatorType.LT">
            <summary>
            小於
            </summary>
        </member>
        <member name="F:ftd.nsql.NsOperatorType.LE">
            <summary>
            小於等於
            </summary>
        </member>
        <member name="F:ftd.nsql.NsOperatorType.NE">
            <summary>
            不等於
            </summary>
        </member>
        <member name="F:ftd.nsql.NsOperatorType.NOT">
            <summary>
            反向
            </summary>
        </member>
        <member name="F:ftd.nsql.NsOperatorType.IsNull">
            <summary>
            IS NULL
            </summary>
        </member>
        <member name="F:ftd.nsql.NsOperatorType.IsNotNull">
            <summary>
            IS NOT NULL
            </summary>
        </member>
        <member name="T:ftd.nsql.NsDataType">
            <summary>
            資料型別
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDataType.NString">
            <summary>
            UniCode String
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDataType.String">
            <summary>
            非UniCodeString
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDataType.DateTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDataType.Double">
            <summary>
            Double
            </summary>
        </member>
        <member name="T:ftd.nsql.NsDataFormatLimitAttribute">
            <summary>
            資料格式化限定使用方式
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDataFormatLimitAttribute.isValidateUse(ftd.nsql.NsDataType,ftd.nsql.NsFunctionType,ftd.nsql.NsDataFormat)">
            <summary>
            檢查是否是合理的使用方式
            </summary>
        </member>
        <member name="T:ftd.nsql.NsDataFormat">
            <summary>
            資料格式化
            </summary>   
        </member>
        <member name="F:ftd.nsql.NsDataFormat.Default">
            <summary>
            預設格式
            DateTime:yyyy/MM/dd
            Int:123
            Decimal:123.456
            double:1.234
            </summary>             
        </member>
        <member name="F:ftd.nsql.NsDataFormat.DATE_YYYYMMDDHHMMSS">
            <summary>
            yyyyMMddHHMMSS
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDataFormat.DATE_YYYYMMDD">
            <summary>
            yyyyMMdd
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDataFormat.DATE_EDate">
            <summary>
            yyyy/MM/dd
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDataFormat.DATE_EDateTime">
            <summary>
            yyyy/MM/dd HH:mm:ss
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDataFormat.DATE_EDateTime16">
            <summary>
            yyyy/MM/dd HH:mm
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDataFormat.DATE_MSSQL_120">
            <summary>
            yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDataFormat.DATE_FULL">
            <summary>
            yyyy-MM-dd HH:mm:ss.fff
            2010-10-07 08:50:42.730        
            </summary>
        </member>
        <member name="T:ftd.nsql.NsConst">
            <summary>
            常數值
            </summary>
        </member>
        <member name="M:ftd.nsql.NsConst.#ctor">
            <summary>
            String(Null)
            </summary>
        </member>
        <member name="M:ftd.nsql.NsConst.#ctor(ftd.nsql.NsDataType)">
            <summary>
            NULL
            </summary>
        </member>
        <member name="P:ftd.nsql.NsConst.Value">
            <summary>
            常數值
            </summary>
        </member>
        <member name="T:ftd.nsql.NsConstArray">
            <summary>
            常數陣列
            </summary>    
        </member>
        <member name="M:ftd.nsql.NsConstArray.cloneValue_node">
            <summary>
            複製值程序-(不含子節點)
            </summary>
        </member>
        <member name="M:ftd.nsql.NsConstArray.hasNullElement">
            <summary>
            是否有NULL元素
            </summary>        
        </member>
        <member name="P:ftd.nsql.NsConstArray.Value">
            <summary>
            常數值
            </summary>
        </member>
        <member name="P:ftd.nsql.NsConstArray.Length">
            <summary>
            陣列長度
            </summary>
        </member>
        <member name="T:ftd.nsql.NsConstExecuter">
            <summary>
            常數執行者
            </summary>
        </member>
        <member name="T:ftd.nsql.NsDbQuery">
            <summary>
            資料庫查詢
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDbQuery.UseTableCount">
            <summary>
            使用到的表格數量
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDbQuery.RegisterProviders">
            <summary>
            註冊的TableProvider
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDbQuery.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDbQuery.setSelect(ftd.nsql.NsSqlFunc)">
            <summary>
            設定SQL陳述式
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDbQuery.getNextAliasName">
            <summary>
            取得表格別名
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDbQuery.createSelectStatement">
            <summary>
            建立Select陳述式
            </summary>        
        </member>
        <member name="M:ftd.nsql.NsDbQuery.createTable(System.String)">
            <summary>
            建立Dm表格
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDbQuery.createTable``1">
            <summary>
            建立強型表格
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDbQuery.prepareExecute">
            <summary>
            準備執行
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDbQuery.translateSql">
            <summary>
            轉譯SQL
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDbQuery.queryScalar``1">
            <summary>
            查詢單一值
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDbQuery.queryKeys``1">
            <summary>
            將第一個欄位值取出成集合
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDbQuery.queryData">
            <summary>
            執行查詢
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDbQuery.queryData``1">
            <summary>
            執行查詢
            </summary>       
        </member>
        <member name="M:ftd.nsql.NsDbQuery.fillData(System.Data.DataTable)">
            <summary>
            執行查詢並填入指定的容器中
            </summary>       
        </member>
        <member name="M:ftd.nsql.NsDbQuery.registerProvider(System.String,ftd.nsql.provider.NsTpTableProvider)">
            <summary>
            註冊指定表格的TableProvider
            這可以偷偷的改變表格的行為
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDbQuery.clearRegisterProviders">
            <summary>
            清除Register Providers
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDbQuery.getRegisterProvider(System.String)">
            <summary>
            取得表格註冊的TableProvider
            </summary>        
        </member>
        <member name="P:ftd.nsql.NsDbQuery.SQLNote">
            <summary>
            SQL命令與註解
            </summary>
        </member>
        <member name="P:ftd.nsql.NsDbQuery.AliasPrefix">
            <summary>
            表格別名 預設為(db_table)
            </summary>
        </member>
        <member name="P:ftd.nsql.NsDbQuery.SQL">
            <summary>
            SQL命令
            </summary>
        </member>
        <member name="P:ftd.nsql.NsDbQuery.ExecuteSqls">
            <summary>
            執行的SQL
            </summary>
        </member>
        <member name="P:ftd.nsql.NsDbQuery.SqlStatement">
            <summary>
            Select陳述式
            </summary>
        </member>
        <member name="T:ftd.nsql.NsDmLink">
            <summary>    
            當DmQuery啟用Link功能時就由此類別負責分派DmQuery來完成查詢   
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmLink.DmLinkQry">
            <summary>
            原始多重連結DmQuery
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmLink.ns_tables">
            <summary>
            原始Table列表
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmLink.queryData">
            <summary>
            查詢資料
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmLink.splitJoinOn(ftd.nsql.NsTable,ftd.nsql.NsValue@,ftd.nsql.NsValue@)">
            <summary>
            分切表格的JOIN條件使其成為左右兩邊的鍵值條件
            例: t11.Name == t3.Name_U => (t11.Name, t3.Name_U)
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmLink.getTableWhere(ftd.nsql.NsTable,ftd.nsql.NsValue)">
            <summary>
            取得指定表格的先行限制條件於複雜的條件中
            例: t11.Name > 5 and t11.Name + t3.Name_U == "4" => t11.Name> 5
            </summary>
        </member>
        <member name="T:ftd.nsql.NsDmLink.CExtProp1">
            <summary>
            衍生屬性
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmLink.CExtProp1.IsSelected">
            <summary>
            是否符合的條件
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmLink.CExtProp1.WhereValue">
            <summary>
            限制條件
            </summary>
        </member>
        <member name="T:ftd.nsql.NsDmLink.CLinkTable">
            <summary>
            因為表格需要連結與篩選使用此類別取代真實表格
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmLink.CLinkTable.Alias">
            <summary>
            表格別名
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmLink.CLinkTable.Dt">
            <summary>
            DataTable
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmLink.CLinkTable.Rows">
            <summary>
            列別名
            </summary>
        </member>
        <member name="T:ftd.nsql.NsDmQuery">
            <summary>
            資料模型查詢
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmQuery.SelectColumns">
            <summary>
            選擇欄位
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmQuery.UseColumns">
            <summary>
            (選擇欄位) + (隱含的衍生欄位)
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmQuery.UseColumns2">
            <summary>
            他表演生欄位
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmQuery.DbQuery">
            <summary>
            DbQuery
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmQuery.Sorts">
            <summary>
            排序條件
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmQuery.orderBy(ftd.nsql.NsSortValue[])">
            <summary>
            排序
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmQuery.from(System.String)">
            <summary>
            來源表格
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmQuery.from``1">
            <summary>
            來源表格,同時也會重新設定命令
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmQuery.link``1(System.Func{``0,ftd.nsql.NsValue})">
            <summary>
            連結表格
            (Table1陳述式) == (Table1陳述式) 
            例: db_table.Name + db_table.Name_U == t11.Name + t11.Name_U
            必須是等於運算式
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmQuery.select(System.Object[])">
            <summary>
            選擇主鍵與指定的欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmQuery.selectAll(System.Object[])">
            <summary>
            選擇全部欄位與指定的衍生欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmQuery.do_select(System.Object[])">
            <summary>
            選擇衍生欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmQuery.queryData``1">
            <summary>
            取得查詢資料
            </summary> 
        </member>
        <member name="M:ftd.nsql.NsDmQuery.queryData">
            <summary>
            取得查詢資料
            </summary>       
        </member>
        <member name="P:ftd.nsql.NsDmQuery.SelectExs">
            <summary>
            衍生欄位集合
            </summary>
        </member>
        <member name="P:ftd.nsql.NsDmQuery.DmSQL">
            <summary>
            DM SQL命令
            </summary>
        </member>
        <member name="P:ftd.nsql.NsDmQuery.ExecuteSqls">
            <summary>
            執行的SQL
            </summary>
        </member>
        <member name="T:ftd.nsql.NsDmQuery.CColumnFinder">
            <summary>
            尋找特定欄位
            </summary>
        </member>
        <member name="P:ftd.nsql.NsDmQuery.CColumnFinder.Item(System.Int32)">
            <summary>
            Select清單的指定欄位
            </summary>
        </member>
        <member name="T:ftd.nsql.NsDmQuery.CColumn2">
            <summary>
            分本表演生欄位
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmQuery.CColumn2.TableAliasName">
            <summary>
            欄位別名
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmQuery.CColumn2.ColumnName">
            <summary>
            欄位名稱
            </summary>
        </member>
        <member name="T:ftd.nsql.NsDmQuery.CColumn">
            <summary>
            Select欄位
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmQuery.CColumn.ColumnKind">
            <summary>         
            Name.本表衍生欄位(可求值)(未設別名)                         
            A.本表衍生欄位(未設別名)
            B.本表原生欄位(未設別名)
            C1.本表運算式(非欄位)(有設定別名)(所有引用欄位可求值) 
            C2.本表別名欄位(可求值)(有設定別名)
            C3.它表欄位(可求值)         
            S.排序用欄位
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmQuery.CColumn.DtColumn">
            <summary>
            Select欄位
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmQuery.CColumn.ColumnName">
            <summary>
            Select欄位名稱
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmQuery.CColumn.ColumnExpr">
            <summary>
            陳述值
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmQuery.CColumn.IsAscending">
            <summary>
            排序順序(S.排序欄位)
            </summary>
        </member>
        <member name="T:ftd.nsql.NsDmQuery.CLevelFilter">
            <summary>
            階層過濾者
            </summary>
        </member>
        <member name="T:ftd.service.FdmService.ITableFilter">
            <summary>
            表格資料篩選者
            階層取得資料時可篩選資料，並提供階層欄位紀錄。
            </summary>
        </member>
        <member name="T:ftd.service.FdmService">
            <summary>
            Ftd Data Definition
            資料定義
            </summary>    
        </member>
        <member name="T:ftd.service.FtdServiceBase">
            <summary>
            基礎服務類別
            </summary>
        </member>
        <member name="M:ftd.service.FtdServiceBase.initService">
            <summary>
            初始化服務
            </summary>
        </member>
        <member name="F:ftd.service.FdmService.ExtendNameSuffix">
            <summary>
            資料表衍生欄位後置符號
            </summary>
        </member>
        <member name="M:ftd.service.FdmService.createDefaultQueryContext">
            <summary>
            建立預設QueryContext
            </summary>
        </member>
        <member name="F:ftd.service.FdmService.AppSiteNo">
            <summary>
            應用程式站台NO (0~3) 用於分散式系統(default 0)
            </summary>
        </member>
        <member name="M:ftd.service.FdmService.onSchemaLoad">
            <summary>
            載入資料定義程序
            後代應於此時由媒體{檔案／映射}載入Schema定義
            </summary>
        </member>
        <member name="M:ftd.service.FdmService.onSchemaLoaded">
            <summary>
            當資料定義載入完成後
            進行必要的整體性檢查與後續動作
            </summary>
        </member>
        <member name="M:ftd.service.FdmService.loadSchemaFromClass(System.Type)">
            <summary>
            由映射載入Schema定義的公用函數
            </summary>
        </member>
        <member name="M:ftd.service.FdmService.dmLinkDataII(System.Data.DataTable,System.Collections.Generic.IList{System.String})">
            <summary>
            要求指定的表格連結指定的欄位
            (回先行計算本表的直讀定義後，再Call dmLinkData)
            </summary>
        </member>
        <member name="M:ftd.service.FdmService.dmLinkData(System.Data.DataTable,ftd.data.model.FdmTable,ftd.data.model.FdmExtColumnsExpander,ftd.service.FdmService.ITableFilter)">
            <summary>
            要求指定的表格連結指定的欄位   
            傳進來的資料一階已計算完畢
            </summary>        
        </member>
        <member name="M:ftd.service.FdmService.toFields(System.Collections.Generic.IList{System.String})">
            <summary>
            欄位名稱轉成欄位類型
            </summary>
        </member>
        <member name="M:ftd.service.FdmService.createDataType(System.String)">
            <summary>
            建立DataTypeName所代表的DataType
            </summary>
        </member>
        <member name="P:ftd.service.FdmService.AllColumns">
            <summary>
            欄位集合
            </summary>
        </member>
        <member name="P:ftd.service.FdmService.AllTables">
            <summary>
            資料表集合
            </summary>
        </member>
        <member name="P:ftd.service.FdmService.AllSystems">
            <summary>
            系統集合
            </summary>
        </member>
        <member name="P:ftd.service.FdmService.TableUpdater">
            <summary>
            資料表更新者
            </summary>
        </member>
        <member name="T:ftd.service.FdmService.ITableFilter">
            <summary>
            表格資料篩選者
            階層取得資料時可篩選資料，並提供階層欄位紀錄。
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmQuery.CLevelFilter.ColumnLevels">
            <summary>
            (欄位,執行順位)
            (Name_U,1)(C,2)
            </summary>
        </member>
        <member name="F:ftd.nsql.NsDmQuery.CLevelFilter.WhereExprs">
            <summary>
            Where條件執行順位(可執行陳述,不可執行陳述)
            0=>(Name==1)
            1=>(Name_U==2)
            2=>(C==3 or D==4)
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmQuery.CLevelFilter.splitWhereExpression(ftd.nsql.NsValue)">
            <summary>
            分切陳述式執行階層
            </summary>          
        </member>
        <member name="T:ftd.nsql.NsDmTypeQuery`3">
            <summary>
            強行別DmQuery
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmTypeQuery`3.query">
            <summary>
            查詢資料
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmTypeQuery`3.queryFirst">
            <summary>
            查詢資料(第一筆)
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmTypeQuery`3.selectAll(System.Func{`2,System.Object})">
            <summary>
            選擇全部欄位與指定的衍生欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmTypeQuery`3.selectAll(System.Object[])">
            <summary>
            選擇全部欄位與指定的衍生欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmTypeQuery`3.select(System.Object[])">
            <summary>
            選擇主鍵與指定的欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmTypeQuery`3.select(System.Func{`2,System.Object})">
            <summary>
            選擇主鍵與指定的欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmTypeQuery`3.wherepk(System.String)">
            <summary>
            SQL: primaryKey.batchIn(ext_cols.toConstReq1())
            </summary> 
        </member>
        <member name="M:ftd.nsql.NsDmTypeQuery`3.wherepks(System.Collections.Generic.IList{System.String})">
            <summary>
            SQL: primaryKey.batchIn(ext_cols.toConstReq1())
            </summary>     
        </member>
        <member name="M:ftd.nsql.NsDmTypeQuery`3.where(System.Func{`2,ftd.nsql.NsValue})">
            <summary>
            SQL:Where
            </summary>
        </member>
        <member name="M:ftd.nsql.NsDmTypeQuery`3.orderby(System.Func{`2,System.Object})">
            <summary>
            SQL:Order By
            </summary>
        </member>
        <member name="T:ftd.nsql.NsEmptyTable">
            <summary>
            例:Oracle中的Dual
            例:MsSql 中的 select getDate()     
            </summary>
        </member>
        <member name="T:ftd.nsql.NsTable">
            <summary>
            資料表格參考
            </summary>
        </member>
        <member name="M:ftd.nsql.NsTable.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.nsql.NsTable.tryLink(System.String,System.Func{ftd.nsql.NsTable,ftd.nsql.NsValue})">
            <summary>
            確定表格有 Name left join Name_U on C 的關係
            如沒有新增之，並回傳 Name   
            </summary>
        </member>
        <member name="M:ftd.nsql.NsTable.tryLink``1(System.Func{``0,ftd.nsql.NsValue})">
            <summary>
            確定表格有 t11 left str t3 on XXXX 的關係
            如沒有新增之，並回傳 t3   
            </summary>
        </member>
        <member name="M:ftd.nsql.NsTable.findColumnSchema(System.String)">
            <summary>
            取得欄位的Schema
            </summary>
        </member>
        <member name="P:ftd.nsql.NsTable.TableProvider">
            <summary>
            表格定義
            </summary>
        </member>
        <member name="P:ftd.nsql.NsTable.TableName">
            <summary>
            表格名稱
            </summary>
        </member>
        <member name="P:ftd.nsql.NsTable.TableNameDB">
            <summary>
            資料庫-表格名稱 
            </summary>
        </member>
        <member name="P:ftd.nsql.NsTable.AllPhysical">
            <summary>
            所有Native或Select欄位
            </summary>
        </member>
        <member name="P:ftd.nsql.NsTable.AllExt">
            <summary>
            所有的衍生欄位(計算|連結)
            </summary>
        </member>
        <member name="P:ftd.nsql.NsTable.AllDirect">
            <summary>
            所有的(計算+連結)直讀欄位
            </summary>
        </member>
        <member name="P:ftd.nsql.NsTable.PrimaryKey">
            <summary>
            主鍵值
            </summary>
        </member>
        <member name="P:ftd.nsql.NsTable.PrimaryKeys">
            <summary>
            主鍵值
            </summary>
        </member>
        <member name="P:ftd.nsql.NsTable.DbQuery">
            <summary>
            資料庫查詢
            </summary>
        </member>
        <member name="P:ftd.nsql.NsTable.Alias">
            <summary>
            別名
            </summary>
        </member>
        <member name="P:ftd.nsql.NsTable.IsBatchTable">
            <summary>
            啟用表格自定義資料內容的功能
            實際上本表內容將會被使用者指定的資料(例如來自DataTable)所取代
            所以Session功能是一定禁止
            預設為false
            </summary>
        </member>
        <member name="P:ftd.nsql.NsTable.IsSessionEnable">
            <summary>
            本表是否啟用Session支援
            </summary>
        </member>
        <member name="P:ftd.nsql.NsTable.Item(System.String)">
            <summary>
            表格欄位
            </summary>
        </member>
        <member name="P:ftd.nsql.NsTable.Item(System.Int32)">
            <summary>
            表格欄位
            </summary>
        </member>
        <member name="T:ftd.nsql.NsEmptyOptional">
            <summary>
            特殊值:空值(選擇性)    
            </summary>
        </member>
        <member name="T:ftd.nsql.NsEmptyRequire">
            <summary>
            特殊值:空值(必要的)    
            </summary>
        </member>
        <member name="T:ftd.nsql.NsExecuteContext">
            <summary>
            執行陳述式的環境
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExecuteContext.TableDatas">
            <summary>
            (t11:string, (DmTable:DataTable, TableRow:DataRow))
            </summary>
        </member>
        <member name="M:ftd.nsql.NsExecuteContext.createExecuter(ftd.nsql.NsValue)">
            <summary>
            建立值得執行者
            </summary>
        </member>
        <member name="M:ftd.nsql.NsExecuteContext.getColumnValueMethod(ftd.nsql.NsColumn)">
            <summary>
            取得欄位值的GetMethod
            </summary>
        </member>
        <member name="M:ftd.nsql.NsExecuteContext.addTable(System.String,System.Data.DataTable)">
            <summary>
            加入Table來源
            </summary>
        </member>
        <member name="M:ftd.nsql.NsExecuteContext.setTableRow(System.String,System.Data.DataRow)">
            <summary>
            設定表格目前列
            </summary>
        </member>
        <member name="T:ftd.nsql.NsExecuteContext.CTableData">
            <summary>
            表格資料
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExecuteContext.CTableData.Table">
            <summary>
            表格
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExecuteContext.CTableData.CurrentRow">
            <summary>
            目前列
            </summary>
        </member>
        <member name="T:ftd.nsql.NsExpression">
            <summary>
            運算式
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExpression.Patterns">
            <summary>
            運算式集合
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExpression.OperandCount">
            <summary>
            幾元潠算式
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExpression.OperatorPriority">
            <summary>
            運算子優先順序 (越小越優先)
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExpression.OperatorType">
            <summary>
            運算子
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExpression.OperatorSign">
            <summary>
            運算子代表符號
            For Render Sql用
            </summary>
        </member>
        <member name="M:ftd.nsql.NsExpression.checkPattern">
            <summary>
            檢查運算式是否正確，與決定資料型別
            </summary>        
        </member>
        <member name="M:ftd.nsql.NsExpression.initOperator">
            <summary>
            初始運算子
            </summary>     
        </member>
        <member name="P:ftd.nsql.NsExpression.IsCompareOperator">
            <summary>
            是否是比較運算子
            </summary>
        </member>
        <member name="P:ftd.nsql.NsExpression.IsCalcOperator">
            <summary>
            是否是算數運算子
            </summary>
        </member>
        <member name="P:ftd.nsql.NsExpression.IsNullOperator">
            <summary>
            NULL運算子
            </summary>
        </member>
        <member name="P:ftd.nsql.NsExpression.IsBoolOperator">
            <summary>
            邏輯運算子
            </summary>
        </member>
        <member name="P:ftd.nsql.NsExpression.Operand1">
            <summary>
            運算元1
            </summary>
        </member>
        <member name="P:ftd.nsql.NsExpression.Operand2">
            <summary>
            運算元2
            </summary>
        </member>
        <member name="T:ftd.nsql.NsExpression.CPattern">
            <summary>
            運算式樣本
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExpression.CPattern.OP">
            <summary>
            運算子
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExpression.CPattern.M1">
            <summary>
            運算元1資料類型
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExpression.CPattern.M2">
            <summary>
            運算元2資料類型
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExpression.CPattern.R">
            <summary>
            回傳資料類型
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExpression.CPattern.OperandCount">
            <summary>
            1元或2元運算式
            </summary>
        </member>
        <member name="T:ftd.nsql.NsExpressionExcuter">
            <summary>
            陳述式執行者
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExpressionExcuter.OP1">
            <summary>
            運算元1
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExpressionExcuter.OP2">
            <summary>
            運算元2
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExpressionExcuter.GetExpressionValue">
            <summary>
            求值函數
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExpressionExcuter.Comp1">
            <summary>
            比較運算式用1
            </summary>
        </member>
        <member name="F:ftd.nsql.NsExpressionExcuter.Comp2">
            <summary>
            比較運算式用2
            </summary>
        </member>
        <member name="T:ftd.nsql.NsFromNode">
            <summary>
            From Node
            </summary>
        </member>
        <member name="T:ftd.nsql.NsFunction">
            <summary>
            函數定義
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunction.Patterns">
            <summary>
            運算式集合
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunction.FunctionName">
            <summary>
            函數名稱
            </summary>
        </member>
        <member name="M:ftd.nsql.NsFunction.#ctor">
            <summary>
            私有建構子
            </summary>
        </member>
        <member name="M:ftd.nsql.NsFunction.create(ftd.nsql.NsFunctionType,ftd.nsql.NsNode[])">
            <summary>
            建立函數
            </summary>
        </member>
        <member name="M:ftd.nsql.NsFunction.checkValidate">
            <summary>
            檢查函數定義是否正確
            </summary>        
        </member>
        <member name="P:ftd.nsql.NsFunction.FunctionType">
            <summary>
            函數類型
            </summary>
        </member>
        <member name="P:ftd.nsql.NsFunction.Parameters">
            <summary>
            函數參數
            </summary>
        </member>
        <member name="T:ftd.nsql.NsFunction.CPattern">
            <summary>
            函數樣本
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunction.CPattern.FUN">
            <summary>
            函數
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunction.CPattern.PType">
            <summary>
            參數類型
            </summary>
        </member>
        <member name="F:ftd.nsql.NsFunction.CPattern.R">
            <summary>
            回傳資料類型
            </summary>
        </member>
        <member name="T:ftd.nsql.NsFunctionExecuter">
            <summary>
            函數執行者
            </summary>
        </member>
        <member name="T:ftd.nsql.NsGroupNode">
            <summary>
            Group by Node
            </summary>
        </member>
        <member name="P:ftd.nsql.NsGroupNode.GroupBy">
            <summary>
            選擇的欄位
            </summary>
        </member>
        <member name="T:ftd.nsql.NsHavingNode">
            <summary>
            Having Node
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.addDays(ftd.nsql.INsValue,ftd.nsql.NsValue)">
            <summary>
            時間追加天數
            <param name="value">日期</param>
            <param name="days">天數(int)</param>
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.addHours(ftd.nsql.INsValue,ftd.nsql.NsValue)">
            <summary>
            時間追加小時
            <param name="value">日期</param>
            <param name="hours">小時(int)</param>
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.addMinutes(ftd.nsql.INsValue,ftd.nsql.NsValue)">
            <summary>
            時間追加分鐘
            <param name="value">日期</param>
            <param name="minutes">分鐘(int)</param>
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.addSeconds(ftd.nsql.INsValue,ftd.nsql.NsValue)">
            <summary>
            時間追加秒數
            <param name="value">日期</param>
            <param name="seconds">秒數(int)</param>
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.contains(ftd.nsql.INsValue,ftd.nsql.NsValue)">
            <summary>
            是否包含特定內容
            同like('%' + data + '%')
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.istrue(ftd.nsql.INsValue,ftd.nsql.NsValue,ftd.nsql.NsValue)">
            <summary>
            陳述式為真的話 return true_value else return false value;
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.decode(ftd.nsql.INsValue,ftd.nsql.NsValue,ftd.nsql.NsValue,ftd.nsql.NsValue[])">
            <summary>
            ORACLE decode函數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.tointeger(ftd.nsql.INsValue)">
            <summary>
            轉成整數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.todouble(ftd.nsql.INsValue)">
            <summary>
            轉成Double
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.todatetime(ftd.nsql.INsValue,ftd.nsql.NsDataFormat)">
            <summary>
            轉成日期
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.todecimal(ftd.nsql.INsValue,ftd.nsql.NsValue)">
            <summary>
            轉成Decimal(需指定小數點位數)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.round(ftd.nsql.INsValue,ftd.nsql.NsValue)">
            <summary>
            四捨5入
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toNetValue(ftd.nsql.INsValue)">
            <summary>
            將指定的物件(必須是常數)轉成DotNet數值
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toNetValue``1(ftd.nsql.INsValue)">
            <summary>
            將指定的物件(必須是常數)轉成DotNet數值
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.isnull(ftd.nsql.INsValue,ftd.nsql.NsValue)">
            <summary>
            空值轉換
            如受測值為空值回應指定內容，否則回應受測值。
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.inquery(ftd.nsql.INsValue,ftd.nsql.NsSqlFunc)">
            <summary>
            In SubQuery 
            Only Can Use in DbQuery
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.inquery(ftd.nsql.INsValue,ftd.nsql.NsDbQuery,ftd.nsql.NsSqlFunc)">
            <summary>
            In SubQuery 
            Only Can Use in DbQuery
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConst(System.String)">
            <summary>
            轉為SQL常數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConst(System.Int32)">
            <summary>
            轉為SQL常數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConst(System.Nullable{System.Int32})">
            <summary>
            轉為SQL常數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConst(System.Double)">
            <summary>
            轉為SQL常數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConst(System.Nullable{System.Double})">
            <summary>
            轉為SQL常數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConst(System.Decimal)">
            <summary>
            轉為SQL常數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConst(System.Nullable{System.Decimal})">
            <summary>
            轉為SQL常數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConst(System.DateTime)">
            <summary>
            轉為SQL常數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConst(System.Nullable{System.DateTime})">
            <summary>
            轉為SQL常數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConst(System.Collections.Generic.IList{System.String})">
            <summary>
            轉為SQL常數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConst(System.Collections.Generic.IList{System.Decimal})">
            <summary>
            轉為SQL常數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConst(System.Collections.Generic.IList{System.Int32})">
            <summary>
            轉為SQL常數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConst(System.Collections.Generic.IList{System.Double})">
            <summary>
            轉為SQL常數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConst(System.Collections.Generic.IList{System.DateTime})">
            <summary>
            轉為SQL常數
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq1(System.String)">
            <summary>
            轉為SQL必要常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq1(System.Int32)">
            <summary>
            轉為SQL必要常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq1(System.Nullable{System.Int32})">
            <summary>
            轉為SQL必要常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq1(System.Double)">
            <summary>
            轉為SQL必要常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq1(System.Nullable{System.Double})">
            <summary>
            轉為SQL必要常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq1(System.Decimal)">
            <summary>
            轉為SQL必要常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq1(System.Nullable{System.Decimal})">
            <summary>
            轉為SQL必要常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq1(System.DateTime)">
            <summary>
            轉為SQL必要常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq1(System.Nullable{System.DateTime})">
            <summary>
            轉為SQL必要常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq1(System.Collections.Generic.IList{System.String})">
            <summary>
            轉為SQL必要常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq1(System.Collections.Generic.IList{System.Decimal})">
            <summary>
            轉為SQL必要常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq1(System.Collections.Generic.IList{System.Int32})">
            <summary>
            轉為SQL必要常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq1(System.Collections.Generic.IList{System.DateTime})">
            <summary>
            轉為SQL必要常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq1(System.Collections.Generic.IList{System.Double})">
            <summary>
            轉為SQL必要常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq(System.String,System.Boolean)">
            <summary>
            轉為SQL必要性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq(System.Int32,System.Boolean)">
            <summary>
            轉為SQL必要性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq(System.Nullable{System.Int32},System.Boolean)">
            <summary>
            轉為SQL必要性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq(System.Double,System.Boolean)">
            <summary>
            轉為SQL必要性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq(System.Nullable{System.Double},System.Boolean)">
            <summary>
            轉為SQL必要性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq(System.Decimal,System.Boolean)">
            <summary>
            轉為SQL必要性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq(System.Nullable{System.Decimal},System.Boolean)">
            <summary>
            轉為SQL必要性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq(System.DateTime,System.Boolean)">
            <summary>
            轉為SQL必要性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq(System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            轉為SQL必要性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq(System.Collections.Generic.IList{System.String},System.Boolean)">
            <summary>
            轉為SQL必要性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq(System.Collections.Generic.IList{System.Decimal},System.Boolean)">
            <summary>
            轉為SQL必要性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq(System.Collections.Generic.IList{System.Int32},System.Boolean)">
            <summary>
            轉為SQL必要性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstReq(System.Collections.Generic.IList{System.Double},System.Boolean)">
            <summary>
            轉為SQL必要性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt1(System.String)">
            <summary>
            轉為SQL選擇性常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt1(System.Int32)">
            <summary>
            轉為SQL選擇性常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt1(System.Nullable{System.Int32})">
            <summary>
            轉為SQL選擇性常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt1(System.Double)">
            <summary>
            轉為SQL選擇性常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt1(System.Nullable{System.Double})">
            <summary>
            轉為SQL選擇性常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt1(System.Decimal)">
            <summary>
            轉為SQL選擇性常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt1(System.Nullable{System.Decimal})">
            <summary>
            轉為SQL選擇性常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt1(System.DateTime)">
            <summary>
            轉為SQL選擇性常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt1(System.Nullable{System.DateTime})">
            <summary>
            轉為SQL選擇性常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt1(System.Collections.Generic.IList{System.String})">
            <summary>
            轉為SQL選擇性常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt1(System.Collections.Generic.IList{System.Decimal})">
            <summary>
            轉為SQL選擇性常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt1(System.Collections.Generic.IList{System.Int32})">
            <summary>
            轉為SQL選擇性常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt1(System.Collections.Generic.IList{System.Double})">
            <summary>
            轉為SQL選擇性常數(長度必須>=1)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt(System.String,System.Boolean)">
            <summary>
            轉為SQL選擇性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt(System.Int32,System.Boolean)">
            <summary>
            轉為SQL選擇性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt(System.Nullable{System.Int32},System.Boolean)">
            <summary>
            轉為SQL選擇性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt(System.Decimal,System.Boolean)">
            <summary>
            轉為SQL選擇性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt(System.Nullable{System.Decimal},System.Boolean)">
            <summary>
            轉為SQL選擇性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt(System.DateTime,System.Boolean)">
            <summary>
            轉為SQL選擇性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt(System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            轉為SQL選擇性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt(System.Collections.Generic.IList{System.String},System.Boolean)">
            <summary>
            轉為SQL選擇性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt(System.Collections.Generic.IList{System.Decimal},System.Boolean)">
            <summary>
            轉為SQL選擇性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.toConstOpt(System.Collections.Generic.IList{System.Int32},System.Boolean)">
            <summary>
            轉為SQL選擇性常數(條件自訂)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_update(System.Data.DataTable)">
            <summary>
            更新表格資料到資料庫
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_update_session(System.Data.DataTable,ftd.nsql.NsSession)">
            <summary>
            更新表格資料到資料庫(Session更新)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_update_only(System.Data.DataTable,System.String[])">
            <summary>
            更新表格資料到資料庫(限定更新欄位)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_update_only(System.Data.DataTable,System.Collections.Generic.IList{System.String})">
            <summary>
            更新表格資料到資料庫(限定更新欄位)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_update_without(System.Data.DataTable,System.String[])">
            <summary>
            更新表格資料到資料庫(限定排除欄位)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_update_without(System.Data.DataTable,System.Collections.Generic.IList{System.String})">
            <summary>
            更新表格資料到資料庫(限定排除欄位)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_update_import_mode(System.Data.DataTable)">
            <summary>
            更新表格資料到資料庫
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_update(System.Data.DataRow)">
            <summary>
            更新資料列到資料庫
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_update_session(System.Data.DataRow,ftd.nsql.NsSession)">
            <summary>
            更新資料列到資料庫(Session更新)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_update_only(System.Data.DataRow,System.String[])">
            <summary>
            更新資料列到資料庫 (限定更新欄位)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_update_only(System.Data.DataRow,System.Collections.Generic.IList{System.String})">
            <summary>
            更新資料列到資料庫 (限定更新欄位)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_update_without(System.Data.DataRow,System.String[])">
            <summary>
            更新表格資料到資料庫(限定排除欄位)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_update_without(System.Data.DataRow,System.Collections.Generic.IList{System.String})">
            <summary>
            更新表格資料到資料庫(限定排除欄位)
            </summary>
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_linkColumns(System.Data.DataTable,System.Collections.Generic.IList{System.String})">
            <summary>
            連結欄位
            </summary>        
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_linkColumns(System.Data.DataTable,System.String[])">
            <summary>
            連結欄位
            </summary>        
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_getAllDirects(System.Data.DataTable)">
            <summary>
            取得所有直讀欄位
            </summary>        
        </member>
        <member name="M:ftd.nsql.NSQL_EXT.ns_getAllExts(System.Data.DataTable)">
            <summary>
            所有衍生欄位可計算用的
            </summary>        
        </member>
        <member name="M:ftd.nsql.NsHelper.getTableWhere(ftd.nsql.NsTable,System.Collections.Generic.IList{System.String},ftd.nsql.NsValue)">
            <summary>
            取得指定表格的先行限制條件於複雜的條件中
            例: t11.Name > 5 and t11.Name + t3.Name_U == "4" => t11.Name> 5
            columnsNames => 表格中可先行運算的欄位，其值為NULL代表所有欄位都可先行運算
            </summary>
        </member>
        <member name="T:ftd.nsql.NsHelper.CExtProp1">
            <summary>
            衍生屬性
            </summary>
        </member>
        <member name="F:ftd.nsql.NsHelper.CExtProp1.IsMatch">
            <summary>
            是否符合的條件
            </summary>
        </member>
        <member name="F:ftd.nsql.NsHelper.CExtProp1.WhereValue">
            <summary>
            限制條件
            </summary>
        </member>
        <member name="T:ftd.nsql.NsSession">
            <summary>
            Ns Loosely Transaction
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSession.deserializFromString(System.String)">
            <summary>
            序列化成字串
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSession.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSession.createSession">
            <summary>
            建立Session
            </summary>     
        </member>
        <member name="M:ftd.nsql.NsSession.createSession(System.String)">
            <summary>
            建立Session
            </summary>     
        </member>
        <member name="M:ftd.nsql.NsSession.createNoSession">
            <summary>
            建立沒有Session的Session
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSession.#ctor">
            <summary>
            Private Constructor
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSession.queryScope(System.Action)">
            <summary>
            Session的查詢範圍
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSession.acceptChanges">
            <summary>
            接受改變
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSession.acceptChanges(System.String)">
            <summary>
            接受改變
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSession.cancelChanges">
            <summary>
            取消改變
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSession.cancelChanges(System.String)">
            <summary>
            取消改變
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSession.serializAsString">
            <summary>
            序列化成字串
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSession.NoSession">
            <summary>
            無Session
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSession.SessionId">
            <summary>
            SessionId
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSession.SessionName">
            <summary>
            Session Name
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSession.IsSessionEnable">
            <summary>
            是否啟用Session功能
            </summary>
        </member>
        <member name="T:ftd.nsql.NsSessionHelper">
            <summary>
            將支援Session功能的Helper
            </summary>
        </member>
        <member name="F:ftd.nsql.NsSessionHelper.S_TableNamePrefix">
            <summary>
            Session表格的前置名稱
            </summary>
        </member>
        <member name="F:ftd.nsql.NsSessionHelper.S_ColumnNamePrefix">
            <summary>
            Session表格欄位的前置名稱
            </summary>
        </member>
        <member name="F:ftd.nsql.NsSessionHelper.S_ColumnName_SessionId">
            <summary>
            SessionId 欄位名稱(NsSessionId)
            </summary>
        </member>
        <member name="F:ftd.nsql.NsSessionHelper.S_ColumnName_RowState">
            <summary>
            狀態欄位名稱(NsRowState)
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSessionHelper.makeSessionEnable(System.String)">
            <summary>
            對指定的表格設定SessionEnable
            內容包含
            1.產生TableProvder
            2.產生FdmService內的所有定義
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSessionHelper.sessionUpdateTable(ftd.nsql.NsSession,ftd.data.model.FdmTable,System.Data.DataTable,System.Data.DataRow[])">
            <summary>
            SessionTable異動資料
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSessionHelper.sessionAcceptChanges(ftd.nsql.NsSession)">
            <summary>
            接受Session回寫至資料庫
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSessionHelper.sessionCancelChanges(ftd.nsql.NsSession)">
            <summary>
            取消Session回寫至資料庫
            </summary>
        </member>
        <member name="T:ftd.nsql.render.NsBatchTableSqlCreator">
            <summary>
            BatchTable Sql Creator
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsBatchTableSqlCreator.getExecuteSql(System.String,System.Data.DataTable,ftd.nsql.NsSqlStatement,System.String,ftd.nsql.NsTable)">
            <summary>
            取得執行SQL
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsBatchTableSqlCreator.replaceMark(System.String,System.String,System.String,System.String)">
            <summary>
            將Mark取代為指定的值
            </summary>
        </member>
        <member name="T:ftd.nsql.NsTableProxyTyped`1">
            <summary>
            強行別TableProxy
            </summary>
        </member>
        <member name="M:ftd.nsql.NsTableProxyTyped`1.#ctor(ftd.nsql.INsTable,`0)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:ftd.nsql.NsTableProxyTyped`1.Cols">
            <summary>
            強行別欄位
            </summary>
        </member>
        <member name="T:ftd.nsql.NsViewTable">
            <summary>
            SqlViewTable
            </summary>
        </member>
        <member name="T:ftd.nsql.NsSqlStatement">
            <summary>
            代表SqlSelect命令
            </summary>
        </member>
        <member name="F:ftd.nsql.NsSqlStatement.AutoConds">
            <summary>
            自動條件集合
            </summary>
        </member>
        <member name="F:ftd.nsql.NsSqlStatement.TableMapping">
            <summary>
            如果此SQL執行時需要MAP會有值
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.selectAppend(System.Object[])">
            <summary>
            追加選擇的欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.select(System.Object[])">
            <summary>
            設定選擇的欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.doSelect(System.Boolean,System.Object[])">
            <summary>
            設定選擇的欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.fromEmpty(System.String)">
            <summary>
            From空表
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.fromBatch(System.Data.DataTable)">
            <summary>
            From DataTable
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.groupBy(ftd.nsql.NsValue[])">
            <summary>
            設定Groupby欄位        
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.groupByAppend(ftd.nsql.NsValue[])">
            <summary>
            增加群組
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.orderBy(ftd.nsql.NsSortValue[])">
            <summary>
            排序欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.orderByAppend(ftd.nsql.NsSortValue[])">
            <summary>
            排序欄位
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.doUnion(ftd.nsql.NsSqlStatement,System.Boolean)">
            <summary>
            加入UnionSelect
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.unionAll(ftd.nsql.NsSqlFunc)">
            <summary>
            聯集Select(All選項)
            </summary>       
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.union(ftd.nsql.NsSqlFunc)">
            <summary>
            聯集Select
            </summary>       
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.addAutoCond(System.String,ftd.nsql.NsValue)">
            <summary>
            加入自動條件
            </summary>
            <param node_4="columnIdx">外部欄位名稱</param>
            <param node_4="columnExpr">對應陳述式</param>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.passAutoCond(System.String,ftd.nsql.NsValue)">
            <summary>
            傳送但不加入自動條件
            </summary>
            <param node_4="columnIdx">外部欄位名稱</param>
            <param node_4="columnExpr">對應陳述式</param>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.setAutoWhere(ftd.nsql.NsValue,ftd.nsql.NsTable)">
            <summary>
            取得完整的自動條件
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.prepareExecuteSql">
            <summary>
            準備執行階段的SQL
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.cloneSelect">
            <summary>
            複製Select
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSqlStatement.IsSqlPrepared">
            <summary>
            是否已經準備好執行的SQL
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSqlStatement.ExecuteSqls">
            <summary>
            執行SQL
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSqlStatement.Selects">
            <summary>
            Select項目集合
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSqlStatement.SelectTopCount">
            <summary>
            MSSQL:Select Top
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSqlStatement.UseTables">
            <summary>
            取得引用表格清單
            例: fromBatch Name join Name_U on XXX join C on XXX => Name, Name_U, C
            一先後順序列出
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSqlStatement.SelectNode">
            <summary>
            Select節點
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSqlStatement.JoinListNode">
            <summary>
            JoinList節點
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSqlStatement.UnionListNode">
            <summary>
            UnionList節點
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSqlStatement.FromNode">
            <summary>
            From節點
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSqlStatement.WhereNode">
            <summary>
            Where節點
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSqlStatement.GroupNode">
            <summary>
            群組節點
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSqlStatement.HavingNode">
            <summary>
            Having節點
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSqlStatement.OrderByNode">
            <summary>
            排序節點
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSqlStatement.From">
            <summary>
            From XXX Join XXX on XXXX
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSqlStatement.Where">
            <summary>
            Where條件
            </summary>
        </member>
        <member name="F:ftd.nsql.NsSqlStatement.CAutoCond.ColExpr">
            <summary>
            條件值
            </summary>
        </member>
        <member name="F:ftd.nsql.NsSqlStatement.CAutoCond.State">
            <summary>
            狀態 1.加入 2.傳遞
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.CAutoCond.#ctor(ftd.nsql.NsValue,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param node_4="theValue">條件值</param>
            <param node_4="state">狀態 1.加入 2.傳遞</param>
        </member>
        <member name="T:ftd.nsql.NsSqlStatement.CTableProvider">
            <summary>
            Select的虛構TableProvider
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.CTableProvider.getFromFirstProvider(ftd.nsql.NsSqlStatement)">
            <summary>
            取得第一個有DbAccess的Provider
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSqlStatement.CJoinOnSyntax`1.on(System.Func{`0,ftd.nsql.NsValue})">
            <summary>
            ON陳述式
            </summary>
        </member>
        <member name="F:ftd.nsql.NsViewTable.IsTranslate">
            <summary>
            是否已經過Render程序
            </summary>
        </member>
        <member name="T:ftd.nsql.NsJoinNode">
            <summary>
            JoinNode
            </summary>
        </member>
        <member name="F:ftd.nsql.NsJoinNode.JoinType">
            <summary>
            連結類型
            </summary>
        </member>
        <member name="P:ftd.nsql.NsJoinNode.Table">
            <summary>
            
            </summary>
        </member>
        <member name="P:ftd.nsql.NsJoinNode.On">
            <summary>
            連結條件(必須為Bool型別)
            </summary>
        </member>
        <member name="T:ftd.nsql.NsJoinOnNode">
            <summary>
            Join的On節點
            </summary>
        </member>
        <member name="P:ftd.nsql.NsJoinOnNode.On">
            <summary>
            On 陳述式
            </summary>
        </member>
        <member name="T:ftd.nsql.NsJoinListNode">
            <summary>
            
            </summary>    
        </member>
        <member name="M:ftd.nsql.NsJoinListNode.sortJoinOrder">
            <summary>
            依據相依性調整JOIN順位
            會有這個是因為自動連結可能產生依賴表格在之後出現而產生錯誤。
            </summary>
        </member>
        <member name="M:ftd.nsql.NsJoinListNode.get_join_table_depend(ftd.nsql.NsJoinNode)">
            <summary>
            取得表格JOIN所依賴的標格
            </summary>
        </member>
        <member name="T:ftd.nsql.render.NsMsSqlRender">
            <summary>
            Ms SqlRender
            </summary>
        </member>
        <member name="T:ftd.nsql.render.NsSqlRender">
            <summary>
            負責Sql的繪製工作
            不同的資料庫類型，應實作特定的SqlRender，並於對應的FtdDbAccess中登錄
            </summary>
        </member>
        <member name="F:ftd.nsql.render.NsSqlRender.BatchInBeginMark">
            <summary>
            BathIn標記起始
            </summary>
        </member>
        <member name="F:ftd.nsql.render.NsSqlRender.BatchEndMark">
            <summary>
            BathIn標記結束
            </summary>
        </member>
        <member name="F:ftd.nsql.render.NsSqlRender.CustomDefineBeginMark">
            <summary>
            使用者自訂義表格資料-標記起始
            </summary>
        </member>
        <member name="F:ftd.nsql.render.NsSqlRender.CustomDefineEndMark">
            <summary>
            使用者自訂義表格資料-標記結束
            </summary>
        </member>
        <member name="F:ftd.nsql.render.NsSqlRender.IdentLevel">
            <summary>
            內縮階層
            </summary>
        </member>
        <member name="F:ftd.nsql.render.NsSqlRender.IsLastCharNewLine">
            <summary>
            最後一個自是否是crlf
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsSqlRender.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsSqlRender.doWrite(System.Boolean,System.String)">
            <summary>
            寫入資料
            </summary>   
        </member>
        <member name="M:ftd.nsql.render.NsSqlRender.clear">
            <summary>
            清空寫入資料
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsSqlRender.makeStringCompareTranslate(ftd.nsql.NsValue)">
            <summary>
            空字串比較變更
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsSqlRender.makeFunctionTranslate(ftd.nsql.NsFunction)">
            <summary>        
            Sql執行碼前置轉換程序        
            (節點如果不需改變的話回傳節點)
            (節點如果需要移除的話回傳NULL)
            (節點如果需要改變的話回傳新結點)
            #一個Sql要執行之前會先執行此函數，若特定語法該資料庫不支援，可於此處轉換成對等的函數。
            #--例:該資料庫不支援left則轉換成substring(XXX,1)的語法
            </summary>               
        </member>
        <member name="M:ftd.nsql.render.NsSqlRender.cd_writeSqlNote(System.String)">
            <summary>
            輸出列註解
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsSqlRender.cd_writeColumnAs(System.String)">
            <summary>
            輸出欄位別名
            as XXXXXX
            </summary>       
        </member>
        <member name="M:ftd.nsql.render.NsSqlRender.cd_writeTableAlias(System.String)">
            <summary>
            輸出表格別名
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsSqlRender.cd_writeConst(ftd.nsql.NsDataType,System.Object)">
            <summary>
            輸出常數
            </summary>       
        </member>
        <member name="M:ftd.nsql.render.NsSqlRender.cd_getEncodeName(System.String)">
            <summary>
            取得表格|欄位的編碼名稱
            例:Hello => [Hello]
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsSqlRender.cd_getConstSql(ftd.nsql.NsDataType,System.Object)">
            <summary>
            取得常數SQL
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsSqlRender.renderSql(ftd.nsql.NsJoinOnNode)">
            <summary>
            RenderSQL
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsSqlRender.makeFullJoinSupport(ftd.nsql.NsSqlStatement)">
            <summary>
            如果Provider僅支援LeftJoin RightJoin但不支援FullJoin
            會自動較用此方法來支援FullJoin
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsSqlRender.makeSessionSupport(ftd.nsql.NsSqlStatement)">
            <summary>
            Session Support        
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsSqlRender.createCustomDefineTable(System.String,System.String)">
            <summary>
            產生 (exesql) as t1 
            </summary>
        </member>
        <member name="P:ftd.nsql.render.NsSqlRender.CurrentSql">
            <summary>
            目前Scope
            </summary>
        </member>
        <member name="P:ftd.nsql.render.NsSqlRender.WithNote">
            <summary>
            包含註解輸出
            </summary>
        </member>
        <member name="P:ftd.nsql.render.NsSqlRender.NSQL_MaximumConstArrayLength">
            <summary>
            最大的常數陣列長度(in命令)
            </summary>
        </member>
        <member name="P:ftd.nsql.render.NsSqlRender.NSQL_MaximumStatementLength">
            <summary>
            最大的Sql命令長度
            </summary>
        </member>
        <member name="P:ftd.nsql.render.NsSqlRender.NSQL_IsFullJoinable">
            <summary>
            資料庫是否值援FullJoin，如回答否，NsSql將自行合成FullJoin
            </summary>
        </member>
        <member name="P:ftd.nsql.render.NsSqlRender.NSQL_IsMustSingleSelectWhenIn">
            <summary>
            Select是否有以下的規則
            in(Select ... union select ...)時
            需變成in (select C from (Select ... union select ...) )的形式
            </summary>
        </member>
        <member name="P:ftd.nsql.render.NsSqlRender.NSQL_IsEmptyAsBlank">
            <summary>
            空字串是否當成 ' '
            NSQL規則:檔然不是
            </summary>
        </member>
        <member name="P:ftd.nsql.render.NsSqlRender.NSQL_IsConcatNullEquNULL">
            <summary>
            X與NULL相加是否回等於NULL
            NSQL規則:是 X + NULL => X
            </summary>
        </member>
        <member name="P:ftd.nsql.render.NsSqlRender.SQL">
            <summary>
            寫入的SQL內容
            </summary>
        </member>
        <member name="T:ftd.nsql.render.NsSqlRender.CRenderScope">
            <summary>
            Render Scope
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsSqlRender.CRenderScope.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:ftd.nsql.render.NsSqlRender.CRenderScope.SqlStmt">
            <summary>
            Last SqlStmt
            </summary>
        </member>
        <member name="P:ftd.nsql.render.NsSqlRender.CRenderScope.SqlStmtKind">
            <summary>
            0.TopSQL(Select XXX) 
            1.from(Sql) or join(Sql) 
            2.In(Sql) or Exists(Sql) 
            3.union all (Sql)
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsMsSqlRender.makeStringCompareTranslate(ftd.nsql.NsValue)">
            <summary>
            空字串比較變更
            </summary>
        </member>
        <member name="T:ftd.nsql.render.NsOracleSqlRender">
            <summary>
            Oracle SqlRender
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsOracleSqlRender.makeStringCompareTranslate(ftd.nsql.NsValue)">
            <summary>
            空字串比較變更
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsOracleSqlRender.cd_writeTableAlias(System.String)">
            <summary>
            輸出表格別名
            </summary>
        </member>
        <member name="T:ftd.nsql.NsOrderByNode">
            <summary>
            排序節點
            </summary>    
        </member>
        <member name="P:ftd.nsql.NsOrderByNode.Sorts">
            <summary>
            排序條件
            </summary>
        </member>
        <member name="T:ftd.nsql.NsSelectListNode">
            <summary>
            代表SQL與法 Select XX, XX, XX, XX
            </summary>    
        </member>
        <member name="M:ftd.nsql.NsSelectListNode.#ctor(System.Collections.IList)">
            <summary>
            Constructor
            </summary>
            <param node_4="selectValues"></param>
        </member>
        <member name="P:ftd.nsql.NsSelectListNode.Selects">
            <summary>
            選擇的欄位
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSelectListNode.Count">
            <summary>
            欄位數量
            </summary>
        </member>
        <member name="T:ftd.nsql.NsSortValue">
            <summary>
            排序順序
            </summary>    
        </member>
        <member name="F:ftd.nsql.NsSortValue.IsAscending">
            <summary>
            是否由小到大排序
            </summary>
        </member>
        <member name="M:ftd.nsql.NsSortValue.cloneSort">
            <summary>
            Clone Sort Node
            </summary>
        </member>
        <member name="P:ftd.nsql.NsSortValue.SortValue">
            <summary>
            排序條件
            </summary>
        </member>
        <member name="T:ftd.nsql.NsUnionListNode">
            <summary>
            UnionNode的集合
            </summary>
        </member>
        <member name="P:ftd.nsql.NsUnionListNode.Items">
            <summary>
            項目集合
            </summary>
        </member>
        <member name="T:ftd.nsql.NsUnionNode">
            <summary>
            Union Node
            </summary>
        </member>
        <member name="P:ftd.nsql.NsUnionNode.IsUnionAll">
            <summary>
            是否是UnionAll或Union
            </summary>
        </member>
        <member name="P:ftd.nsql.NsUnionNode.UnionSelect">
            <summary>
            Union的Select陳述
            </summary>
        </member>
        <member name="T:ftd.nsql.NsVarCondition">
            <summary>
            變數條件
            </summary>
        </member>
        <member name="F:ftd.nsql.NsVarCondition.Require1">
            <summary>
            必要輸入(變數必須長度>=1以上)
            </summary>
        </member>
        <member name="F:ftd.nsql.NsVarCondition.Require0">
            <summary>
            必要輸入(變數必須不是Null)
            </summary>
        </member>
        <member name="F:ftd.nsql.NsVarCondition.Optional1">
            <summary>
            選擇性(變數必須長度>=1以上)
            </summary>
        </member>
        <member name="F:ftd.nsql.NsVarCondition.Optional0">
            <summary>
            選擇性(變數必須不是Null)
            </summary>
        </member>
        <member name="M:ftd.nsql.NsVarCondition.isEmptyMatch(ftd.nsql.NsValue)">
            <summary>
            是否符合空條件
            </summary>
        </member>
        <member name="T:ftd.nsql.NsWhereNode">
            <summary>
            Where Node
            </summary>
        </member>
        <member name="T:ftd.nsql.NsConstArrayExecuter">
            <summary>
            常數陣列執行者
            </summary>
        </member>
        <member name="T:ftd.nsql.NsEmptyExecuter">
            <summary>
            特殊值:空值(選擇性)    
            </summary>   
        </member>
        <member name="T:ftd.nsql.render.NsJetSqlRender">
            <summary>
            Access SqlRender
            </summary>
        </member>
        <member name="M:ftd.nsql.render.NsJetSqlRender.renderSql(ftd.nsql.NsJoinOnNode)">
            <summary>
            RenderSQL
            </summary>
        </member>
        <member name="T:ftd.data.IsDataMatch`1">
            <summary>
            資料是否符合
            </summary>    
        </member>
        <member name="T:ftd.data.FtdContextII`1">
            <summary>
            可跨執行緒傳送的Context
            跨執行緒時會Copy一份至新執行緒
            </summary>
        </member>
        <member name="M:ftd.data.FtdContextII`1.afterUse">
            <summary>
            在Call Use後
            </summary>
        </member>
        <member name="P:ftd.data.FtdContextII`1.Calls">
            <summary>
            Call(Now), Call(3), Call(2) .. Call(First)
            </summary>
        </member>
        <member name="T:ftd.data.FtdDataKeyReplacer">
            <summary>
            可置換鍵值
            通常用於離線資料回傳
            </summary>
        </member>
        <member name="F:ftd.data.FtdDataKeyReplacer.ReplaceKeyValues">
            <summary>
            已置換的鍵值
            (HCCS_N_1, HCCS_2A00234567)
            </summary>
        </member>
        <member name="F:ftd.data.FtdDataKeyReplacer.NewKeyColumnNames">
            <summary>
            應重新編排鍵值的欄位
            </summary>
        </member>
        <member name="F:ftd.data.FtdDataKeyReplacer.NewKeyPrefixs">
            <summary>
            應重新編排鍵值(對應表)
            (HCCS_N_, HCCS_)
            </summary>
        </member>
        <member name="F:ftd.data.FtdDataKeyReplacer.ForeginKeyColumnNames">
            <summary>
            應重新編排鍵值的欄位
            因為參考主鍵所以必須改變
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataKeyReplacer.replaceKeys(System.Data.DataSet)">
            <summary>
            置換鍵值
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataKeyReplacer.getKeyPrefix(System.String)">
            <summary>
            取得Key的Prefix
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataKeyReplacer.findKeyColumn(System.Data.DataTable)">
            <summary>
            搜尋New鍵值欄位(必須為字串類型)
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataKeyReplacer.findForeignKeyColumns(System.Data.DataTable)">
            <summary>
            搜尋ForeignKey欄位(必須為字串類型)
            </summary>
        </member>
        <member name="T:ftd.data.FtdDataTable">
            <summary>
            基礎DataTable
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataTable.getTableSchema(System.Xml.Schema.XmlSchemaSet,System.Data.DataTable,System.String)">
            <summary>
            取得TableSchema For WebService
            可正常的支援WebService於傳遞強性別表格。
            </summary>       
        </member>
        <member name="M:ftd.data.FtdDataTable.initColumns">
            <summary>
            初始欄位
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataTable.createColumns">
            <summary>
            建立欄位
            </summary>              
        </member>
        <member name="M:ftd.data.FtdDataTable.getFirstRow">
            <summary>
            取得第一列
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataTable.getTypeRows``1">
            <summary>
            取得強型別列集合
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataTable.getPrimaryKeys">
            <summary>
            取得主鍵集合
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataTable.getPrimaryKeys``1">
            <summary>
            取得主鍵集合
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataTable.getPrimaryKeys(ftd.data.IsDataMatch{System.Data.DataRow})">
            <summary>
            取得主鍵集合(string)
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataTable.getPrimaryKeys``1(ftd.data.IsDataMatch{System.Data.DataRow})">
            <summary>
            取得主鍵集合
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataTable.toDataSet">
            <summary>
            轉成DataSet指擁有這個Table
            </summary>
        </member>
        <member name="P:ftd.data.FtdDataTable.Count">
            <summary>
            DataRow Count
            </summary>
        </member>
        <member name="T:ftd.data.FtdDataRow">
            <summary>
            基礎DataRow
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataRow.getAttrSetString(System.String)">
            <summary>
            Attribute Set String
            </summary>   
        </member>
        <member name="M:ftd.data.FtdDataRow.getAttrGetString(System.Object)">
            <summary>
            Attribute Get String
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataRow.getAttrSetValue``1(System.Nullable{``0})">
            <summary>
            Attribute Set Value
            </summary>   
        </member>
        <member name="M:ftd.data.FtdDataRow.getAttrGetValue``1(System.Object)">
            <summary>
            Attribute Get Value
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataRow.getAttrSetByteArray(System.Byte[])">
            <summary>
            Attribute Set Value
            </summary>   
        </member>
        <member name="M:ftd.data.FtdDataRow.getAttrGetByteArray(System.Object)">
            <summary>
            Attribute Get Value
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataRow.ns_AssignNewId">
            <summary>
            透過NSQL指定新的ID
            </summary>
        </member>
        <member name="T:ftd.data.FtdDbFile">
            <summary>
            資料庫檔案
            </summary>
        </member>
        <member name="F:ftd.data.FtdDbFile.FileId">
            <summary>
            檔案Id
            </summary>
        </member>
        <member name="F:ftd.data.FtdDbFile.FileFullName">
            <summary>
            完整檔案名稱 例:C:\001\ABC.pfd
            </summary>
        </member>
        <member name="T:ftd.data.FtdDim2Interface`3">
            <summary>
            2維座標操作介面類別
            </summary>    
        </member>
        <member name="M:ftd.data.FtdDim2Interface`3.getValue(`0,`1)">
            <summary>
            取得值
            </summary>
        </member>
        <member name="M:ftd.data.FtdDim2Interface`3.setValue(`0,`1,`2)">
            <summary>
            設定值
            </summary>
        </member>
        <member name="T:ftd.data.FtdExtProperty">
            <summary>
            衍生屬性 Helper
            </summary>
        </member>
        <member name="M:ftd.data.FtdExtProperty.getext``2(``0,ftd.data.FtdExtProperty{``0,``1})">
            <summary>
            取得衍生屬性
            </summary>
        </member>
        <member name="M:ftd.data.FtdExtProperty.createExtProp``2(System.Func{``0,``1})">
            <summary>
            建立衍生屬性庫
            </summary>
        </member>
        <member name="T:ftd.data.FtdExtProperty`2">
            <summary>
            衍生屬性
            </summary>
        </member>
        <member name="F:ftd.data.FtdExtProperty`2.Values">
            <summary>
            屬性集合
            </summary>
        </member>
        <member name="F:ftd.data.FtdExtProperty`2.CreateDefault">
            <summary>
            建立預設屬性
            </summary>
        </member>
        <member name="M:ftd.data.FtdExtProperty`2.clear">
            <summary>
            清除所有衍生屬性
            </summary>
        </member>
        <member name="P:ftd.data.FtdExtProperty`2.Item(`0)">
            <summary>
            取得衍生屬性
            </summary>        
        </member>
        <member name="T:ftd.data.FtdGroupKey`1">
            <summary>
            分組鍵值
            </summary>
        </member>
        <member name="F:ftd.data.FtdGroupKey`1.KeyValues">
            <summary>
            鍵值內容
            </summary>
        </member>
        <member name="F:ftd.data.FtdGroupKey`1.HashCode">
            <summary>
            雜湊值
            </summary>
        </member>
        <member name="M:ftd.data.FtdGroupKey`1.Equals(System.Object)">
            <summary>
            以實質內容比較之
            </summary>
        </member>
        <member name="P:ftd.data.FtdGroupKey`1.SubKeys">
            <summary>
            鍵值子鍵值
            </summary>
        </member>
        <member name="P:ftd.data.FtdGroupKey`1.DataItems">
            <summary>
            符合此鍵值的資料項目
            </summary>
        </member>
        <member name="T:ftd.data.FtdGroupKeyList`1">
            <summary>
            鍵值集合
            </summary>
        </member>
        <member name="M:ftd.data.FtdGroupKeyList`1.findKey(ftd.data.FtdGroupKey{`0})">
            <summary>
            找到GroupKey 
            </summary> 
        </member>
        <member name="M:ftd.data.FtdGroupKeyList`1.findKey(System.Object[])">
            <summary>
            找到GroupKey
            </summary> 
        </member>
        <member name="T:ftd.data.FtdGrouper`1">
            <summary>
            此類別可對資料來源做分組運算，並可對每個分組的結果再次分組
            相同資料將被歸屬一鍵值
            </summary>
        </member>
        <member name="F:ftd.data.FtdGrouper`1.SubGrouper">
            <summary>
            子群組(內部計算用)
            </summary>
        </member>
        <member name="F:ftd.data.FtdGrouper`1.GetConditions">
            <summary>
            資料列取得鍵值得方法集合
            </summary>
        </member>
        <member name="M:ftd.data.FtdGrouper`1.addCondition(ftd.data.FtdGrouper{`0}.GetKeyValue[])">
            <summary>
            增加分組條件
            </summary>
        </member>
        <member name="M:ftd.data.FtdGrouper`1.createGroupKey(`0)">
            <summary>
            Create Key
            </summary>            
        </member>
        <member name="M:ftd.data.FtdGrouper`1.doGroupBy(System.Collections.IEnumerable)">
            <summary>
            執行GroupBy運算
            </summary>            
        </member>
        <member name="T:ftd.data.FtdGrouper`1.GetKeyValue">
            <summary>
            取得鍵值得方法
            </summary>        
        </member>
        <member name="T:ftd.data.FtdDataDependency`1">
            <summary>
            資料相依性的設定與檢查    
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataDependency`1.findKeys(System.Int32)">
            <summary>
            查詢指定階層的鍵值
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataDependency`1.addDependency(`0,`0[])">
            <summary>
            加入參考關係
            </summary>        
        </member>
        <member name="M:ftd.data.FtdDataDependency`1.addDependencys(`0,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            加入參考關係
            </summary>        
        </member>
        <member name="M:ftd.data.FtdDataDependency`1.getOrCreateItem(`0)">
            <summary>
            取得或建立指定內容的項目，並加入清單中
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataDependency`1.calcDataDependency">
            <summary>
            計算相依性關係
            檢查有無循環相依，並計算出階層Level
            </summary>       
        </member>
        <member name="P:ftd.data.FtdDataDependency`1.MaxLevel">
            <summary>
            最大階層號
            </summary>
        </member>
        <member name="P:ftd.data.FtdDataDependency`1.Item(`0)">
            <summary>
            查詢
            </summary>
        </member>
        <member name="T:ftd.data.FtdDataDependency`1.DependItem">
            <summary>
            物件:清單項目
            </summary>
        </member>
        <member name="F:ftd.data.FtdDataDependency`1.DependItem.Key">
            <summary>
            原始物件
            </summary>
        </member>
        <member name="F:ftd.data.FtdDataDependency`1.DependItem.Dependencys">
            <summary>
            依賴物件清單
            </summary>
        </member>
        <member name="F:ftd.data.FtdDataDependency`1.DependItem.DependencyBys">
            <summary>
            被哪些物件依賴清單
            </summary>
        </member>
        <member name="M:ftd.data.FtdDataDependency`1.DependItem.getLevelRecursive(System.Collections.Generic.Stack{ftd.data.FtdDataDependency{`0}.DependItem})">
            <summary>
            取得並計算階層號碼 0:最底層
            遞迴程序
            </summary>             
        </member>
        <member name="P:ftd.data.FtdDataDependency`1.DependItem.DependLevel">
            <summary>
            依賴階層號 0 代表最基本的物件
            </summary>
        </member>
        <member name="P:ftd.data.FtdDataDependency`1.DependItem.DependExpress">
            <summary>
            相依關係描述式
            例:F:4->(Name_U:0,E:3->(C:1->(Name:0,Name_U:0),D:2->C:1->(Name:0,Name_U:0)))
            </summary>
        </member>
        <member name="T:ftd.data.FtdSetable`1">
            <summary>
            可設定值得類別
            通常用於匿名類別
            </summary>   
        </member>
        <member name="P:ftd.data.FtdSetable`1.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:ftd.data.FtdXmlMenu">
            <summary>
            MenuData
            </summary>
        </member>
        <member name="M:ftd.data.FtdXmlMenu.loadXmlMenu(System.String)">
            <summary>
            載入XmlMenu
            自動生成 id屬性
            </summary>
        </member>
        <member name="M:ftd.data.FtdXmlMenu.loadXmlMenu(System.Xml.XmlDocument)">
            <summary>
            載入XmlMenu
            自動生成 id屬性
            </summary>
        </member>
        <member name="M:ftd.data.FtdXmlMenu._expandNode(System.Xml.XmlNode,ftd.data.FtdXmlMenuNode)">
            <summary>
            展開節點
            </summary>
        </member>
        <member name="M:ftd.data.FtdXmlMenu.doNodeFilter(System.Func{ftd.data.FtdXmlMenuNode,System.Boolean})">
            <summary>
            1.篩選項目(Node),不符合條件者將被移除。
            2.項目(目錄)若不存在任何子項目，最後將被移除。
            </summary>
        </member>
        <member name="M:ftd.data.FtdXmlMenu.findeNodeById(System.String)">
            <summary>
            選取指定的節點
            </summary>
        </member>
        <member name="M:ftd.data.FtdXmlMenu.findeNodeByAttr(System.String,System.String)">
            <summary>
            選取指定的節點
            </summary>
        </member>
        <member name="M:ftd.data.FtdXmlMenu.selectNodes(System.Func{ftd.data.FtdXmlMenuNode,System.Boolean})">
            <summary>
            選取所要的項目(Node)
            目錄不會被選取
            </summary>
        </member>
        <member name="M:ftd.data.FtdXmlMenu.iteratorNodes(ftd.data.FtdXmlMenuNode,System.Action{ftd.data.FtdXmlMenuNode},System.Action{ftd.data.FtdXmlMenuNode})">
            <summary>
            尋訪所有節點(不包含Root)
            </summary>    
        </member>
        <member name="P:ftd.data.FtdXmlMenu.RootNode">
            <summary>
            根節點(VirtualNode)
            </summary>
        </member>
        <member name="T:ftd.data.FtdXmlMenuNode">
            <summary>
            節點
            </summary>
        </member>
        <member name="M:ftd.data.FtdXmlMenuNode.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:ftd.data.FtdXmlMenuNode.ID">
            <summary>
            唯一節點代號
            </summary>
        </member>
        <member name="P:ftd.data.FtdXmlMenuNode.Attributes">
            <summary>
            屬性集合
            </summary>
        </member>
        <member name="P:ftd.data.FtdXmlMenuNode.Parent">
            <summary>
            父節點
            </summary>
        </member>
        <member name="P:ftd.data.FtdXmlMenuNode.Item(System.String)">
            <summary>
            屬性內容(不存在回傳NULL)
            </summary>            
        </member>
        <member name="P:ftd.data.FtdXmlMenuNode.ChildNodes">
            <summary>
            子節點(NonSerialized)
            </summary>        
        </member>
        <member name="T:ftd.data.FtdPermissionObjectNeedAttribute">
            <summary>
            權限必須指定物件
            </summary>
        </member>
        <member name="T:ftd.data.FtdPermissionExcludeAttribute">
            <summary>
            不包含那些權限
            </summary>
        </member>
        <member name="T:ftd.data.FtdPermissionIncludeAttribute">
            <summary>
            此權限包含有哪些權限
            例:[AppPermissionInclude("APN_.*")]
            例:[AppPermissionInclude("APN_KmQuery,APN_KmView,APN_KmNew")]
            </summary>
        </member>
        <member name="T:ftd.data.FtdEmail">
            <summary>
            基礎Email,支援保存後傳送的功能
            </summary>
        </member>
        <member name="F:ftd.data.FtdEmail.BodyType_HTML">
            <summary>
            Html格式
            </summary>
        </member>
        <member name="F:ftd.data.FtdEmail.BodyType_TXT">
            <summary>
            文字檔格式
            </summary>
        </member>
        <member name="F:ftd.data.FtdEmail.CreateDate">
            <summary>
            郵件建立日期
            </summary>
        </member>
        <member name="M:ftd.data.FtdEmail.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.data.FtdEmail.addTo(System.String,System.String)">
            <summary>
            追加收件者
            </summary>
        </member>
        <member name="M:ftd.data.FtdEmail.addCc(System.String,System.String)">
            <summary>
            追加副本者
            </summary>
        </member>
        <member name="M:ftd.data.FtdEmail.getLifeMinute">
            <summary>
            存活分鐘數，建立後超出此時間未送出將會刪除
            default(60)
            </summary>
        </member>
        <member name="F:ftd.data.FtdEmail.IsSendOk">
            <summary>
            是否已寄送出
            </summary>
        </member>
        <member name="M:ftd.data.FtdEmail.getNextSendMail">
            <summary>
            取出要寄出的郵件(Support Mulit Email Mode 傳NULL代表沒有郵件了)
            </summary>
        </member>
        <member name="M:ftd.data.FtdEmail.onSendOk">
            <summary>
            告之剛才取出的郵件已寄送成功
            </summary>
        </member>
        <member name="M:ftd.data.FtdEmail.getEncoding">
            <summary>
            取得郵件編碼
            </summary>
        </member>
        <member name="M:ftd.data.FtdEmail.send">
            <summary>
            送出郵件
            </summary>
        </member>
        <member name="M:ftd.data.FtdEmail.addAttachment(System.String,System.String)">
            <summary>
            加入附件檔案
            </summary>
        </member>
        <member name="M:ftd.data.FtdEmail.addAttachment(System.IO.Stream,System.String)">
            <summary>
            加入附件檔案
            </summary>
        </member>
        <member name="P:ftd.data.FtdEmail.MailTos">
            <summary>
            收件者(Email,Name)
            </summary>
        </member>
        <member name="P:ftd.data.FtdEmail.MailCcs">
            <summary>
            副本者(Email,Name)
            </summary>
        </member>
        <member name="P:ftd.data.FtdEmail.Attachemnts">
            <summary>
            郵件附件
            </summary>
        </member>
        <member name="P:ftd.data.FtdEmail.Subject">
            <summary>
            郵件主旨
            </summary>
        </member>
        <member name="P:ftd.data.FtdEmail.Body">
            <summary>
            郵件內容
            </summary>
        </member>
        <member name="P:ftd.data.FtdEmail.BodyType">
            <summary>
            郵件內容類型
            </summary>
        </member>
        <member name="T:ftd.data.FtdEmail.CAttachment">
            <summary>
            附件檔案
            </summary>
        </member>
        <member name="P:ftd.data.FtdEmail.CAttachment.FileName">
            <summary>
            檔案名稱
            </summary>
        </member>
        <member name="P:ftd.data.FtdEmail.CAttachment.FileData">
            <summary>
            檔案資料(Base64Encode)
            </summary>
        </member>
        <member name="T:ftd.data.FtdPermission">
            <summary>
            權限物件
            </summary>
        </member>
        <member name="F:ftd.data.FtdPermission.IncludePattern">
            <summary>
            包含的子權限(載入過程用)
            </summary>
        </member>
        <member name="F:ftd.data.FtdPermission.ExcludePattern">
            <summary>
            不包含的子權限(載入過程用)
            </summary>
        </member>
        <member name="M:ftd.data.FtdPermission.#ctor(ftd.service.FtdPermissionService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.data.FtdPermission.queryObjPermNames">
            <summary>
            查詢權限(及物)所有代碼        
            因為有Include關係所以會有多個代碼的可能
            例:目錄審核權可能會有目錄審核權與目錄管理權
            </summary>   
        </member>
        <member name="P:ftd.data.FtdPermission.IsObjectWith">
            <summary>
            權限是否必須指定物件(及物)
            </summary>
        </member>
        <member name="P:ftd.data.FtdPermission.PermissionName">
            <summary>
            權限名稱
            </summary>
        </member>
        <member name="P:ftd.data.FtdPermission.Childs">
            <summary>
            子權限(by include and exclude attribute)
            先找尋所有Include的對象，再移除Exclude的對象
            </summary>
        </member>
        <member name="P:ftd.data.FtdPermission.Parents">
            <summary>
            Parents(who include this permission)
            </summary>
        </member>
        <member name="P:ftd.data.FtdPermission.AllParents">
            <summary>
            All Parents(who include this permission)
            </summary>
        </member>
        <member name="P:ftd.data.FtdPermission.AllChilds">
            <summary>
            節點所有子節點
            </summary>
        </member>
        <member name="T:ftd.data.FtdActorPermission">
            <summary>
            代表一個動作者(動作者、機關、群組)所擁有的權限
            </summary>
        </member>
        <member name="M:ftd.data.FtdActorPermission.containPermisson(System.String)">
            <summary>
            是否擁有權限
            例:(系統管理者權限)
            </summary>
        </member>
        <member name="M:ftd.data.FtdActorPermission.containPermissons(System.String[])">
            <summary>
            是否擁有權限
            例:(審核者權限、管理者權限)
            </summary>
        </member>
        <member name="M:ftd.data.FtdActorPermission.containActors(System.Collections.Generic.List{System.String})">
            <summary>
            是否擁有指定的動作者
            例:(王大明、管理者群組)
            </summary>
        </member>
        <member name="M:ftd.data.FtdActorPermission.containObjectPermission(System.String,System.String)">
            <summary>
            動作者是否擁有物件權限
            例:(機密檔案,審核者權限)
            </summary>        
        </member>
        <member name="P:ftd.data.FtdActorPermission.ActorIds">
            <summary>        
            動作者與所屬機關或群組的ID
            </summary>
        </member>
        <member name="P:ftd.data.FtdActorPermission.Permissions">
            <summary>
            動作者擁有的權限
            </summary>
        </member>
        <member name="P:ftd.data.FtdActorPermission.PermissionNames">
            <summary>
            動作者擁有的權限
            </summary>
        </member>
        <member name="T:ftd.data.log.FtdEmailLog">
            <summary>
            MailLog
            </summary>
        </member>
        <member name="T:ftd.data.log.FtdLog">
            <summary>
            標準例外
            </summary>
        </member>
        <member name="F:ftd.data.log.FtdLog.Split_ByHour">
            <summary>
            檔案分切依小時
            </summary>
        </member>
        <member name="F:ftd.data.log.FtdLog.Split_ByDay">
            <summary>
            檔案分切依日期
            </summary>
        </member>
        <member name="F:ftd.data.log.FtdLog.Split_ByMonth">
            <summary>
            檔案分切依月份
            </summary>
        </member>
        <member name="F:ftd.data.log.FtdLog.Split_ByYear">
            <summary>
            檔案分切依年份
            </summary>
        </member>
        <member name="F:ftd.data.log.FtdLog.LogDate">
            <summary>
            紀錄日期
            </summary>
        </member>
        <member name="F:ftd.data.log.FtdLog.LogContent">
            <summary>
            紀錄內容
            </summary>
        </member>
        <member name="F:ftd.data.log.FtdLog._isEnabled">
            <summary>
            是否啟用記錄
            </summary>
        </member>
        <member name="M:ftd.data.log.FtdLog.render(System.IO.StreamWriter)">
            <summary>
            繪製LOG內容
            </summary>
        </member>
        <member name="M:ftd.data.log.FtdLog.getLogFileName">
            <summary>
            取得紀錄檔的前置名稱
            注意 一定要有副檔名
            </summary>
        </member>
        <member name="M:ftd.data.log.FtdLog.getMaxFileCount">
            <summary>
            保留檔案數量
            </summary>            
        </member>
        <member name="M:ftd.data.log.FtdLog.getFileSplit">
            <summary>
            取得檔案分切類型(預設By日期)
            </summary>            
        </member>
        <member name="M:ftd.data.log.FtdLog.post">
            <summary>
            發送此LOG
            </summary>
        </member>
        <member name="F:ftd.data.log.FtdEmailLog.Mail">
            <summary>
            FtdEmail or MailMessage
            </summary>
        </member>
        <member name="M:ftd.data.log.FtdEmailLog.#ctor(System.Object,System.String)">
            <summary>
            Mail 可以是 FtdMail or MailMessage
            </summary>
        </member>
        <member name="T:ftd.data.log.FtdScheduleTaskLog">
            <summary>
            排程LOG
            </summary>
        </member>
        <member name="T:ftd.data.log.FtdSqlLog">
            <summary>
            Sql Log 紀錄
            </summary>
        </member>
        <member name="M:ftd.data.log.FtdSqlLog.incLogLevel">
            <summary>
            增加紀錄階層
            </summary>
        </member>
        <member name="M:ftd.data.log.FtdSqlLog.decLogLevel">
            <summary>
            減少紀錄階層
            </summary>
        </member>
        <member name="F:ftd.data.log.FtdSqlLog.LogLevel">
            <summary>
            本紀錄的階層 0....N
            </summary>
        </member>
        <member name="M:ftd.data.log.FtdSqlLog.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.data.log.FtdSqlLog.getMaxFileCount">
            <summary>
            保留3天
            </summary>
        </member>
        <member name="P:ftd.data.log.FtdSqlLog.CallLogLevel">
            <summary>
            執行緒的LogCallLevel
            </summary>
        </member>
        <member name="T:ftd.data.log.FtdExceptionLog">
            <summary>
            例外錯誤
            </summary>
        </member>
        <member name="M:ftd.data.log.FtdExceptionLog.#ctor">
            <summary>
            Constructor
            </summary>        
        </member>
        <member name="M:ftd.data.log.FtdExceptionLog.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ftd.data.log.FtdServiceLog">
            <summary>
            服務例外
            </summary>
        </member>
        <member name="F:ftd.data.log.FtdServiceLog.ServiceName">
            <summary>
            服務名稱
            </summary>
        </member>
        <member name="F:ftd.data.log.FtdServiceLog.MessageType">
            <summary>
            訊息類型
            </summary>
        </member>
        <member name="M:ftd.data.log.FtdServiceLog.catchException(System.String,System.Threading.ThreadStart)">
            <summary>
            如有例外自動發送LOG
            不會傳出任何例外
            </summary>
        </member>
        <member name="T:ftd.data.FtdTypedDataTable`1">
            <summary>
            基礎DataTable
            </summary>
        </member>
        <member name="M:ftd.data.FtdTypedDataTable`1.addTypedRow(`0)">
            <summary>
            AddRow
            </summary>    
        </member>
        <member name="M:ftd.data.FtdTypedDataTable`1.newTypedRow">
            <summary>
            New DataRow
            </summary>
        </member>
        <member name="P:ftd.data.FtdTypedDataTable`1.FirstRow">
            <summary>
            第一列
            </summary>
        </member>
        <member name="P:ftd.data.FtdTypedDataTable`1.TypeRows">
            <summary>
            列集合
            </summary>
        </member>
        <member name="M:System.Collections.SystemCollectionsExt.findKey``2(System.Collections.Generic.Dictionary{``0,``1},``0)">
            <summary>
            依健值搜尋指定的值，如不存在回傳預設值
            </summary>
        </member>
        <member name="M:System.Collections.SystemCollectionsExt.findKeyExists``2(System.Collections.Generic.Dictionary{``0,``1},``0)">
            <summary>
            依健值搜尋指定的值是否存在，如不存在回傳false
            </summary>
        </member>
        <member name="M:System.Collections.SystemCollectionsExt.pairJoin(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            配對Join
            例 ({'Name','Name_U','C'}, "()") => "(Name)(Name_U)(C)"
            </summary>
        </member>
        <member name="M:System.Collections.SystemCollectionsExt.toUrlQueryString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            NameValueCollection轉成Url QueryString
            ex node=123&amp;nodes_3=456
            </summary>              
        </member>
        <member name="M:System.Data.SystemDataExt.getString(System.Data.DataRow,System.String)">
            <summary>
            把DBNULL視為空字串
            </summary>
        </member>
        <member name="M:System.Data.SystemDataExt.getString(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
            <summary>
            把DBNULL視為空字串
            </summary>
        </member>
        <member name="M:System.Data.SystemDataExt.getString(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            把DBNULL視為空字串
            </summary>
        </member>
        <member name="M:System.Data.SystemDataExt.getString(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
            <summary>
            把DBNULL視為空字串
            </summary>
        </member>
        <member name="M:System.Data.SystemDataExt.getString(System.Data.DataRow,System.Int32)">
            <summary>
            把DBNULL視為空字串
            </summary>
        </member>
        <member name="M:System.Data.SystemDataExt.getString(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
            <summary>
            把DBNULL視為空字串
            </summary>
        </member>
        <member name="T:System.SystemExt">
            <summary>
            日期擴充函數
            </summary>
            <summary>
            String 衍生函數
            </summary>
        </member>
        <member name="M:System.SystemExt.getRealAge(System.DateTime)">
            <summary>
            算出生日的年紀,實歲 最小為1歲
            </summary>        
        </member>
        <member name="M:System.SystemExt.toTwFormat(System.DateTime,System.String)">
            <summary>
            轉為民國年
            <param node_4="formatKind">
            A：98年12月7日
            B：98/10/02
            C：中華民國102年09月28日
            D：1020928
            E：10301
            F：104.04.16
            G：中華民國102年09月
            </param>
            </summary>        
        </member>
        <member name="M:System.SystemExt.toTwFormat(System.Nullable{System.DateTime},System.String)">
            <summary>
            轉為民國年
            <param node_4="formatKind">
            A：98年12月7日
            B：98/10/02
            C：中華民國102年09月28日
            D：1020928
            E：10301
            F：104.04.16
            G：中華民國102年09月
            </param>
            </summary>        
        </member>
        <member name="M:System.SystemExt.batchExecute(System.Int32,System.Int32,System.Action{System.Int32,System.Int32})">
            <summary>
            批次執行命令。        
            依據每次數量執行eachFunc(int startIndex, int length)
            </summary>        
        </member>
        <member name="M:System.SystemExt.inAny``1(``0,``0[])">
            <summary>
            IN 
            </summary>
        </member>
        <member name="M:System.SystemExt.inAny``1(``0,System.Collections.Generic.IList{``0})">
            <summary>
            注意 null in (null) 為True
            </summary>
        </member>
        <member name="M:System.SystemExt.elementsInAny``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})">
            <summary>
            集合成員
            </summary>
        </member>
        <member name="M:System.SystemExt.indexOf``1(``0,``0[])">
            <summary>
            IndexOf 不存在為-1
            </summary>
        </member>
        <member name="M:System.SystemExt.indexOf``1(``0,System.Collections.Generic.IList{``0})">
            <summary>
            IndexOf 不存在為-1
            </summary>
        </member>
        <member name="M:System.SystemExt.decode``2(``0,``0,``1,System.Object[])">
            <summary>
            key.decode(key1,value1,key2,value2,elseValue{選擇性})
            </summary>
        </member>
        <member name="M:System.SystemExt.decode``2(``0,System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``1},``1)">
            <summary>
            尋找並取得Code對應的名稱
            </summary>        
        </member>
        <member name="M:System.SystemExt.cast_as``1(System.Object)">
            <summary>
            轉型成
            </summary>
        </member>
        <member name="M:System.SystemExt.nullAs``1(``0,``0)">
            <summary>
            Null當成
            </summary>
        </member>
        <member name="M:System.SystemExt.isNull(System.Object)">
            <summary>
            是否為NULL
            </summary>
        </member>
        <member name="M:System.SystemExt.toSetable``1(``0)">
            <summary>
            轉成可指定物件
            </summary>
        </member>
        <member name="M:System.SystemExt.inAnyIgnoreCase(System.String,System.String[])">
            <summary>
            不分大小寫
            </summary>
        </member>
        <member name="M:System.SystemExt.inAnyIgnoreCase(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            不分大小寫
            </summary>
        </member>
        <member name="M:System.SystemExt.toShortString(System.String,System.Int32,System.String)">
            <summary>
            取得短字串
            </summary>   
        </member>
        <member name="M:System.SystemExt.equalIgnoreCase(System.String,System.String)">
            <summary>
            不分大小比對
            </summary>
        </member>
        <member name="M:System.SystemExt.pairSplit(System.String,System.String)">
            <summary>
            配對分割 
            例 ("()", "(Name)(Name_U)(C)") => {'Name','Name_U','C'}
            </summary>
        </member>
        <member name="M:System.SystemExt.mls_tolangtext(System.String,System.String)">
            <summary>
            (多國語系)
            取得目前使用者指定語系的文字
            </summary>
        </member>
        <member name="M:System.SystemExt.mls_tousrtext(System.String)">
            <summary>
            (多國語系)
            取得目前使用者指定語系的文字
            </summary>
        </member>
        <member name="M:System.SystemExt.htm_htmlEncode(System.String)">
            <summary>
             將字串轉換為 HTML 編碼的字串。
            </summary>   
        </member>
        <member name="M:System.SystemExt.htm_attrEncode(System.String)">
            <summary>
            
            </summary>   
        </member>
        <member name="M:System.SystemExt.verifyAsTwDate(System.String,System.String)">
            <summary>
            驗證民國日期格式，Y必需為3碼，M必需為5碼，D必需為7碼
            </summary>
            <param name="format">日期格式(Y/M/D)</param>
            <param name="dateString">要驗證的日期字串</param>
            <returns>驗證是否正確</returns>
        </member>
        <member name="M:System.SystemExt.verifyAsTwDate(System.String,System.String,System.DateTime@)">
            <summary>
            驗證民國日期格式，Y必需為3碼，M必需為5碼，D必需為7碼
            </summary>
            <param name="format">日期格式(Y/M/D)</param>
            <param name="dateString">要驗證的日期字串</param>
            <param name="theDate">回傳值：Y該年的第一天，M該月的第一天，D為該日</param>
            <returns>驗證是否正確</returns>
        </member>
        <member name="M:System.SystemExt.verifyAsTwCitizenId(System.String)">
            <summary>
            檢查身分證字號
            </summary>
            <param name="citizenId">身分證字號</param>
            <returns>檢核正確回傳true，不正確回傳false</returns>
        </member>
        <member name="T:System.Web.SystemWebExt">
            <summary>
            Web控制項的擴充函數
            </summary>
        </member>
        <member name="M:System.Web.SystemWebExt.selectTreeNodes(System.Web.UI.WebControls.TreeView)">
            <summary>
            遞回找出所有符合條件與類型的控制項
            </summary>        
        </member>
        <member name="M:System.Web.SystemWebExt.selectTreeNodes(System.Web.UI.WebControls.TreeView,System.Func{System.Web.UI.WebControls.TreeNode,System.Boolean})">
            <summary>
            遞回找出所有符合條件與類型的控制項
            </summary>        
        </member>
        <member name="M:System.Xml.SystemXmlExt.getAttrValue(System.Xml.XmlElement,System.String)">
            <summary>
            取得屬性值，屬性不存在傳回null
            </summary>       
        </member>
        <member name="T:ftd.io.FtdFileTrans">
            <summary>
            檔案交易
            </summary>
        </member>
        <member name="F:ftd.io.FtdFileTrans.Items">
            <summary>
            異動項目集合
            </summary>
        </member>
        <member name="M:ftd.io.FtdFileTrans.doFolderCreate(System.String)">
            <summary>
            目錄建立
            </summary>
        </member>
        <member name="M:ftd.io.FtdFileTrans.doFolderMove(System.String,System.String)">
            <summary>
            目錄搬移
            </summary>
        </member>
        <member name="M:ftd.io.FtdFileTrans.doFileCopy(System.String,System.String)">
            <summary>
            執行-檔案複製
            </summary>
        </member>
        <member name="M:ftd.io.FtdFileTrans.doFileMove(System.String,System.String)">
            <summary>
            執行-檔案搬移
            </summary>
        </member>
        <member name="M:ftd.io.FtdFileTrans.doCommit">
            <summary>
            動作完成
            </summary>
        </member>
        <member name="M:ftd.io.FtdFileTrans.doRollback">
            <summary>
            動作取消
            </summary>
        </member>
        <member name="T:ftd.io.FtdFileTrans.CTranItem">
            <summary>
            異動項目
            </summary>
        </member>
        <member name="F:ftd.io.FtdFileTrans.CTranItem.IsCommit">
            <summary>
            動作是否完成
            </summary>
        </member>
        <member name="F:ftd.io.FtdFileTrans.CTranItem.doCommit">
            <summary>
            完成動作
            </summary>
        </member>
        <member name="F:ftd.io.FtdFileTrans.CTranItem.doRollback">
            <summary>
            還原動作
            </summary>
        </member>
        <member name="M:ftd.FtdComHelper.registerComWithTypeLib(System.String)">
            <summary>
            註冊Assembly成為Com並自動產生TypeLib註冊       
            </summary>        
        </member>
        <member name="M:ftd.FtdComHelper.unregisterComWithTypeLib(System.String)">
            <summary>
            移除Assembly成為Com並移除TypeLib註冊
            </summary> 
        </member>
        <member name="T:ftd.data.FtdGroupTable">
            <summary>
            Groupby結果表格
            </summary>
            <summary>
            GroupBy結果
            </summary>
        </member>
        <member name="F:ftd.data.FtdGroupTable.Rows">
            <summary>
            列集合
            </summary>
        </member>
        <member name="M:ftd.data.FtdGroupTable.findByDetailRow(System.Data.DataRow)">
            <summary>
            找到GroupRow 
            </summary>            
        </member>
        <member name="M:ftd.data.FtdGroupTable.findByKeys(ftd.data.FtdGroupTableKey)">
            <summary>
            找到GroupRow 
            </summary> 
        </member>
        <member name="M:ftd.data.FtdGroupTable.findByKeys(System.Object[])">
            <summary>
            找到GroupRow 
            </summary> 
        </member>
        <member name="M:ftd.data.FtdGroupTable.groupByDataTable(System.Data.DataView,ftd.data.FtdGroupTable.GetGroupByKey[])">
            <summary>
            GroupBy DataTable
            </summary>        
        </member>
        <member name="M:ftd.data.FtdGroupTable.sequenceGroupBy(System.Data.DataRow[],ftd.data.FtdGroupTable.IsSameGroup,ftd.data.FtdGroupTable.GetGroupByKey[])">
            <summary>
            Group by 資料列
            昰不是相同群組，由使用者自行定義
            由於會循序檢查，使用者應先把資料排序好
            </summary>
        </member>
        <member name="M:ftd.data.FtdGroupTable.groupByDataTable(System.Data.DataTable,ftd.data.FtdGroupTable.GetGroupByKey[])">
            <summary>
            GroupBy DataTable
            </summary> 
        </member>
        <member name="M:ftd.data.FtdGroupTable.groupByDataTable(System.Collections.ICollection,ftd.data.FtdGroupTable.GetGroupByKey[])">
            <summary>
            GroupBy DataTable
            </summary> 
        </member>
        <member name="M:ftd.data.FtdGroupTable.groupByDataTable(System.Data.DataTable,ftd.data.FtdGroupTable.GetGroupByKey[],ftd.data.FtdGroupTable.GetColumnValue)">
            <summary>
            將目前Table直接GroupBy(通常用於維度提升)
            </summary>
        </member>
        <member name="M:ftd.data.FtdGroupTable.groupByDataTable(System.Data.DataView,ftd.data.FtdGroupTable.GetGroupByKey[],ftd.data.FtdGroupTable.GetColumnValue)">
            <summary>
            將目前Table直接GroupBy(通常用於維度提升)
            </summary>
        </member>
        <member name="T:ftd.data.FtdGroupTable.GetGroupByKey">
            <summary>
            取得群組值
            </summary>        
        </member>
        <member name="T:ftd.data.FtdGroupTable.IsSameGroup">
            <summary>
            說明Row1與Row2是否是相同的群組
            </summary>        
        </member>
        <member name="T:ftd.data.FtdGroupTable.GetColumnValue">
            <summary>
            取得欄位值
            </summary>
        </member>
        <member name="T:ftd.data.FtdGroupTable.DataGroupByer">
            <summary>
            GroupBy運算
            </summary>
        </member>
        <member name="M:ftd.data.FtdGroupTable.DataGroupByer.createRowKey(System.Data.DataRow)">
            <summary>
            Create Key
            </summary>            
        </member>
        <member name="M:ftd.data.FtdGroupTable.DataGroupByer.doGroupBy(System.Collections.ICollection)">
            <summary>
            執行 GroupBy運算
            </summary>            
        </member>
        <member name="P:ftd.data.FtdGroupTable.DataGroupByer.GetKeys">
            <summary>
            運算鍵值函數集合
            </summary>
        </member>
        <member name="T:ftd.data.FtdGroupTable.SequenceDataGroupByer">
            <summary>
            GroupBy運算
            </summary>
        </member>
        <member name="F:ftd.data.FtdGroupTable.SequenceDataGroupByer.IsSameGroupMethod">
            <summary>
            是否相同群組
            </summary>
        </member>
        <member name="M:ftd.data.FtdGroupTable.SequenceDataGroupByer.createRowKey(System.Data.DataRow)">
            <summary>
            Create Key
            </summary>            
        </member>
        <member name="M:ftd.data.FtdGroupTable.SequenceDataGroupByer.doGroupBy(System.Data.DataRow[])">
            <summary>
            執行 GroupBy運算
            </summary>            
        </member>
        <member name="P:ftd.data.FtdGroupTable.SequenceDataGroupByer.GetKeys">
            <summary>
            運算鍵值函數集合
            </summary>
        </member>
        <member name="T:ftd.data.FtdGroupTableRow">
            <summary>
            GroupBy結果列
            </summary>
        </member>
        <member name="F:ftd.data.FtdGroupTableRow.KeyValues">
            <summary>
            GroupBy鍵值
            </summary>
        </member>
        <member name="F:ftd.data.FtdGroupTableRow.DetailRows">
            <summary>
            鍵值所屬明細
            </summary>
        </member>
        <member name="M:ftd.data.FtdGroupTableRow.sumOf(System.String)">
            <summary>
            聚合函數-平均值 (NULL排除)
            </summary>            
        </member>
        <member name="M:ftd.data.FtdGroupTableRow.first(System.String)">
            <summary>
            第一筆資料
            </summary>
        </member>
        <member name="M:ftd.data.FtdGroupTableRow.avgOf(System.String)">
            <summary>
            聚合函數-平均值 (NULL排除)
            </summary>            
        </member>
        <member name="M:ftd.data.FtdGroupTableRow.getDetailsJoin(System.String,System.String)">
            <summary>
            聚合函數-字串相加 (NULL排除)
            </summary>                
        </member>
        <member name="M:ftd.data.FtdGroupTableRow.getDetailsJoin(System.String,ftd.data.FtdGroupTableRow.GetRowValue)">
            <summary>
            聚合函數-字串相加 回傳Null or String.Empty不列入
            </summary>                
        </member>
        <member name="T:ftd.data.FtdGroupTableRow.GetRowValue">
            <summary>
            取得列的值
            </summary>
        </member>
        <member name="T:ftd.data.FtdGroupTableRow.IsRowInclude">
            <summary>
            列是否保含
            </summary>
        </member>
        <member name="T:ftd.data.FtdGroupTableKey">
            <summary>
            Group鍵值
            </summary>
        </member>
        <member name="M:ftd.data.FtdGroupTableKey.Equals(System.Object)">
            <summary>
            以實質內容比較之
            </summary>
        </member>
        <member name="T:ftd.data.FtdReportSettingData.RsWhereCondition">
            <summary>
            查詢條件
            </summary>
        </member>
        <member name="F:ftd.data.FtdReportSettingData.RsWhereCondition.FieldCondDesc">
            <summary>
            欄位條件描述 例：開工日期：2006/02/01~
            </summary>
        </member>
        <member name="T:ftd.data.FtdReportSettingData.RsOrderBy">
            <summary>
            排序條件
            </summary>
        </member>
        <member name="P:ftd.data.FtdReportSettingData.RsOrderByCollection.OrderByFieldDesc">
            <summary>
            排序條件說明
            </summary>
        </member>
        <member name="P:ftd.data.FtdReportSettingData.RsWhereConditionCollection.WhereCondDesc">
            <summary>
            排序條件說明
            </summary>
        </member>
        <member name="T:ftd.data.FtdReportSettingData.RsFileTypeName">
            <summary>
            輸出格式名稱
            </summary>
        </member>
        <member name="T:ftd.FtdLangHelper">
            <summary>
            語言Utility
            </summary>
        </member>
        <member name="M:ftd.FtdLangHelper.copyArray(System.Array,System.Int32,System.Int32)">
            <summary>
            陣列複製
            </summary>
        </member>
        <member name="M:ftd.FtdLangHelper.convertTo32BitStr(System.Int64)">
            <summary>
            轉成32Bit格式字串(正整數Only)
            </summary>        
        </member>
        <member name="M:ftd.FtdLangHelper.replaceEnvironments(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            置換環境參數
            環境參數格式為 {@AppData}
            環境參數(AppData, "C:\001.txt")
            找不到的環境參數一律為空白值
            </summary>
        </member>
        <member name="T:ftd.FtdNetHelper">
            <summary>
            網路
            </summary>
        </member>
        <member name="M:ftd.FtdNetHelper.setFullTrustSslPolicy">
            <summary>
            設定完全信任SSL通訊原則，不論憑證有任何問題。
            </summary>
        </member>
        <member name="T:ftd.FtdReflectionHelper">
            <summary>
            Reflection
            </summary>
        </member>
        <member name="M:ftd.FtdReflectionHelper.getCustomAttribute``1(System.Reflection.FieldInfo,System.Boolean)">
            <summary>
            取得指定的Attribute
            </summary>
        </member>
        <member name="M:ftd.FtdReflectionHelper.getCustomAttributes``1(System.Reflection.FieldInfo,System.Boolean)">
            <summary>
            取得指定的Attribute
            </summary>
        </member>
        <member name="M:ftd.FtdReflectionHelper.getCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            取得指定的Attribute
            </summary>
        </member>
        <member name="T:ftd.FtdRegexHelper">
            <summary>
            Regex Helper
            </summary>
        </member>
        <member name="M:ftd.FtdRegexHelper.createSqlLikeRegex(System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            建立相等於SqlLike的Regex (% 與 _)為特殊字元 (不分大小寫)     
            </summary>
        </member>
        <member name="M:ftd.FtdRegexHelper.createFileLikeRegex(System.String,System.Boolean,System.String)">
            <summary>
            建立相等於檔案系統的Regex (* 與 ?)為特殊字元      
            </summary>
        </member>
        <member name="M:ftd.FtdRegexHelper.do_createLikeRegex(System.String,System.Boolean,System.Boolean,System.String,System.Collections.Generic.Dictionary{System.Char,System.String})">
            <summary>
            建立相等的Regex陳述式     
            </summary>
        </member>
        <member name="T:ftd.FtdIoHelper">
            <summary>
            Input / Ouput 相關
            </summary>
        </member>
        <member name="F:ftd.FtdIoHelper.BytesHex">
            <summary>
            Helper array to speedup conversion
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.bytesToHexString(System.Byte[])">
            <summary>
            Bytes To HEX string
            </summary>      
        </member>
        <member name="M:ftd.FtdIoHelper.bytesToHexString(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Bytes To HEX string
            </summary>      
        </member>
        <member name="M:ftd.FtdIoHelper.byteToHexString(System.Byte)">
            <summary>
            Byte To HEX string
            </summary>      
        </member>
        <member name="M:ftd.FtdIoHelper.hexStringToFile(System.String,System.String)">
            <summary>
            HexString To File
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.hexStringToStream(System.String,System.IO.Stream)">
            <summary>
            HexString To Bytes
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.hexStringToBytes(System.String)">
            <summary>
            HexString To Bytes
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.streamWrite(System.IO.Stream,System.IO.Stream)">
            <summary>
            將來源Stream的資料全部寫入到目地Stream
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.getFileContentHashCode(System.String)">
            <summary>
            取得檔案內容的雜湊碼
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.streamSaveAsBase64(System.IO.Stream)">
            <summary>
            Stream 儲存成Base64編碼
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.base64StringToStream(System.String)">
            <summary>
            Base64編碼轉成Stream 
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.toFileSizeName(System.Int64)">
            <summary>
            轉成檔案Size
            EX. 11B 12KB 13MB 14GB
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.unZipFile(System.String,System.String)">
            <summary>
            解壓縮檔案(覆寫)       
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.unZipFile(System.IO.Stream,System.String)">
            <summary>
            解壓縮檔案(覆寫)       
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.readFileContentAsHex(System.String)">
            <summary>
            取得檔案內容並轉成16進位碼
            </summary>     
        </member>
        <member name="M:ftd.FtdIoHelper.zip_readFileContentAsHex(System.String)">
            <summary>
            取得檔案內容壓縮並轉成16進位碼
            </summary>     
        </member>
        <member name="M:ftd.FtdIoHelper.gzip_readFileContentAsHex(System.String)">
            <summary>
            取得檔案內容壓縮並轉成16進位碼
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.zip_saveHexContentAsFile(System.String,System.String)">
            <summary>
            將檔案壓縮{GZIP}內容還原存成檔案
            </summary>  
        </member>
        <member name="M:ftd.FtdIoHelper.gzip_saveHexContentAsFile(System.String,System.String)">
            <summary>
            將檔案壓縮{GZIP}內容還原存成檔案
            </summary>          
        </member>
        <member name="M:ftd.FtdIoHelper.zipFile(System.String,System.String,System.Int32)">
            <summary>
            壓縮檔案或目錄
            <param name="compressLevel">0(min)-9(max)</param>
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.zipFile(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            壓縮檔案或目錄
            <param name="compressLevel">0(min)-9(max)</param>
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.zipFile(System.String,System.String)">
            <summary>
            壓縮檔案或目錄
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.zipFile(System.String,System.String,System.Boolean)">
            <summary>
            壓縮檔案或目錄
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.zipFile(System.String,System.String,System.String)">
            <summary>
            壓縮檔案或目錄，並指名新的項目名稱       
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.zipFile(System.String,System.String,System.String,System.Boolean)">
            <summary>
            壓縮檔案或目錄，並指名新的項目名稱       
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.zipFile(System.String,System.String,System.String,System.Int32)">
            <summary>
            壓縮檔案或目錄，並指名新的項目名稱
            <param name="compressLevel">0(min)-9(max)</param>
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.zipFile(System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            壓縮檔案或目錄，並指名新的項目名稱
            <param name="compressLevel">0(min)-9(max)</param>
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.xmlSerializeAsFile(System.Object,System.String)">
            <summary>
            序列化成檔案
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.xmlSerializeAsFile(System.Object,System.Type,System.String)">
            <summary>
            序列化成檔案
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.xmlDeserializeFromFile``1(System.String)">
            <summary>
            反序列化由檔案
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.xmlDeserializeFromString``1(System.String)">
            <summary>
            反序列化由字串
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.xmlSerializeAsString(System.Object,System.Type)">
            <summary>
            Xml序列化成字串
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.doXmlSerializeAsString(System.Object,System.Type,System.Boolean)">
            <summary>
            Xml序列化成字串
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.xmlSerialize(System.Xml.XmlTextWriter,System.Object,System.Type)">
            <summary>
            Xml序列化
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.xmlSerializeAsString(System.Object)">
            <summary>
            Xml序列化成字串
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.xmlSerializeAsString(System.Object,System.Boolean)">
            <summary>
            Xml序列化成字串
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.createOrReplaceTextFile(System.String,System.String)">
            <summary>
            建立或覆蓋檔案
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.serializeAsString(System.Object)">
            <summary>
            序列化成Base64String
            </summary>        
        </member>
        <member name="M:ftd.FtdIoHelper.serializeAsHexStr(System.Object)">
            <summary>
            序列化成Byte陣列字串 例0A0B1F
            </summary>    
        </member>
        <member name="M:ftd.FtdIoHelper.serializeAsBytes(System.Object)">
            <summary>
            序列化成Byte[]
            </summary>        
        </member>
        <member name="M:ftd.FtdIoHelper.deSerializeFromString``1(System.String)">
            <summary>
            反序列化由Base64String
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.deSerializeFromHexString``1(System.String)">
            <summary>
            反序列化由Byte陣列字串
            </summary>  
        </member>
        <member name="M:ftd.FtdIoHelper.deSerializeFromBytes``1(System.Byte[])">
            <summary>
            反序列化由Byte[]
            </summary>  
        </member>
        <member name="M:ftd.FtdIoHelper.restoreBinding(System.Object)">
            <summary>
            反序列完成後重新繫結
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.cloneObject``1(``0)">
            <summary>
            複製一份完全相同的物件，
            注意該物件Support Serialize Features
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.xsdValidate(System.String,System.String)">
            <summary>
            驗證XSD Schema
            錯誤會發出Exception
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.xsdValidate(System.String,System.IO.Stream)">
            <summary>
            驗證XSD Schema
            錯誤會發出Exception
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.xsdValidate(System.Xml.XmlDocument,System.IO.Stream)">
            <summary>
            驗證XSD Schema
            錯誤會發出Exception
            </summary>
        </member>
        <member name="T:ftd.FtdIoHelper.StaticMethod">
            <summary>
            靜態方法序列化
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.StaticMethod.compressStr(System.String)">
            <summary>
            壓縮連續0
            000=> N1 
            0000=> N2 .. N0
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.StaticMethod.serializeMethod(System.Delegate)">
            <summary>
            序列化靜態方法        
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.StaticMethod.serializeMethod(System.Delegate,System.Object[])">
            <summary>
            序列化靜態方法與參數
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.StaticMethod.executeSerializeMethod(System.String)">
            <summary>
            執行序列化淨態方法
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.StaticMethod.executeSerializeMethod(System.String,System.Func{System.Object[],System.Object[]})">
            <summary>
            執行序列化淨態方法
            </summary>
        </member>
        <member name="T:ftd.FtdIoHelper.CFileItor">
            <summary>
            檔案或目錄尋訪
            </summary>
        </member>
        <member name="F:ftd.FtdIoHelper.CFileItor.EntryDirs">
            <summary>
            進入堆疊
            </summary>
        </member>
        <member name="F:ftd.FtdIoHelper.CFileItor.onEntryDir">
            <summary>
            進入目錄
            </summary>
        </member>
        <member name="F:ftd.FtdIoHelper.CFileItor.onEntryFile">
            <summary>
            進入檔案
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.CFileItor.itorTree(System.String)">
            <summary>
            尋訪樹
            </summary>
        </member>
        <member name="M:ftd.FtdIoHelper.CFileItor.itorTree(System.String,System.Boolean)">
            <summary>
            尋訪樹
            </summary>
        </member>
        <member name="T:ftd.FtdSystemTime">
            <summary>
            可提供精確到毫秒的時間
            </summary>
        </member>
        <member name="M:ftd.FtdSystemTime.QueryPerformanceFrequency(System.Int64@)">
            <summary>
            查詢計數器每秒頻率
            </summary>
        </member>
        <member name="M:ftd.FtdSystemTime.QueryPerformanceCounter(System.Int64@)">
            <summary>
            查詢計數器次數
            </summary>
        </member>
        <member name="F:ftd.FtdSystemTime.StartTime">
            <summary>
            起始時間
            </summary>
        </member>
        <member name="F:ftd.FtdSystemTime.TheHz">
            <summary>
            計時器每秒計次數
            </summary>
        </member>
        <member name="F:ftd.FtdSystemTime.StartCounter">
            <summary>
            計時器起始次數
            </summary>
        </member>
        <member name="F:ftd.FtdSystemTime.TheHzs">
            <summary>
            (日,時,分,秒,毫秒) HZ
            </summary>
        </member>
        <member name="F:ftd.FtdSystemTime.IsStart">
            <summary>
            是否已經起始
            </summary>
        </member>
        <member name="M:ftd.FtdSystemTime.#cctor">
            <summary>
            Static Constructor
            </summary>
        </member>
        <member name="M:ftd.FtdSystemTime.restart">
            <summary>
            重新抓取起始點
            </summary>
        </member>
        <member name="P:ftd.FtdSystemTime.Now">
            <summary>
            目前時刻
            </summary>
        </member>
        <member name="T:ftd.FtdTestHelper">
            <summary>
            測試相關
            </summary>
        </member>
        <member name="M:ftd.FtdTestHelper.testSpeed(System.String,System.Int32,System.Int32,System.Threading.ThreadStart)">
            <summary>
            測試指定程式的速度
            </summary>        
        </member>
        <member name="M:ftd.FtdWebUiHelper.findNearestParent``1(System.Web.UI.Control)">
            <summary>
            取得最近的父物件(指定類型)
            </summary>        
        </member>
        <member name="T:ftd.FtdYearMonthHelper">
            <summary>
            以數字 200801 代表月份2008/01
            </summary>
        </member>
        <member name="M:ftd.FtdYearMonthHelper.fromDateTime(System.DateTime)">
            <summary>
            轉成YM型別
            </summary>
        </member>
        <member name="M:ftd.FtdYearMonthHelper.fromString(System.String)">
            <summary>
            轉成YM型別
            </summary>
        </member>
        <member name="M:ftd.FtdYearMonthHelper.between(System.Int32,System.Int32,System.Int32)">
            <summary>
            是否介於區間內
            </summary>
        </member>
        <member name="M:ftd.FtdYearMonthHelper.toDate(System.Int32)">
            <summary>
            YM數字轉成日期
            </summary>
        </member>
        <member name="M:ftd.FtdYearMonthHelper.incMonth(System.Int32)">
            <summary>
            增加1月份
            </summary>
        </member>
        <member name="M:ftd.FtdYearMonthHelper.addMonth(System.Int32,System.Int32)">
            <summary>
            月份增加數值
            </summary>
        </member>
        <member name="M:ftd.FtdYearMonthHelper.diffMonth(System.Int32,System.Int32)">
            <summary>
            兩月份相差數量 EX. (200801, 200809) = 9
            </summary>
        </member>
        <member name="T:ftd.io.FtdBlockTextParser">
            <summary>
            FtdBlockTextParser
            </summary>
        </member>
        <member name="M:ftd.io.FtdBlockTextParser.parseFile(System.String,System.Collections.Specialized.NameValueCollection,ftd.io.FtdBlockTextParser.ReadBlock)">
            <summary>
            解析BlockTextFile        
            </summary>
        </member>
        <member name="T:ftd.io.FtdBlockTextParser.ReadBlock">
            <summary>
            取到Block時
            </summary>
        </member>
        <member name="T:ftd.io.FtdBlockTextParser.BlockParser">
            <summary>
            Block Parser
            </summary>
        </member>
        <member name="M:ftd.io.FtdBlockTextParser.BlockParser.onReadLine(System.String)">
            <summary>
            當讀取到一列資料時
            </summary>          
        </member>
        <member name="M:ftd.io.FtdHexReader.readHex">
            <summary>
            NULL代表結尾
            </summary>
        </member>
        <member name="T:ftd.report.FtdReportCondition">
            <summary>
            報表條件內容
            </summary>
        </member>
        <member name="F:ftd.report.FtdReportCondition.QueryValues">
            <summary>
            查詢條件
            </summary>
        </member>
        <member name="F:ftd.report.FtdReportCondition.DisplayFields">
            <summary>
            顯示欄位
            </summary>
        </member>
        <member name="F:ftd.report.FtdReportCondition.OrderbyFields">
            <summary>
            排序欄位
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.createDisplyField">
            <summary>
            建立顯示爛位資料
            </summary>            
        </member>
        <member name="M:ftd.report.FtdReportCondition.addDisplayField(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            加入顯示欄位
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.addDisplayField(ftd.report.FtdReportCondition.DisplayField)">
            <summary>
            加入顯示欄位
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.createOrderbyField">
            <summary>
            建立排序爛位資料
            </summary>            
        </member>
        <member name="M:ftd.report.FtdReportCondition.addOrderbyField(System.String,System.String,System.Boolean,System.Web.UI.WebControls.SortDirection,System.Boolean)">
            <summary>
            加入排序欄位
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.addOrderbyField(ftd.report.FtdReportCondition.OrderbyField)">
            <summary>
            加入排序欄位
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.createQueryValue">
            <summary>
            建立查詢條件
            </summary>            
        </member>
        <member name="M:ftd.report.FtdReportCondition.addQueryValue(ftd.report.FtdReportCondition.QueryValue)">
            <summary>
            加入排序欄位
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.findOrderbyIndex(System.String)">
            <summary>
            尋找排序欄位Index
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.moveDownOrderby(System.String)">
            <summary>
            排序項目往下移動
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.moveUpOrderby(System.String)">
            <summary>
            排序項目往上移動
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.findDisplayIndex(System.String)">
            <summary>
            尋找顯示欄位Index
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.moveDownDisplay(System.String)">
            <summary>
            顯示項目往下移動
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.moveUpDisplay(System.String)">
            <summary>
            顯示項目往上移動
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.clone">
            <summary>
            目前內容複製一份
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.complete">
            <summary>
            完成查詢條件
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.switchDisplayVisible(System.String)">
            <summary>
            切換顯示功能
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.switchOrderbyVisible(System.String)">
            <summary>
            切換顯示功能
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.getQuery(System.String)">
            <summary>
            取得查詢條件
            </summary>
        </member>
        <member name="M:ftd.report.FtdReportCondition.getSortExpress">
            <summary>
            取得排序條件
            例 AColumn desc, BColumn 
            </summary>
        </member>
        <member name="F:ftd.report.FtdReportCondition.QueryValue.FieldName">
            <summary>
            欄位名稱
            </summary>
        </member>
        <member name="F:ftd.report.FtdReportCondition.QueryValue.Title">
            <summary>
            欄位標題
            </summary>
        </member>
        <member name="F:ftd.report.FtdReportCondition.QueryValue.BeginValue">
            <summary>
            條件值／條件起始值
            </summary>
        </member>
        <member name="F:ftd.report.FtdReportCondition.QueryValue.EndValue">
            <summary>
            條件結束值
            </summary>
        </member>
        <member name="F:ftd.report.FtdReportCondition.QueryValue.ValueDescription">
            <summary>
            條件描述 例:2007~2008
            </summary>
        </member>
        <member name="F:ftd.report.FtdReportCondition.QueryValue.DataTypeName">
            <summary>
            資料類型名稱
            </summary>
        </member>
        <member name="F:ftd.report.FtdReportCondition.QueryValue.IsVisible">
            <summary>
            是否應該顯示出來
            </summary>
        </member>
        <member name="T:ftd.report.FtdReportCondition.DisplayField">
            <summary>
            顯示欄位
            </summary>
        </member>
        <member name="P:ftd.report.FtdReportCondition.DisplayField.FieldName">
            <summary>
            欄位名稱
            </summary>
        </member>
        <member name="P:ftd.report.FtdReportCondition.DisplayField.Title">
            <summary>
            顯示標題
            </summary>
        </member>
        <member name="P:ftd.report.FtdReportCondition.DisplayField.IsVisible">
            <summary>
            欄位是否顯示
            </summary>
        </member>
        <member name="P:ftd.report.FtdReportCondition.DisplayField.IsModifyable">
            <summary>
            資料可否讓使用者異動
            </summary>
        </member>
        <member name="T:ftd.report.FtdReportCondition.OrderbyField">
            <summary>
            排序欄位
            </summary>
        </member>
        <member name="P:ftd.report.FtdReportCondition.OrderbyField.FieldName">
            <summary>
            欄位名稱
            </summary>
        </member>
        <member name="P:ftd.report.FtdReportCondition.OrderbyField.Title">
            <summary>
            欄位標題
            </summary>
        </member>
        <member name="P:ftd.report.FtdReportCondition.OrderbyField.IsVisible">
            <summary>
            是否可見的
            </summary>
        </member>
        <member name="P:ftd.report.FtdReportCondition.OrderbyField.SortDirecion">
            <summary>
            是否由小到大排序
            </summary>
        </member>
        <member name="P:ftd.report.FtdReportCondition.OrderbyField.IsModifyable">
            <summary>
            資料可否讓使用者異動
            </summary>
        </member>
        <member name="T:ftd.report.FtdWebReportTask">
            <summary>
            Web報表任務
            </summary>
        </member>
        <member name="M:ftd.report.FtdWebReportTask.getTaskHandlerUrl">
            <summary>
            報表產生Url ex:http://kmu.org.tw/report.aspx
            </summary>            
        </member>
        <member name="M:ftd.report.FtdWebReportTask.createReportFile(System.String@,System.String@)">
            <summary>
            產生報表檔案與報表名稱
            </summary>            
        </member>
        <member name="M:ftd.report.FtdWebReportTask.getReportParameter">
            <summary>
            取得報表參數(序列化)
            </summary>            
        </member>
        <member name="M:ftd.report.FtdWebReportTask.setReportParameter(System.Collections.Generic.List{System.String})">
            <summary>
            設定報表參數(反序列化)
            </summary>
        </member>
        <member name="M:ftd.report.FtdWebReportTask.onClientDisplayOk">
            <summary>
            當報表輸出至Client端完成時呼叫(可記錄報表使用記錄)
            </summary>
        </member>
        <member name="M:ftd.report.FtdWebReportTask.toTaskUrl">
            <summary>
            轉成報表參數 例 report.aspx?nsm=node&amp;item=1&amp;d=1&amp;1=
            </summary>            
        </member>
        <member name="M:ftd.report.FtdWebReportTask.isShowAsAttachemnt">
            <summary>
            是否以附件方式顯示
            </summary>
        </member>
        <member name="M:ftd.report.FtdWebReportTask.showReportAsAttachment">
            <summary>
            此函數應在 ReportTaskHandlerPage 呼叫即可Show出報表
            </summary>
        </member>
        <member name="M:ftd.report.FtdWebReportTask.showReportAsAttachment(ftd.report.FtdWebReportTask)">
            <summary>
            顯示報表
            </summary>
        </member>
        <member name="T:ftd.service.FtdAppDataService">
            <summary>
            //todo:
            應用程式資料服務
            </summary>
        </member>
        <member name="F:ftd.service.FtdAppDataService.Instance">
            <summary>
            Instance
            </summary>
        </member>
        <member name="M:ftd.service.FtdAppDataService.#cctor">
            <summary>
            Static Constructor
            </summary>
        </member>
        <member name="M:ftd.service.FtdAppDataService.registerTempTable(System.String,System.Int32)">
            <summary>
            Register temp table
            </summary>        
            <param name="table_name"></param>
            <param name="expire_minutes"></param>
        </member>
        <member name="M:ftd.service.FtdAppDataService.db_executeNonQuery(System.String)">
            <summary>
            
            </summary>
            <param name="sql"></param>
        </member>
        <member name="M:ftd.service.FtdAppDataService.isTempTableExists(System.String)">
            <summary>
            
            </summary>     
        </member>
        <member name="P:ftd.service.FtdAppDataService.Root">
            <summary>
            Root Folder ex: c:\DsPlus\AppData
            </summary>
        </member>
        <member name="T:ftd.service.FtdAppDataService.CTempTable">
            <summary>
            
            </summary>
        </member>
        <member name="T:ftd.service.FtdCacheService">
            <summary>
            資料快取服務(Memory)
            </summary>
        </member>
        <member name="F:ftd.service.FtdCacheService.Instance">
            <summary>
            實例
            </summary>
        </member>
        <member name="F:ftd.service.FtdCacheService.Categorys">
            <summary>
            資料目錄
            </summary>
        </member>
        <member name="F:ftd.service.FtdCacheService.AccessDataCount">
            <summary>
            回收資料計數器
            每50次回收一次
            </summary>
        </member>
        <member name="M:ftd.service.FtdCacheService.#cctor">
            <summary>
            Static Constructor
            </summary>
        </member>
        <member name="F:ftd.service.FtdCacheService.datalock">
            <summary>
            資料鎖定用物件
            </summary>
        </member>
        <member name="M:ftd.service.FtdCacheService.makesure_single(System.Action)">
            <summary>
            確保單工執行
            </summary>
        </member>
        <member name="M:ftd.service.FtdCacheService.pushData(System.String,System.String,System.Object,System.Int32)">
            <summary>
            放資料到快取中，如資料已存在覆蓋之。
            </summary>        
        </member>
        <member name="M:ftd.service.FtdCacheService.getData``1(System.String,System.String)">
            <summary>
            由快取取得資料，如資料逾時會Return Null。        
            </summary>
        </member>
        <member name="M:ftd.service.FtdCacheService.findData``1(System.String,System.Func{``0,System.Boolean})">
            <summary>
            由快取取得資料，如資料逾時會Return Null。
            </summary>
        </member>
        <member name="M:ftd.service.FtdCacheService.removeExpireDataAuto">
            <summary>
            移除已逾時的資料-依據存取次數
            </summary>
        </member>
        <member name="M:ftd.service.FtdCacheService.removeExpireData">
            <summary>
            移除已逾時的資料
            </summary>
        </member>
        <member name="M:ftd.service.FtdCacheService.removeData(System.String,System.String)">
            <summary>
            移除指定的資料
            </summary>
        </member>
        <member name="T:ftd.service.FtdCacheService.CCacheData">
            <summary>
            快取資料
            </summary>
        </member>
        <member name="F:ftd.service.FtdCacheService.CCacheData.DataId">
            <summary>
            資料ID
            </summary>
        </member>
        <member name="F:ftd.service.FtdCacheService.CCacheData.DataExpireDate">
            <summary>
            資料TimeOutDate
            </summary>
        </member>
        <member name="F:ftd.service.FtdCacheService.CCacheData.DataObject">
            <summary>
            資料物件
            </summary>
        </member>
        <member name="T:ftd.service.FtdCodeNameService">
            <summary>
            名稱資料服務
            如果XML定義的CODENAME，依順序=>指定語系=>預設語系=>""抓取資料
            </summary>
        </member>
        <member name="F:ftd.service.FtdCodeNameService.CodeTypes">
            <summary>
            集合(CodeType, (Code, Name))
            </summary>
        </member>
        <member name="M:ftd.service.FtdCodeNameService.makeSureSingleCall(System.Action)">
            <summary>
            確保對CodeTypes的操作為單執行緒
            </summary>
        </member>
        <member name="M:ftd.service.FtdCodeNameService.loadXmlCodeType">
            <summary>
            載入XMLCodeType資料
            </summary>
        </member>
        <member name="M:ftd.service.FtdCodeNameService.dynamicLoadCodeType(System.String,System.String,ftd.service.FtdCodeNameService.CCodeName)">
            <summary>
            動態載入CodeType
            </summary>
        </member>
        <member name="M:ftd.service.FtdCodeNameService.onCodeTypeLoad(System.String,System.String,ftd.service.FtdCodeNameService.CCodeName)">
            <summary>
            當CodeType載入完成時
            </summary>
        </member>
        <member name="M:ftd.service.FtdCodeNameService.getCUCodeNames(System.String)">
            <summary>
            取得目前使用者語系CodeNames
            </summary>
        </member>
        <member name="M:ftd.service.FtdCodeNameService.getCodeNames(System.String,System.String)">
            <summary>
            取得CodeNames
            </summary>
        </member>
        <member name="M:ftd.service.FtdCodeNameService.addCodeType(System.String,System.String,ftd.service.FtdCodeNameService.CCodeName)">
            <summary>
            加入CodeType
            </summary>       
        </member>
        <member name="M:ftd.service.FtdCodeNameService.getJoinChar(System.String)">
            <summary>
            取得複合鍵值結合字串
            </summary>
        </member>
        <member name="M:ftd.service.FtdCodeNameService.setTableCodeName(System.Data.DataTable,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            設定表格的CodeName
            </summary>
        </member>
        <member name="T:ftd.service.FtdCodeNameService.CCodeName">
            <summary>
            CodeName結構
            </summary>
        </member>
        <member name="M:ftd.service.FtdCodeNameService.CCodeName.isExpire">
            <summary>
            資料是否逾時
            </summary>
        </member>
        <member name="P:ftd.service.FtdCodeNameService.CCodeName.ExpireSeconds">
            <summary>
            資料逾時秒數 為Null代表此資料永不逾時
            </summary>
        </member>
        <member name="P:ftd.service.FtdCodeNameService.CCodeName.IsXmlDefine">
            <summary>
            此CodeName是否是XML定義的
            </summary>
        </member>
        <member name="P:ftd.service.FtdCodeNameService.CCodeName.Dictionary">
            <summary>
            CodeName結構
            </summary>
        </member>
        <member name="P:ftd.service.FtdCodeNameService.CCodeName.CreateTime">
            <summary>
            資料建立日期
            </summary>
        </member>
        <member name="T:ftd.service.FtdLockService">
            <summary>
            鎖定服務
            (最重要的是可以發生DeadLock時可自行解開)
            </summary>
        </member>
        <member name="F:ftd.service.FtdLockService.svrLock">
            <summary>
            鎖定用物件
            </summary>
        </member>
        <member name="F:ftd.service.FtdLockService.LockObjects">
            <summary>
            鎖定物件
            </summary>
        </member>
        <member name="F:ftd.service.FtdLockService.LockThreads">
            <summary>
            鎖定執行緒
            </summary>
        </member>
        <member name="M:ftd.service.FtdLockService.releaseLock(ftd.service.FtdLockService.LockObject)">
            <summary>
            釋放鎖定物件
            </summary>
        </member>
        <member name="M:ftd.service.FtdLockService.isLocking(System.String)">
            <summary>
            指定物件是否鎖定中
            </summary>
        </member>
        <member name="M:ftd.service.FtdLockService.tryLock(System.String,System.Int32,System.Threading.ThreadStart)">
            <summary>
            試圖鎖定物件,如成功執行lockOkMehtod
            </summary>
        </member>
        <member name="M:ftd.service.FtdLockService.tryLock2(System.Threading.Thread,System.String,System.Int32)">
            <summary>
            目前執行緒,試圖鎖定物件
            成功:回傳LockObj
            失敗:(例外:Lock逾時)(例外:執行序不足)(例外:無法鎖定)
            </summary>
        </member>
        <member name="M:ftd.service.FtdLockService.tryLock3(System.Threading.Thread,System.String,System.Int32)">
            <summary>
            代理執行緒,試圖鎖定物件,如鎖定成功追加計數。
            成功:回傳LockObj
            失敗:(例外:Lock逾時)(例外:DeadLock)
            </summary>        
        </member>
        <member name="M:ftd.service.FtdLockService.isDeadLockExists(System.Threading.Thread,ftd.service.FtdLockService.LockObject)">
            <summary>
            檢查是否有DeadLock情況
            </summary>
        </member>
        <member name="M:ftd.service.FtdLockService.getOrCreateLock(System.String)">
            <summary>
            取得或建立鎖定物件
            </summary>
        </member>
        <member name="T:ftd.service.FtdLockService.LockException">
            <summary>
            LockException
            </summary>
        </member>
        <member name="T:ftd.service.FtdLogService">
            <summary>
            Log Service
            要求紀錄時會先暫存立即回覆，再慢慢保存資料。
            </summary>
        </member>
        <member name="F:ftd.service.FtdLogService.IsLogEnable">
            <summary>
            是否寫入Log
            </summary>
        </member>
        <member name="F:ftd.service.FtdLogService.LogDirectory">
            <summary>
            LOG檔案目錄
            EX: C:\LOG
            </summary>
        </member>
        <member name="F:ftd.service.FtdLogService.task">
            <summary>
            寫入儲存裝置的執行緒
            </summary>
        </member>
        <member name="F:ftd.service.FtdLogService.lock_Logs">
            <summary>
            對Log存取的鎖
            </summary>
        </member>
        <member name="F:ftd.service.FtdLogService.Logs">
            <summary>
            Log暫存區
            </summary>
        </member>
        <member name="F:ftd.service.FtdLogService.FileItems">
            <summary>
            原定檔名(現在檔名,檔案Stream)
            </summary>
        </member>
        <member name="M:ftd.service.FtdLogService.addLog(ftd.data.log.FtdLog)">
            <summary>
            加入Log
            </summary>       
        </member>
        <member name="M:ftd.service.FtdLogService.onException(System.Exception)">
            <summary>
            當寫入Log發生例外時
            </summary>
        </member>
        <member name="M:ftd.service.FtdLogService.getLogFileStream(ftd.data.log.FtdLog)">
            <summary>
            取得指定LOG的StreamWriter
            </summary>
        </member>
        <member name="M:ftd.service.FtdLogService.saveLog(ftd.data.log.FtdLog)">
            <summary>
            將Log資料寫入儲存裝置時
            </summary>
        </member>
        <member name="T:ftd.service.FtdMenuService">
            <summary>
            Menu功能
            </summary>
        </member>
        <member name="P:ftd.service.FtdMenuService.MenuFolder">
            <summary>
            功能表檔案目錄
            ex.C:\001\Menu
            </summary>
        </member>
        <member name="T:ftd.service.FtdMultiLangService">
            <summary>
            多國語系服務
            </summary>
        </member>
        <member name="F:ftd.service.FtdMultiLangService.Instance">
            <summary>
            Instance
            </summary>
        </member>
        <member name="M:ftd.service.FtdMultiLangService.#cctor">
            <summary>
            Static Constructor
            </summary>
        </member>
        <member name="M:ftd.service.FtdMultiLangService.active">
            <summary>
            立即啟動服務
            </summary>
        </member>
        <member name="M:ftd.service.FtdMultiLangService.onSaveNewKeyWord(System.Collections.Generic.List{System.String})">
            <summary>
            保存新追加的關鍵字
            </summary>
        </member>
        <member name="M:ftd.service.FtdMultiLangService.getLangProvider">
            <summary>
            取得LangProvider
            </summary>
        </member>
        <member name="M:ftd.service.FtdMultiLangService.loadLangData">
            <summary>
            載入語系設定
            </summary>
        </member>
        <member name="F:ftd.service.FtdMultiLangService.lock_addkeyword">
            <summary>
            確保對Keyword的新增為唯一
            </summary>
        </member>
        <member name="M:ftd.service.FtdMultiLangService.getCurrentUserLangText(System.String)">
            <summary>
            取得目前使用者的語系文字
            </summary>        
        </member>
        <member name="M:ftd.service.FtdMultiLangService.getCurrentUserLangCode">
            <summary>
            取得目前使用者的語言CODE
            </summary>        
        </member>
        <member name="M:ftd.service.FtdMultiLangService.getLangText(System.String,System.String)">
            <summary>
            取得指定語系的文字
            </summary>
        </member>
        <member name="M:ftd.service.FtdMultiLangService.getTestModeString(System.String,System.String)">
            <summary>
            取得測試模式語系文字
            </summary>
        </member>
        <member name="M:ftd.service.FtdMultiLangService.addNewKeywords(System.String,System.String)">
            <summary>
            追加新的關鍵字
            </summary>
        </member>
        <member name="P:ftd.service.FtdMultiLangService.LangProvider">
            <summary>
            LangProvider
            </summary>
        </member>
        <member name="P:ftd.service.FtdMultiLangService.NewKeywords">
            <summary>
            新追加的Keywords
            </summary>
        </member>
        <member name="P:ftd.service.FtdMultiLangService.IsAddNewKeyword">
            <summary>
            自動加入語系KeyWord
            若KeyWord不存在的話是否自動加入鍵值至儲存體
            (Default false)
            </summary>
        </member>
        <member name="P:ftd.service.FtdMultiLangService.CacheMinute">
            <summary>
            多少時間重新載入語系資源
            (Default 0)
            CacheMinute&lt;0表示不啟用
            </summary>
        </member>
        <member name="P:ftd.service.FtdMultiLangService.DefaultLangCode">
            <summary>
            取得預設語系CODE
            (也作為鍵值得CODE)
            </summary>
        </member>
        <member name="P:ftd.service.FtdMultiLangService.IsTestMode">
            <summary>
            Is測試模式
            成立的話，轉譯文字=>{LangeCode:轉譯文字]
            </summary>
        </member>
        <member name="T:ftd.service.FtdMultiLangService.ILangProvider">
            <summary>
            語言資料Provider
            </summary>
        </member>
        <member name="M:ftd.service.FtdMultiLangService.ILangProvider.getLangText(System.String,System.String,System.Boolean@)">
            <summary>
            取得指定語系的內容
            </summary>
        </member>
        <member name="M:ftd.service.FtdMultiLangService.ILangProvider.isDefaultKeywordExists(System.String)">
            <summary>
            預設語系指定的關鍵字是否存在
            </summary>
        </member>
        <member name="T:ftd.service.FtdPermissionService">
            <summary>
            權限服務
            </summary>
        </member>
        <member name="M:ftd.service.FtdPermissionService.#cctor">
            <summary>
            Static Constructor
            </summary>
        </member>
        <member name="M:ftd.service.FtdPermissionService.loadPermissionFromClass(System.Type)">
            <summary>
            由指定類別導入權限定義
            </summary>
        </member>
        <member name="M:ftd.service.FtdPermissionService.createPermission">
            <summary>
            Create Object of FtdPermission
            </summary>        
        </member>
        <member name="M:ftd.service.FtdPermissionService.createActorPermisson">
            <summary>
            Create Object of FtdActorPermission
            </summary>
        </member>
        <member name="M:ftd.service.FtdPermissionService.getPermission(System.String)">
            <summary>
            取得權限物件
            </summary>
        </member>
        <member name="M:ftd.service.FtdPermissionService.getActorPermission(System.String)">
            <summary>
            取得動作者權限
            </summary>
        </member>
        <member name="M:ftd.service.FtdPermissionService.queryActorsPremissons(System.Collections.Generic.List{System.String})">
            <summary>
            查詢動作者所屬的權限(不及物)     
            </summary>        
        </member>
        <member name="M:ftd.service.FtdPermissionService.queryActorRoles(System.String)">
            <summary>
            查詢動作者所屬的全部角色(機關|群組)     
            </summary>
        </member>
        <member name="M:ftd.service.FtdPermissionService.containObjectPermission(ftd.data.FtdActorPermission,System.String,System.String)">
            <summary>
            動作者{actor_perm}是否包含物件{obj_id}所屬權限{perm_name}
            </summary>
        </member>
        <member name="P:ftd.service.FtdPermissionService.AllPermissions">
            <summary>
            所有權限物件
            </summary>
        </member>
        <member name="T:ftd.service.FtdReportService">
            <summary>
            列印服務
            </summary>
        </member>
        <member name="M:ftd.service.FtdReportService.findPrintSetting(System.String)">
            <summary>
            搜尋指定的設定
            </summary>
        </member>
        <member name="M:ftd.service.FtdReportService.getPrinterPaperRawKind(System.String,System.String)">
            <summary>
            取得指定紙張的RawId
            通常用於 CrystalReport
            </summary>
        </member>
        <member name="M:ftd.service.FtdReportService.showFileAsWebAttachment(System.String,System.String,ftd.service.FtdReportService.RsReportTask)">
            <summary>
            將指定的檔案以Web附件的方式顯現
            </summary>
        </member>
        <member name="T:ftd.service.FtdReportService.RsSettingDocument">
            <summary>
            列印設定文件
            </summary>
        </member>
        <member name="F:ftd.service.FtdReportService.RsSettingDocument.PrintSettings">
            <summary>
            列印設定集合
            </summary>
        </member>
        <member name="F:ftd.service.FtdReportService.RsSettingDocument.Printers">
            <summary>
            印表機集合
            </summary>
        </member>
        <member name="T:ftd.service.FtdReportService.RsPrintSetting">
            <summary>
            列印設定
            </summary>
        </member>
        <member name="F:ftd.service.FtdReportService.RsPrintSetting.SettingName">
            <summary>
            設定名稱 例:進出貨單
            </summary>
        </member>
        <member name="F:ftd.service.FtdReportService.RsPrintSetting.Printer">
            <summary>
            印表機物件
            </summary>
        </member>
        <member name="F:ftd.service.FtdReportService.RsPrintSetting.PrinterName">
            <summary>
            印表機名稱
            </summary>
        </member>
        <member name="F:ftd.service.FtdReportService.RsPrintSetting.PaperName">
            <summary>
            紙張名稱 例:A4 or Letter Half
            </summary>
        </member>
        <member name="F:ftd.service.FtdReportService.RsPrintSetting.Note">
            <summary>
            預設印表服務
            </summary>
        </member>
        <member name="P:ftd.service.FtdReportService.RsPrintSetting.PaperRawKind">
            <summary>
            取得紙張的實際Id
            通常用於CrystalReport
            </summary>
        </member>
        <member name="T:ftd.service.FtdReportService.RsPrinter">
            <summary>
            印表機
            </summary>
        </member>
        <member name="F:ftd.service.FtdReportService.RsPrinter.PrintName">
            <summary>
            印表機名稱 例:DefaultPrint
            </summary>
        </member>
        <member name="F:ftd.service.FtdReportService.RsPrinter.PhysicalName">
            <summary>
            印表機實體名稱 例:\\10.10.111.22\HelloPrint
            </summary>
        </member>
        <member name="F:ftd.service.FtdReportService.RsPrinter.Note">
            <summary>
            印表機備註
            </summary>
        </member>
        <member name="T:ftd.service.FtdReportService.RsReportTask">
            <summary>
            顯示報表任務
            </summary>
        </member>
        <member name="F:ftd.service.FtdReportService.RsReportTask.P_PrintSettingName">
            <summary>
            列印設定名稱
            </summary>
        </member>
        <member name="F:ftd.service.FtdReportService.RsReportTask.P_ReportFileName">
            <summary>
            匯出／網路附件檔案名稱
            </summary>
        </member>
        <member name="M:ftd.service.FtdReportService.RsReportTask.showAsWebAttachment">
            <summary>
            將報表以網站附件顯示
            </summary>
        </member>
        <member name="M:ftd.service.FtdReportService.RsReportTask.createReportDocument">
            <summary>
            建立報表文件
            例如:CrystalReport的ReportClass
            </summary>
        </member>
        <member name="M:ftd.service.FtdReportService.RsReportTask.exportFile(System.String)">
            <summary>
            將報表文件儲成指定的檔案
            </summary>
        </member>
        <member name="M:ftd.service.FtdReportService.RsReportTask.printDocument">
            <summary>
            列印文件
            </summary>
        </member>
        <member name="M:ftd.service.FtdReportService.RsReportTask.doPrintDocument">
            <summary>
            當列印文件時
            後代應實作此功能
            </summary>
        </member>
        <member name="M:ftd.service.FtdReportService.RsReportTask.onShowAsWebAttachmentSuccess">
            <summary>
            事件-當成功顯示網站附件後
            </summary>
        </member>
        <member name="E:ftd.service.FtdReportService.RsReportTask.PrintDocumentSuccess">
            <summary>
            列印完成時
            </summary>
        </member>
        <member name="T:ftd.service.FtdScheduleDate">
            <summary>
            排程日期
            </summary>    
        </member>
        <member name="F:ftd.service.FtdScheduleDate.Db_IsEnable">
            <summary>
            資料庫-是否啟用
            </summary>
        </member>
        <member name="F:ftd.service.FtdScheduleDate.Db_DbPrimaryKey">
            <summary>
            資料庫-主鍵
            </summary>
        </member>
        <member name="F:ftd.service.FtdScheduleDate.PeriodType">
            <summary>
            週期類型
            </summary>           
        </member>
        <member name="F:ftd.service.FtdScheduleDate.EveryDay_Hour">
            <summary>
            每天-小時
            </summary>            
        </member>
        <member name="F:ftd.service.FtdScheduleDate.EveryDay_Miniute">
            <summary>
            每天-分鐘
            </summary>           
        </member>
        <member name="F:ftd.service.FtdScheduleDate.MoreMinute">
            <summary>
            超過排程日期{getCurrentScheduleTime()}多少分鐘，仍視為到期的。
            </summary>           
        </member>
        <member name="M:ftd.service.FtdScheduleDate.setEveryDay(System.Int32,System.Int32)">
            <summary>
            每日定時執行
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleDate.setEveryHour(System.Int32)">
            <summary>
            每小時定時執行
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleDate.getDescription">
            <summary>
            取得執行日期描述
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleDate.getCurrentScheduleTime">
            <summary>
            取得目前排程時間
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleDate.isOnTime(System.Nullable{System.DateTime})">
            <summary>
            是否達到當約定時間到達時
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleDate.isOnTime(System.DateTime,System.Nullable{System.DateTime},System.TimeSpan)">
            <summary>
            現在是否在預訂執行時間內
            </summary>
            <param node_4="scheduleTime">預定時間</param>
            <param node_4="lastExecuteTime">最後一次執行時間</param> 
            <param node_4="moreMinute">超過預定時間幾分鐘，仍視為到期的。</param>
        </member>
        <member name="M:ftd.service.FtdScheduleDate.getParameters">
            <summary>
            取得參數(序列化)
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleDate.setParameters(System.Collections.Specialized.NameValueCollection)">
            <summary>
            設定參數
            </summary>
        </member>
        <member name="T:ftd.service.FtdScheduleService">
            <summary>
            排程服務
            </summary>
        </member>
        <member name="F:ftd.service.FtdScheduleService.Instance">
            <summary>
            實例
            </summary>
        </member>
        <member name="F:ftd.service.FtdScheduleService.CycleTimer">
            <summary>
            
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleService.startService">
            <summary>
            起始服務
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleService.onTimerEvent(System.Object)">
            <summary>
            Timer時間到時
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleService.loadTasks">
            <summary>
            重新載入所有的排程資料，並且執行
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleService.stopTasks">
            <summary>
            停止全部的排程
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleService.setCycleTimer">
            <summary>
            設定循環週期Timer
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleService.deserializeTask(System.Data.DataRow)">
            <summary>
            反序列化-Task(不包含Date)
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleService.deserializeDate(System.Data.DataRow)">
            <summary>
            反序列化-Date
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleService.queryTasks">
            <summary>
            取得所有的Task
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleService.queryDates(System.Data.DataRow)">
            <summary>
            取得指定Task所有排定日期
            </summary>        
        </member>
        <member name="M:ftd.service.FtdScheduleService.saveTaskState(ftd.service.FtdScheduleTask)">
            <summary>
            保存Task狀態
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleService.runTaskimmediateByPk(System.String)">
            <summary>
            立即啟動指定的排程By DB'sTaskID
            </summary>
        </member>
        <member name="P:ftd.service.FtdScheduleService.Tasks">
            <summary>
            所有的工作
            </summary>
        </member>
        <member name="P:ftd.service.FtdScheduleService.IsEnable">
            <summary>
            服務是否啟用
            </summary>
        </member>
        <member name="T:ftd.service.FtdScheduleTask">
            <summary>
            排程工作
            </summary>
        </member>
        <member name="T:ftd.thread.FtdServiceThread">
            <summary>    
            可要求執行中的工作暫停、繼續、終止
            Caller 必須為單一執行緒
            </summary>
        </member>
        <member name="F:ftd.thread.FtdServiceThread.syncRoot">
            <summary>
            服務同步物件
            </summary>
        </member>
        <member name="F:ftd.thread.FtdServiceThread.ServiceStart">
            <summary>
            服務進入點
            </summary>
        </member>
        <member name="F:ftd.thread.FtdServiceThread.ServiceObject">
            <summary>
            服務物件
            </summary>
        </member>
        <member name="F:ftd.thread.FtdServiceThread.callerEvent">
            <summary>
            呼叫者事件
            </summary>
        </member>
        <member name="F:ftd.thread.FtdServiceThread.serviceEvent">
            <summary>
            執行者事件
            </summary>
        </member>
        <member name="F:ftd.thread.FtdServiceThread.RequirePause">
            <summary>
            要求暫停
            </summary>
        </member>
        <member name="M:ftd.thread.FtdServiceThread.#ctor">
            <summary>
            建構子
            </summary>        
        </member>
        <member name="M:ftd.thread.FtdServiceThread.setServiceStart(ftd.thread.FtdServiceThread.ServiceStartMethod,System.Object)">
            <summary>
            設定任務函數與任務物件
            </summary>        
        </member>
        <member name="M:ftd.thread.FtdServiceThread.serviceStart(System.Boolean)">
            <summary>
            啟動執行序
            </summary>
        </member>
        <member name="M:ftd.thread.FtdServiceThread.servicePause(System.Boolean)">
            <summary>
            要求執行緒暫停
            </summary>
        </member>
        <member name="M:ftd.thread.FtdServiceThread.serviceContinue">
            <summary>
            繼續動作
            </summary>
        </member>
        <member name="M:ftd.thread.FtdServiceThread.serviceAbort(System.Boolean)">
            <summary>
            要求終止
            </summary>
        </member>
        <member name="M:ftd.thread.FtdServiceThread.waitFinish">
            <summary>
            等待工作完成
            </summary>
        </member>
        <member name="M:ftd.thread.FtdServiceThread.doEvent">
            <summary>
            控制權返回事件
            </summary>
        </member>
        <member name="M:ftd.thread.FtdServiceThread.threadMain(System.Object)">
            <summary>
            Task主執行緒
            </summary>
        </member>
        <member name="M:ftd.thread.FtdServiceThread.onServiceBegin">
            <summary>
            服務開始
            </summary>
        </member>
        <member name="M:ftd.thread.FtdServiceThread.onServiceEnd">
            <summary>
            服務結束
            </summary>
        </member>
        <member name="P:ftd.thread.FtdServiceThread.TimeOutSecond">
            <summary>
            執行逾時秒數
            </summary>
        </member>
        <member name="P:ftd.thread.FtdServiceThread.ServiceException">
            <summary>
            服務執行期間例外
            </summary>
        </member>
        <member name="P:ftd.thread.FtdServiceThread.ExecuteBeginDate">
            <summary>
            Last Task Start Date
            </summary>
        </member>
        <member name="P:ftd.thread.FtdServiceThread.ExecuteEndDate">
            <summary>
            Last Task End Date
            </summary>
        </member>
        <member name="P:ftd.thread.FtdServiceThread.ExecuteSeconds">
            <summary>
            執行秒數(未執行為-1)
            </summary>
        </member>
        <member name="P:ftd.thread.FtdServiceThread.RequireAbort">
            <summary>
            要求中斷
            </summary>
        </member>
        <member name="P:ftd.thread.FtdServiceThread.IsRunning">
            <summary>
            是否執行中
            </summary>
        </member>
        <member name="P:ftd.thread.FtdServiceThread.IsFinish">
            <summary>
            Is Fininsed
            </summary>
        </member>
        <member name="T:ftd.thread.FtdServiceThread.ServiceStartMethod">
            <summary>
            工作執行緒需符合的原型。
            其中執行時，應定時呼叫 doEvent以便將控值權移轉
            </summary>        
        </member>
        <member name="T:ftd.thread.FtdServiceThread.AbortException">
            <summary>
            中止Exception
            </summary>
        </member>
        <member name="F:ftd.service.FtdScheduleTask.Db_PrimaryKey">
            <summary>
            資料庫-主鍵
            </summary>
        </member>
        <member name="F:ftd.service.FtdScheduleTask.Db_IsEnable">
            <summary>
            資料庫-工作是否啟用
            </summary>
        </member>
        <member name="F:ftd.service.FtdScheduleTask.Db_LastExecuteDate">
            <summary>
            資料庫-最後執行日期(起始)
            </summary>
        </member>
        <member name="F:ftd.service.FtdScheduleTask.TaskTitle">
            <summary>
            排程描述
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleTask.scheduleMain(System.Threading.ThreadStart)">
            <summary>
            執行緒內容
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleTask.startSchedule(System.Boolean)">
            <summary>
            如果已到約定時間的話執行指定工作
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleTask.isOnTime">
            <summary>
            是否到達約定時間
            </summary>
        </member>
        <member name="F:ftd.service.FtdScheduleTask.ScheduleDates">
            <summary>
            排程日期
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleTask.getParameters">
            <summary>
            取得參數(序列化)
            </summary>
        </member>
        <member name="M:ftd.service.FtdScheduleTask.setParameters(System.Collections.Specialized.NameValueCollection)">
            <summary>
            設定參數(序列化)
            </summary>
        </member>
        <member name="T:ftd.service.FtdSerialNumberService">
            <summary>
            序號產生服務
            </summary>
        </member>
        <member name="F:ftd.service.FtdSerialNumberService.Instance">
            <summary>
            序號產生器服務
            </summary>
        </member>
        <member name="F:ftd.service.FtdSerialNumberService.SerialNumbers">
            <summary>
            序號產生器清單
            </summary>
        </member>
        <member name="F:ftd.service.FtdSerialNumberService.SerialNumbers_Lock">
            <summary>
            鎖定For存取序號產生器
            </summary>
        </member>
        <member name="M:ftd.service.FtdSerialNumberService.getNextSerialNo(System.String)">
            <summary>
            取得下一個序號
            </summary>
        </member>
        <member name="M:ftd.service.FtdSerialNumberService.getNextSerialNo(System.String,System.String)">
            <summary>
            取得指定範圍的下一個序號
            </summary>
        </member>
        <member name="M:ftd.service.FtdSerialNumberService.getSerailNumberStyle(System.String)">
            <summary>
            取得序號器的Format
            </summary>
        </member>
        <member name="M:ftd.service.FtdSerialNumberService.createSerialContext">
            <summary>
            建立Context
            </summary>
        </member>
        <member name="M:ftd.service.FtdSerialNumberService.createSerialContext(System.String)">
            <summary>
            建立Context
            </summary>
        </member>
        <member name="M:ftd.service.FtdSerialNumberService.getOrCreateSerailNumber(System.String)">
            <summary>
            建立序號產生器
            </summary>
        </member>
        <member name="M:ftd.service.FtdSerialNumberService.createSerialNumber(System.String)">
            <summary>
            建立序號產生器
            </summary>
        </member>
        <member name="P:ftd.service.FtdSerialNumberService.NsNextSessionId">
            <summary>
            Ns Next SessionId
            </summary>
        </member>
        <member name="T:ftd.service.FtdSerialNumberService.SerialContext">
            <summary>
            序號環境,用於產生序號時的共用變數。
            每次產生序號，都將配置新的序號環境。
            </summary>
        </member>
        <member name="F:ftd.service.FtdSerialNumberService.SerialContext.CurrentTime">
            <summary>
            目前時刻
            </summary>
        </member>
        <member name="T:ftd.service.FtdSerialNumberService.BaseNumber">
            <summary>
            序號產生器
            </summary>
        </member>
        <member name="M:ftd.service.FtdSerialNumberService.BaseNumber.getNextSerailNo(ftd.service.FtdSerialNumberService.SerialContext)">
            <summary>
            取得下一個節點
            </summary>
        </member>
        <member name="P:ftd.service.FtdSerialNumberService.BaseNumber.NumberStyle">
            <summary>
            取得序號器的表示規則字串
            例:{Year:YYYY}
            </summary>
        </member>
        <member name="T:ftd.service.FtdSerialNumberService.GuidNumber">
            <summary>
            簡短 ShortGuidNumber(32進位為9個字元)         
            每秒最多產生量1000個序號(理論值)實際約每秒100個
            </summary>
        </member>
        <member name="T:ftd.service.FtdSerialNumberService.ShortGuidNumber">
            <summary>
            簡短 ShortGuidNumber(32進位為9個字元)         
            每秒最多產生量1000個序號(理論值)實際約每秒500個
            </summary>
        </member>
        <member name="F:ftd.service.FtdSerialNumberService.ShortGuidNumber.LastAccessTime">
            <summary>
            最後存取日期
            </summary>
        </member>
        <member name="F:ftd.service.FtdSerialNumberService.ShortGuidNumber.Prefix">
            <summary>
            序號前置碼 例:EOE_
            </summary>
        </member>
        <member name="F:ftd.service.FtdSerialNumberService.ShortGuidNumber.SiteNo">
            <summary>
            站點號碼範圍(0-3)
            </summary>
        </member>
        <member name="T:ftd.service.FtdSerialNumberService.CNsSessionNumber">
            <summary>
            20080910-010111-000 
            每秒最多產生量1000個序號(理論值)實際約每秒100個
            </summary>
        </member>
        <member name="F:ftd.service.FtdSerialNumberService.CNsSessionNumber.LastAccessTime">
            <summary>
            最後存取日期
            </summary>
        </member>
        <member name="T:ftd.service.FtdSerialNumberService.ListNumber">
            <summary>
            合併序號產生器        
            </summary>
        </member>
        <member name="F:ftd.service.FtdSerialNumberService.ListNumber.Nodes">
            <summary>
            子節點
            </summary>
        </member>
        <member name="T:ftd.service.FtdSerialNumberService.CurrentYearNumber">
            <summary>
            目前年度
            </summary>
        </member>
        <member name="F:ftd.service.FtdSerialNumberService.CurrentYearNumber.EFormatName.YYYY">
            <summary>
            西元年 1974
            </summary>
        </member>
        <member name="F:ftd.service.FtdSerialNumberService.CurrentYearNumber.EFormatName.YYY">
            <summary>
            中華民國年 101
            </summary>
        </member>
        <member name="T:ftd.service.FtdSerialNumberService.CurrentMonthNumber">
            <summary>
            目前月份
            </summary>
        </member>
        <member name="F:ftd.service.FtdSerialNumberService.CurrentMonthNumber.EFormatName.MM">
            <summary>
            月份 09
            </summary>
        </member>
        <member name="T:ftd.service.FtdSerialNumberService.CurrentDayNumber">
            <summary>
            目前日期
            </summary>
        </member>
        <member name="F:ftd.service.FtdSerialNumberService.CurrentDayNumber.EFormatName.dd">
            <summary>
            日 01
            </summary>
        </member>
        <member name="T:ftd.service.FtdServerTask">
            <summary>
            
            </summary>
        </member>
        <member name="M:ftd.service.FtdServerTask.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:ftd.service.FtdServerTask.addTaskMessage(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ftd.service.FtdServerTask.TaskMain(System.Threading.ThreadStart,System.Object)">
            <summary>
            工作主執行緒
            </summary>
        </member>
        <member name="M:ftd.service.FtdServerTask.onServiceEnd">
            <summary>
            工作完成
            </summary>
        </member>
        <member name="P:ftd.service.FtdServerTask.TaskState">
            <summary>
            Task目前狀態
            </summary>
        </member>
        <member name="P:ftd.service.FtdServerTask.TaskMessages">
            <summary>
            Task訊息
            </summary>
        </member>
        <member name="P:ftd.service.FtdServerTask.TaskTitle">
            <summary>
            工作標題
            </summary>
        </member>
        <member name="T:ftd.service.FtdServerTaskService">
            <summary>
            Service
            </summary>
        </member>
        <member name="F:ftd.service.FtdServerTaskService.Tasks">
            <summary>
            工作列表
            </summary>
        </member>
        <member name="M:ftd.service.FtdServerTaskService.getTask(System.String)">
            <summary>
            取得Task
            </summary>        
        </member>
        <member name="M:ftd.service.FtdServerTaskService.addAndStart(ftd.service.FtdServerTask)">
            <summary>
            加入並起始Task的執行
            </summary>
        </member>
        <member name="M:ftd.service.FtdServerTaskService.removeAndStop(System.String)">
            <summary>
            移除並結束Task的執行
            </summary>
        </member>
        <member name="M:ftd.service.FtdServerTaskService.RecycleTask_DoTaskEvent(System.Object,ftd.thread.FtdSingleTimerThread.CEventArgs)">
            <summary>
            已完成兩分鐘以上者，移除之
            </summary>        
        </member>
        <member name="T:ftd.service.FtdConfigService">
            <summary>
            設定檔服務
            </summary>	
        </member>
        <member name="F:ftd.service.FtdConfigService.EVN_AppPath">
            <summary>
            應用程式目錄，Web的話為網站根目錄，應用程式的話為執行目錄
            </summary>
        </member>
        <member name="F:ftd.service.FtdConfigService.ASN_AppData">
            <summary>
            應用程式資料目錄
            </summary>
        </member>
        <member name="F:ftd.service.FtdConfigService.ASN_AppTemp">
            <summary>
            應用程式暫存目錄
            </summary>
        </member>
        <member name="M:ftd.service.FtdConfigService.getAppSettingValue(System.String)">
            <summary>
            取得應用程式變數
            </summary>		
        </member>
        <member name="M:ftd.service.FtdConfigService.getAppSettingValue(System.String,System.String,System.Boolean)">
            <summary>
            取得應用程式變數
            </summary>		
        </member>
        <member name="M:ftd.service.FtdConfigService.getAppSettingValue(System.String,System.Boolean)">
            <summary>
            取得應用程式變數
            </summary>		
        </member>
        <member name="M:ftd.service.FtdConfigService.replaceEnvironments(System.String)">
            <summary>
            置換環境變數
            </summary>
        </member>
        <member name="M:ftd.service.FtdConfigService.getAppSettingValue(System.String,System.String)">
            <summary>
            取得應用程式變數
            </summary>		
        </member>
        <member name="M:ftd.service.FtdConfigService.doGetAppSettingValue(System.String,System.String,System.Boolean)">
            <summary>
            取得應用程式變數
            </summary>		       
        </member>
        <member name="M:ftd.service.FtdConfigService.initWebEnvironment">
            <summary>
            初始環境於Web環境
            </summary>
        </member>
        <member name="M:ftd.service.FtdConfigService.initWinEnvironment">
            <summary>
            初始環境於Win環境
            </summary>
        </member>
        <member name="M:ftd.service.FtdConfigService.initEnvironment(System.String,System.String)">
            <summary>
            初始環境
            </summary>
        </member>
        <member name="P:ftd.service.FtdConfigService.AppBinPath">
            <summary>
            應用程式的執行檔目錄
            此值呼叫初始化(web|win)後才有
            </summary>
        </member>
        <member name="P:ftd.service.FtdConfigService.ConfigData">
            <summary>
            設定檔資料
            </summary>
            <returns></returns>
        </member>
        <member name="T:ftd.crypto.FtdStringCrypto">
            <summary>
            提供字串編碼服務，使用DES演算法，並以base64格式輸出。
            </summary>
        </member>
        <member name="T:ftd.FtdDataHelper">
            <summary>
            DataTable操作的函數集
            </summary>
        </member>
        <member name="M:ftd.FtdDataHelper.groupByDataTable(System.Data.DataView,ftd.data.FtdGroupTable.GetGroupByKey[])">
            <summary>
            GroupBy DataTable
            </summary>        
        </member>
        <member name="M:ftd.FtdDataHelper.groupByDataTable(System.Data.DataTable,ftd.data.FtdGroupTable.GetGroupByKey[])">
            <summary>
            GroupBy DataTable
            </summary> 
        </member>
        <member name="M:ftd.FtdDataHelper.groupByDataTable(System.Collections.ICollection,ftd.data.FtdGroupTable.GetGroupByKey[])">
            <summary>
            GroupBy DataTable
            </summary> 
        </member>
        <member name="M:ftd.FtdDataHelper.toExpressFullTextSearch_String(System.String,System.String)">
            <summary>
            字串全文檢索 回傳NULL(無條件時)
            </summary>
        </member>
        <member name="M:ftd.FtdDataHelper.getDistinctArray``1(``0[][])">
            <summary>
            取得不重複的陣列
            </summary>
        </member>
        <member name="M:ftd.FtdDataHelper.getDistinctArray``1(``0[])">
            <summary>
            取得不重複的陣列
            </summary>
        </member>
        <member name="M:ftd.FtdDataHelper.doGetDistinctArray``1(``0[][])">
            <summary>
            取得不重複的陣列
            </summary>
        </member>
        <member name="M:ftd.FtdDataHelper.getDistinctArray``1(``0[],``0[])">
            <summary>
            取得不重複的陣列
            </summary>
        </member>
        <member name="M:ftd.FtdDataHelper.getDistinctArray``1(System.Data.DataTable,System.Data.DataColumn)">
            <summary>
            取得不重複的陣列
            </summary>      
        </member>
        <member name="M:ftd.FtdDataHelper.getDistinctArray``1(System.Data.DataTable,System.String)">
            <summary>
            取得不重複的陣列
            </summary>      
        </member>
        <member name="M:ftd.FtdDataHelper.getDistinctArray``1(System.Data.DataTable,System.Data.DataColumn[])">
            <summary>
            取得不重複的陣列
            </summary>      
        </member>
        <member name="M:ftd.FtdDataHelper.getDistinctArray``1(System.Data.DataRow[],System.Data.DataColumn)">
            <summary>
            取得不重複的陣列
            </summary>      
        </member>
        <member name="M:ftd.FtdDataHelper.getDistinctArray``1(System.Collections.ICollection,System.Data.DataColumn)">
            <summary>
            取得不重複的陣列
            </summary>      
        </member>
        <member name="M:ftd.FtdDataHelper.getDistinctArray``1(System.Collections.ICollection,System.Data.DataColumn[])">
            <summary>
            取得不重複的陣列
            </summary>      
        </member>
        <member name="M:ftd.FtdDataHelper.getDistinctArray``1(System.Collections.ICollection,System.Data.DataColumn[],System.String)">
            <summary>
            取得不重複的陣列
            </summary>      
        </member>
        <member name="M:ftd.FtdDataHelper.doGetDistictTableKeys``1(System.Collections.ICollection,System.Data.DataColumn[],System.String)">
            <summary>
            取得不重複的陣列
            </summary>
        </member>
        <member name="M:ftd.FtdDataHelper.getDataTableFirstRow``1(System.Data.DataTable)">
            <summary>
            取得第一列回傳，如為空Return Null
            </summary>        
        </member>
        <member name="M:ftd.FtdDataHelper.doLinkTable(System.Collections.ICollection,System.Data.DataTable,System.Data.DataColumn,System.String,System.Data.DataColumn,System.Action{System.Data.DataRow,System.Data.DataRow,System.Boolean})">
            <summary>
            連結表格
            </summary>
            <param node_4="data_table">連結目的資料表</param>
            <param node_4="dtLink">連結來源資料表</param>
            <param node_4="keyCoumn">目的鍵值欄位</param>
            <param node_4="keyValuePrefix">鍵值前置碼(如指定，則鍵值Value必須符合，否則不做連結)</param>
            <param node_4="linkedColumn">是否已連結(假如此欄位值== DbNull.Value，否則不做連結)</param>        
            <param node_4="doRowLink"></param>
        </member>
        <member name="M:ftd.FtdDataHelper.doLinkTable``2(System.Collections.ICollection,System.Data.DataTable,System.Data.DataColumn,System.Action{``0,``1})">
            <summary>
            連結表格
            </summary>
            <param node_4="data_table">連結目的資料表</param>
            <param node_4="dtLink">連結來源資料表</param>
            <param node_4="keyCoumn">目的鍵值欄位</param>   
            <param node_4="doRowLink"></param>
        </member>
        <member name="M:ftd.FtdDataHelper.linkTable(System.Data.DataTable,System.Data.DataTable,ftd.FtdDataHelper.LinkInfo)">
            <summary>
            Join資料表
            </summary>        
        </member>
        <member name="M:ftd.FtdDataHelper.linkTable(System.Collections.ICollection,System.Data.DataTable,ftd.FtdDataHelper.LinkInfo)">
            <summary>
            Join資料表
            </summary>
        </member>
        <member name="M:ftd.FtdDataHelper.setCodeName(System.Data.DataTable,System.String,System.String,System.Object[])">
            <summary>
            CodeToName Name必須是字串類型
            </summary>        
        </member>
        <member name="M:ftd.FtdDataHelper.setCodeName(System.Data.DataTable,System.String,System.String,System.Collections.IDictionary)">
            <summary>
            CodeToName Name必須是字串類型
            </summary>        
        </member>
        <member name="M:ftd.FtdDataHelper.setCodeName(System.Data.DataTable,ftd.FtdDataHelper.GetDataRowValue,System.String,System.Object[])">
            <summary>
            CodeToName Name必須是字串類型
            </summary>        
        </member>
        <member name="M:ftd.FtdDataHelper.setCodeName(System.Data.DataTable,ftd.FtdDataHelper.GetDataRowValue,System.String,System.Collections.IDictionary)">
            <summary>
            CodeToName Name必須是字串類型
            </summary>        
        </member>
        <member name="M:ftd.FtdDataHelper.doSetCodeName(System.Data.DataTable,System.String,ftd.FtdDataHelper.GetDataRowValue,System.String,System.Collections.IDictionary)">
            <summary>
            CodeToName Name必須是字串類型
            </summary>        
        </member>
        <member name="M:ftd.FtdDataHelper.setMulitCodeName(System.Data.DataTable,ftd.FtdDataHelper.GetArrayOfDataRowDelegate,System.String,System.String,System.Object[])">
            <summary>
            CodeToName Name必須是字串類型
            </summary>        
        </member>
        <member name="M:ftd.FtdDataHelper.setMulitCodeNameII(System.Data.DataTable,System.String,System.String,System.String,System.Collections.IDictionary)">
            <summary>
            CodeToName Name必須是字串類型 已空白作為分切值
            </summary>        
        </member>
        <member name="M:ftd.FtdDataHelper.setMulitCodeName(System.Data.DataTable,ftd.FtdDataHelper.GetArrayOfDataRowDelegate,System.String,System.String,System.Collections.IDictionary)">
            <summary>
            CodeToName Name必須是字串類型
            </summary>        
        </member>
        <member name="M:ftd.FtdDataHelper.findRowByColumnValue(System.Data.DataTable,System.String,System.Object)">
            <summary>
            搜尋某列,依據指定欄位的值
            </summary>
        </member>
        <member name="M:ftd.FtdDataHelper.findRowByColumnValue(System.Data.DataTable,System.String,System.Object,System.String,System.Object)">
            <summary>
            搜尋某列,依據指定欄位的值
            </summary>
        </member>
        <member name="T:ftd.FtdDataHelper.TableTree">
            <summary>
            資料表樹的計算
            </summary>
        </member>
        <member name="M:ftd.FtdDataHelper.TableTree.getTreeDownExpand``1(``0,ftd.FtdDataHelper.TableTree.DQueryAllChilds{``0},ftd.FtdDataHelper.TableTree.DRemoveExists{``0})">
            <summary>
            取得向下完整展開的樹
            </summary>      
        </member>
        <member name="M:ftd.FtdDataHelper.TableTree.getTreeUpExpand``1(``0,ftd.FtdDataHelper.TableTree.DQueryAllParents{``0},ftd.FtdDataHelper.TableTree.DRemoveExists{``0})">
            <summary>
            取得向上展開的樹
            </summary>      
        </member>
        <member name="M:ftd.FtdDataHelper.TableTree.calcTreeNo``1(``0,System.String,System.String,System.String,ftd.FtdDataHelper.TableTree.DQueryRoots{``0},ftd.FtdDataHelper.TableTree.DQueryChilds{``0})">
            <summary>
            計算樹系代號
            </summary>
        </member>
        <member name="T:ftd.FtdDataHelper.TableTree.DQueryAllParents`1">
            <summary>
            取得眾父
            </summary>
        </member>
        <member name="T:ftd.FtdDataHelper.TableTree.DQueryAllChilds`1">
            <summary>
            取得眾子
            </summary>
        </member>
        <member name="T:ftd.FtdDataHelper.TableTree.DQueryRoots`1">
            <summary>
            取得無父的紀錄
            </summary>
        </member>
        <member name="T:ftd.FtdDataHelper.TableTree.DQueryChilds`1">
            <summary>
            取得指定紀錄的子紀錄
            </summary>
        </member>
        <member name="T:ftd.FtdDataHelper.TableTree.DImportNotExists`1">
            <summary>
            匯入不存在的紀錄 
            </summary>
        </member>
        <member name="T:ftd.FtdDataHelper.TableTree.DRemoveExists`1">
            <summary>
            移除(不是刪除)已存在的紀錄           
            </summary>
        </member>
        <member name="T:ftd.FtdDataHelper.GetDataRowValue">
            <summary>
            由DataRow取得一個值
            </summary>        
        </member>
        <member name="T:ftd.FtdDataHelper.GetArrayOfDataRowDelegate">
            <summary>
            由DataRow取得一個陣列
            </summary>        
        </member>
        <member name="T:ftd.FtdDataHelper.GetLinkLessValue">
            <summary>
            無法連結時傳回的值
            </summary>        
        </member>
        <member name="T:ftd.FtdDataHelper.LinkInfo">
            <summary>
            欄位連結設定
            </summary>
        </member>
        <member name="F:ftd.FtdDataHelper.LinkInfo.KeyColumnName">
            <summary>
            Key欄位
            </summary>
        </member>
        <member name="F:ftd.FtdDataHelper.LinkInfo.ValueColumnName">
            <summary>
            要設定的欄位
            </summary>
        </member>
        <member name="F:ftd.FtdDataHelper.LinkInfo.ValueSourceColumnName">
            <summary>
            要設定的欄位-資料來源欄位名稱
            </summary>
        </member>
        <member name="F:ftd.FtdDataHelper.LinkInfo.LinkLessDefaultValue">
            <summary>
            Link失敗時，的預設值
            </summary>
        </member>
        <member name="T:ftd.service.FtdCreatorService">
            <summary>
            物件建立服務
            </summary>
        </member>
        <member name="F:ftd.service.FtdCreatorService.Instance">
            <summary>
            實例
            </summary>
        </member>
        <member name="F:ftd.service.FtdCreatorService.Creator">
            <summary>
            物件建立者
            </summary>
        </member>
        <member name="F:ftd.service.FtdCreatorService.CreateMethod">
            <summary>
            物件建立程序
            </summary>
        </member>
        <member name="M:ftd.service.FtdCreatorService.createObject``1">
            <summary>
            建立物件
            如果物件為FtdService將呼叫其initService()
            </summary>
        </member>
        <member name="M:ftd.service.FtdCreatorService.createObject``1(``0@)">
            <summary>
            建立並設定指定物件
            如果物件為FtdService將呼叫其initService()
            </summary>
        </member>
        <member name="T:ftd.service.FtdCreatorService.CCreateMethod">
            <summary>
            建立物件程序
            </summary>
        </member>
        <member name="T:ftd.service.FtdCreatorService.ObjectCreator">
            <summary>
            物件建立者
            </summary>
        </member>
        <member name="M:ftd.service.FtdCreatorService.ObjectCreator.createObject``1">
            <summary>
            建立物件
            </summary>            
        </member>
        <member name="T:ftd.service.FtdMailService">
            <summary>
            Mail寄送服務
            </summary>
        </member>
        <member name="F:ftd.service.FtdMailService.Instance">
            <summary>
            Mail Server Instance
            </summary>
        </member>
        <member name="F:ftd.service.FtdMailService.SenderName">
            <summary>
            寄件人姓名(一律設定此值)
            </summary>
        </member>
        <member name="F:ftd.service.FtdMailService.SenderAddress">
            <summary>
            寄件人Email(一律設定此值)
            </summary>
        </member>
        <member name="F:ftd.service.FtdMailService.ReceiverAddress">
            <summary>
            如設定全部信件都將寄到此信箱
            </summary>
        </member>
        <member name="F:ftd.service.FtdMailService.SubjectPrefix">
            <summary>
            郵件標題前置內容
            </summary>
        </member>
        <member name="F:ftd.service.FtdMailService.SendMailLimit">
            <summary>
            每分鐘Mail流量限制(default 1M)
            </summary>
        </member>
        <member name="M:ftd.service.FtdMailService.activeTask">
            <summary>
            啟動送信工作
            </summary>
        </member>
        <member name="M:ftd.service.FtdMailService.sendCountLimit(System.Threading.ThreadStart)">
            <summary>
            流量控管
            </summary>
        </member>
        <member name="M:ftd.service.FtdMailService.sendEmail(System.Net.Mail.MailMessage)">
            <summary>
            寄出信件
            </summary>
        </member>
        <member name="M:ftd.service.FtdMailService.getMailQueues">
            <summary>
            取得QueueEmail
            </summary>
        </member>
        <member name="M:ftd.service.FtdMailService.deserializeMail(System.Data.DataRow)">
            <summary>
            自指定的DataRow還原FtdEmail
            </summary>
        </member>
        <member name="M:ftd.service.FtdMailService.serializeMail(System.Data.DataRow,ftd.data.FtdEmail)">
            <summary>
            序列化FtdEmail至DataRow
            </summary>
        </member>
        <member name="M:ftd.service.FtdMailService.queueEmail(ftd.data.FtdEmail)">
            <summary>
            將Email放入Queue
            </summary>
        </member>
        <member name="T:ftd.service.FtdMailService.EmailLog">
            <summary>
            MailLog
            </summary>
        </member>
        <member name="F:ftd.service.FtdMailService.EmailLog.Mail">
            <summary>
            FtdEmail or MailMessage
            </summary>
        </member>
        <member name="M:ftd.service.FtdMailService.EmailLog.#ctor(System.Object,System.String)">
            <summary>
            Mail 可以是 FtdMail or MailMessage
            </summary>
        </member>
        <member name="T:ftd.service.FtdWebImageService">
            <summary>
            影像ImageUrl
            </summary>
        </member>
        <member name="F:ftd.service.FtdWebImageService.ResponseImageUrl">
            <summary>
            顯示圖片的網址 例:~
            </summary>
        </member>
        <member name="F:ftd.service.FtdWebImageService.Images">
            <summary>
            (影像代碼,實際影像檔位置)
            </summary>
        </member>
        <member name="M:ftd.service.FtdWebImageService.getImageUrl(System.String)">
            <summary>
            取得影像檔超連結
            </summary>      
        </member>
        <member name="M:ftd.service.FtdWebImageService.getImageFilePath(System.String)">
            <summary>
            依據影像檔CODE取回實際檔案路徑
            </summary>
        </member>
        <member name="P:ftd.service.NsService.CaseSensitive">
            <summary>
            區分大小寫
            </summary>
        </member>
        <member name="P:ftd.service.NsService.IsUnicodeSupport">
            <summary>
            是否支援UniCode
            </summary>
        </member>
        <member name="P:ftd.service.NsService.IsDateMilliSeconds">
            <summary>
            是否日期到毫秒(0.001 Seconds)
            </summary>
        </member>
        <member name="T:ftd.thread.FtdQueueThread">
            <summary>
            佇列式執行緒
            如無工作會結束,再次啟動可呼叫Active
            </summary>
        </member>
        <member name="M:ftd.thread.FtdQueueThread.doEvent">
            <summary>
            控制權返回
            </summary>
        </member>
        <member name="F:ftd.thread.FtdQueueThread.lock_var">
            <summary>
            控制用鎖定
            </summary>
        </member>
        <member name="F:ftd.thread.FtdQueueThread.RequireBreak">
            <summary>
            要求中斷工作
            </summary>
        </member>
        <member name="F:ftd.thread.FtdQueueThread.RequireActive">
            <summary>
            啟動要求
            </summary>
        </member>
        <member name="F:ftd.thread.FtdQueueThread.RequireTerminate">
            <summary>
            要求結束工作 (永不再接收啟動的要求)
            </summary>
        </member>
        <member name="M:ftd.thread.FtdQueueThread.threadMain">
            <summary>
            執行緒進入點
            </summary>
        </member>
        <member name="F:ftd.thread.FtdQueueThread._WaitEvent">
            <summary>
            等待啟動事件
            </summary>
        </member>
        <member name="M:ftd.thread.FtdQueueThread.taskActive">
            <summary>
            要求工作啟動
            </summary>        
        </member>
        <member name="M:ftd.thread.FtdQueueThread.taskBreak">
            <summary>
            要求工作中斷(可要求再次啟動)
            </summary>
        </member>
        <member name="M:ftd.thread.FtdQueueThread.taskTerminate">
            <summary>
            要求工作終結(無法再次啟動)
            </summary>
        </member>
        <member name="E:ftd.thread.FtdQueueThread.ActiveTask">
            <summary>
            當啟動工作時
            </summary>
        </member>
        <member name="E:ftd.thread.FtdQueueThread.TerminateTask">
            <summary>
            當要求工作終結(無法再次啟動)
            </summary>
        </member>
        <member name="E:ftd.thread.FtdQueueThread.ExceptionHappen">
            <summary>
            發生例外
            </summary>
        </member>
        <member name="P:ftd.thread.FtdQueueThread.ThreadName">
            <summary>
            執行緒名稱
            </summary>
        </member>
        <member name="P:ftd.thread.FtdQueueThread.ExceptionDelaySeconds">
            <summary>
            發生例外時暫停秒數(XmlAttrDefault 60秒)
            </summary>
        </member>
        <member name="P:ftd.thread.FtdQueueThread.IsRunning">
            <summary>
            執行緒是否執行當中
            </summary>
        </member>
        <member name="P:ftd.thread.FtdQueueThread.IsCreated">
            <summary>
            執行緒是否已建立
            </summary>
        </member>
        <member name="T:ftd.thread.FtdQueueThread.DoTaskMethod">
            <summary>
            執行工作
            </summary>        
        </member>
        <member name="T:ftd.thread.FtdQueueThread.WhenException">
            <summary>
            當發生例外時
            </summary>
        </member>
        <member name="T:ftd.thread.FtdSingleTimerThread">
            <summary>
            單一Timer事件Thread 
            如Timer事件發生時Thread仍在執行中的話，放棄此一事件。
            發生例外的話，下次時間到仍然會執行。
            </summary>
        </member>
        <member name="F:ftd.thread.FtdSingleTimerThread.taskTimer">
            <summary>
            Timer
            </summary>
        </member>
        <member name="M:ftd.thread.FtdSingleTimerThread.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.thread.FtdSingleTimerThread.timerStart">
            <summary>
            起始執行緒
            </summary>
        </member>
        <member name="M:ftd.thread.FtdSingleTimerThread.timerStop">
            <summary>
            結束Timer與等待Task執行緒停止
            </summary>        
        </member>
        <member name="M:ftd.thread.FtdSingleTimerThread.timerMain(System.Object)">
            <summary>
            Timer執行緒 主程式
            </summary>        
        </member>
        <member name="M:ftd.thread.FtdSingleTimerThread.onTimeEvent">
            <summary>
            執行事件
            </summary>
        </member>
        <member name="M:ftd.thread.FtdSingleTimerThread.onTimeExceptionEvent(System.Exception)">
            <summary>
            執行事件發生例外時
            </summary>        
        </member>
        <member name="E:ftd.thread.FtdSingleTimerThread.EventOnTime">
            <summary>
            時間周期到時的事件
            </summary>
        </member>
        <member name="E:ftd.thread.FtdSingleTimerThread.EventOnTimeException">
            <summary>
            EventOnTime值型時發生例外的事件
            </summary>
        </member>
        <member name="P:ftd.thread.FtdSingleTimerThread.ThreadName">
            <summary>
            執行緒名稱
            </summary>
        </member>
        <member name="P:ftd.thread.FtdSingleTimerThread.InTerminateProgress">
            <summary>
            是否處在結束程序中
            </summary>
        </member>
        <member name="P:ftd.thread.FtdSingleTimerThread.IsRunning">
            <summary>
            是否正在處理OnTime事件中
            </summary>
        </member>
        <member name="P:ftd.thread.FtdSingleTimerThread.PeriodSecond">
            <summary>
            執行週期秒數
            (Default 60 Second)
            </summary>
        </member>
        <member name="P:ftd.thread.FtdSingleTimerThread.PeriodMilliSecond">
            <summary>
            執行週期秒數(千分之一秒)
            (Default 60 Second)
            </summary>
        </member>
        <member name="P:ftd.thread.FtdSingleTimerThread.IsStartimmediate">
            <summary>
            啟動Timer時是否立即執行
            (Default false)
            </summary>
        </member>
        <member name="T:ftd.thread.FtdSingleTimerThread.CEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="M:ftd.FtdThreadHelper.waitTaskFinish(System.Int32,System.Threading.ThreadStart)">
            <summary>
            等待指定工作於時間內完成
            </summary>        
        </member>
        <member name="T:ftd.web.ui.FwbAiImage">
            <summary>
            use div tag to simulate image tag
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbAiImage.ImageUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbAiImage.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbAiImage.Height">
            <summary>
            
            </summary>
        </member>
        <member name="T:ftd.web.ui.render.FwbTabControlRender">
            <summary>
            頁簽功能Render 
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbTabControlRender.renderBegin(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render(TabBegin)
            </summary>        
        </member>
        <member name="M:ftd.web.ui.render.FwbTabControlRender.renderEnd(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render(TabEnd)
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbTabControlRender.renderTabControlBegin(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render(TabBegin)(樣式提供者實作)
            </summary>        
        </member>
        <member name="M:ftd.web.ui.render.FwbTabControlRender.renderTabControlEnd(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render(TabEnd)(樣式提供者實作)
            </summary>
        </member>
        <member name="P:ftd.web.ui.render.FwbTabControlRender.EnableAutoHide">
            <summary>
            是否啟用自動隱藏的功能。
            當只有一個視窗的時候，自動隱藏窗框。
            </summary>
        </member>
        <member name="P:ftd.web.ui.render.FwbTabControlRender.TabControl">
            <summary>
            TabControl
            </summary>
        </member>
        <member name="T:ftd.web.ui.render.FwbInnerTabRender">
            <summary>
            明細頁籤樣式
            </summary>
        </member>
        <member name="T:ftd.web.ui.render.FwbMasterTabRender">
            <summary>
            主要頁籤樣式
            </summary>
        </member>
        <member name="T:ftd.web.ui.render.FwbHtmlRender">
            <summary>
            畫出HTMLDialog
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbHtmlRender.renderDialogBegin(ftd.FtdBrowserVersion,System.Web.UI.HtmlTextWriter,System.String,System.String,System.Int32)">
            <summary>
            Dialog浮上來起始
            </summary>        
        </member>
        <member name="M:ftd.web.ui.render.FwbHtmlRender.renderDialogEnd(ftd.FtdBrowserVersion,System.Web.UI.HtmlTextWriter)">
            <summary>
            Dialog浮上來結束
            </summary>
        </member>
        <member name="T:ftd.web.ui.render.FwbInputComplexRender">
            <summary>
            複合輸入Render
            </summary>
        </member>
        <member name="T:ftd.web.ui.render.FwbInputRender">
            <summary>
            負責Render FwbInput
            </summary>
        </member>
        <member name="F:ftd.web.ui.render.FwbInputRender.Input">
            <summary>
            控制項
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbInputRender.writeBackUserInput">
            <summary>
            回寫使用者輸入內容
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbInputRender.renderAutoLabel(System.Web.UI.HtmlTextWriter)">
            <summary>
            輸出自動標題
            </summary>        
        </member>
        <member name="M:ftd.web.ui.render.FwbInputRender.renderAutoSuffix(System.Web.UI.HtmlTextWriter)">
            <summary>
            輸出自動後綴
            </summary>        
        </member>
        <member name="M:ftd.web.ui.render.FwbInputComplexRender.getInputTitleForRender">
            <summary>
            取得標題顯示內容 For Render
            </summary>     
        </member>
        <member name="T:ftd.web.ui.render.FwbGdRender">
            <summary>
            FwbGdRender
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbGdRender.#ctor(ftd.web.ui.FwbWebGrid)">
            <summary>
            Constructor
            </summary>       
        </member>
        <member name="M:ftd.web.ui.render.FwbGdRender.getItemSelectionModeOverCss(System.Int32)">
            <summary>
            滑鼠移動到列上面時的列CSS
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbGdRender.getItemSelectionModeOutCss(System.Int32)">
            <summary>
            滑鼠移動離開列上面時的列CSS
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbGdRender.onInit">
            <summary>
            OnInit
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbGdRender.onPreRender">
            <summary>
            PreRender
            </summary>
        </member>
        <member name="P:ftd.web.ui.render.FwbGdRender.Name">
            <summary>
            Render Style Name
            </summary>
        </member>
        <member name="T:ftd.web.ui.render.FwbGdRender.CHeaderGroup">
            <summary>
            Header Group
            </summary>
        </member>
        <member name="P:ftd.web.ui.render.FwbGdRender.CHeaderGroup.ColCount">
            <summary>
            欄位數
            </summary>
        </member>
        <member name="P:ftd.web.ui.render.FwbGdRender.CHeaderGroup.Title">
            <summary>
            標題名稱
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbGdNoBorderRender.#ctor(ftd.web.ui.FwbWebGrid)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbGdGreenRender.#ctor(ftd.web.ui.FwbWebGrid)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbGdNormalRender.#ctor(ftd.web.ui.FwbWebGrid)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ftd.web.ui.render.FwbToolbarNormalRender">
            <summary>
            ToolBar Normal樣式
            </summary>
        </member>
        <member name="T:ftd.web.ui.render.FwbToolbarRender">
            <summary>
            ToolBar Render
            </summary>
        </member>
        <member name="F:ftd.web.ui.render.FwbToolbarRender.ClientId">
            <summary>
            項目Id
            </summary>
        </member>
        <member name="F:ftd.web.ui.render.FwbToolbarRender.Items">
            <summary>
            項目清單
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbToolbarRender.render(System.Web.UI.HtmlTextWriter)">
            <summary>
            匯出項目
            </summary>
            <param node_4="writer"></param>
        </member>
        <member name="T:ftd.web.ui.render.FwbToolbarRender.ToolBarItem">
            <summary>
            功能表項目
            </summary>
        </member>
        <member name="F:ftd.web.ui.render.FwbToolbarRender.ToolBarItem.HyperLink">
            <summary>
            超連結
            </summary>
        </member>
        <member name="F:ftd.web.ui.render.FwbToolbarRender.ToolBarItem.HyperLinkTarget">
            <summary>
            超連結目標
            </summary>
        </member>
        <member name="F:ftd.web.ui.render.FwbToolbarRender.ToolBarItem.ClientClick">
            <summary>
            Client Click 
            </summary>
        </member>
        <member name="F:ftd.web.ui.render.FwbToolbarRender.ToolBarItem.Text">
            <summary>
            項目文字
            </summary>
        </member>
        <member name="F:ftd.web.ui.render.FwbToolbarRender.ToolBarItem.Description">
            <summary>
            項目描述
            </summary>
        </member>
        <member name="F:ftd.web.ui.render.FwbToolbarRender.ToolBarItem.IconUrl">
            <summary>
            圖示URL Support ~
            </summary>
        </member>
        <member name="T:ftd.web.ui.render.FwbGdKcRender">
            <summary>
            Kc2009 Grid樣式Render
            </summary>
        </member>
        <member name="F:ftd.web.ui.render.FwbGdKcRender.P_LangType">
            <summary>
            CH / EN
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbGdKcRender.#ctor(ftd.web.ui.FwbWebGrid)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbPager">
            <summary>
            分頁控制
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbPager.getDataSourceRows(System.Object,System.Int32,System.Int32)">
            <summary>
            取得資料來源(DataTable or DataView)的列區間
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbPager.RowCount">
            <summary>
            *列筆數
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbPager.PageSize">
            <summary>
            *頁面列筆數
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbPager.PageCount">
            <summary>
            *頁面數
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbPager.CurrentPageIndex">
            <summary>
            目前頁面Index
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbPager.CurrentPageRowStartIndex">
            <summary>
            目前頁面列Start Index
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbPager.CurrentPageRowEndIndex">
            <summary>
            目前頁面列EndIndex
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbPager.CurrentPageRowCount">
            <summary>
            目前頁面列數
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbPager.HasPreviousPage">
            <summary>
            是否有前一頁
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbPager.HasNextPage">
            <summary>
            是否有下一頁
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbGdSerialColumn">
            <summary>
            自動序號欄位
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdColumn.SortIndex">
            <summary>
            排序順序 1 2 3 ...
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdColumn.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdColumn.userSortClick">
            <summary>
            變更排序順序
            通常這是由User觸發
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdColumn.setSortDirection(System.Nullable{System.Web.UI.WebControls.SortDirection})">
            <summary>
            設定排序方向
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdColumn.renderColumn(ftd.web.ui.FwbWebGrid,System.Web.UI.HtmlTextWriter)">
            <summary>
            繪製欄位標題內容
            </summary>   
        </member>
        <member name="M:ftd.web.ui.FwbGdColumn.renderCell(ftd.web.ui.FwbWebGrid,System.Web.UI.HtmlTextWriter,System.String,System.Int32)">
            <summary>
            繪製欄位內容內容
            </summary>     
        </member>
        <member name="M:ftd.web.ui.FwbGdColumn.raisePostBackEvent(System.String)">
            <summary>
            事件返回時
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.HeaderText">
            <summary>
            標題名稱
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.HeaderGroupNo">
            <summary>
            標題群組代號(Default 0)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.IsNoWrap">
            <summary>
            文字內容不換行？
            (Default false)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.SortColumnName">
            <summary>
            排序欄位名稱 (預設為資料欄位名稱)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.Width">
            <summary>
            欄位寬度(預設"")
            例:100px
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.Align">
            <summary>
            水平位置(預設靠左)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.Valign">
            <summary>
            垂直位置(預設中間)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.Visible">
            <summary>
            顯示(預設True)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.CheckVisible">
            <summary>
            是否顯示CheckBox
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.Checked">
            <summary>
            欄位是否Checked
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.ColorKind">
            <summary>
            欄位顏色分類(Default 0)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.CheckHint">
            <summary>
            CheckHint
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.ColumnIndex">
            <summary>
            欄位與欄位集合中的Index
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.IsUserDefineRender">
            <summary>
            是否啟用自定義Render
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.Grid">
            <summary>
            Grid
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.ColumnName">
            <summary>
            欄位名稱
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.DataColumnName">
            <summary>
            資料欄位名稱
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.AllowSort">
            <summary>
            允許排序? XmlAttrDefault(true)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.SortDirectionName">
            <summary>
            排序順序
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.IsEncodedHtml">
            <summary>
            對內容顯示編碼HTML(Default:True)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumn.SplitCharLen">
            <summary>
            是否分切字串每N個英文字(中文字算兩個)
            (Defult -1)
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbGdCellControl">
            <summary>
            基礎自定元件For自定欄位
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdCellControl.RowIndex">
            <summary>
            列索引
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdCellControl.ColumnIndex">
            <summary>
            欄位索引
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdCellControl.Grid">
            <summary>
            Grid
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdCellControl.Column">
            <summary>
            欄位
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbGdCellColumn">
            <summary>
            自訂欄位
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdCellColumn.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdCellColumn.createControl">
            <summary>
            要求欄位建立每一列的控制項
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdCellColumn.onControlCreated(ftd.web.ui.FwbGdCellControl)">
            <summary>
            當控制項建立完成後，會呼叫此函數。
            以便做更進階的控制
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdCellColumn.onWriteBack">
            <summary>
            需要資料回寫時
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdCellColumn.Controls">
            <summary>
            所屬控制項
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbGdSelectionColumn">
            <summary>
            選擇欄位，提供多筆選擇的功能。    
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdSelectionColumn.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdSelectionColumn.getInputName(System.Int32)">
            <summary>
            例:WG1_CELL_1_2
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdSelectionColumn.onWriteBack">
            <summary>
            資料回寫時
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdSelectionColumn.getSelectionIndexs">
            <summary>
            取得目前被選擇的索引值
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbGdSelectionControl">
            <summary>
            選擇欄位控制項
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdSelectionControl.IsSelected">
            <summary>
            是否被選擇
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdSelectionControl.InputName">
            <summary>
            Html Input的名稱
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdColumnCollection.SortSequence">
            <summary>
            排序順序號 1 2 ...
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdColumnCollection.Insert(System.Int32,ftd.web.ui.FwbGdColumn)">
            <summary>
            插入欄位
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdColumnCollection.Add(ftd.web.ui.FwbGdColumn)">
            <summary>
            追加欄位
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdColumnCollection.getBoundColumns">
            <summary>
            取得全部的資料感知欄位
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdColumnCollection._Grid">
            <summary>
            Grid
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdColumnCollection.Grid">
            <summary>
            Grid
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdBoundColumn.DataFormatFunc">
            <summary>
            自訂格式化函數(為序列化)
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdBoundColumn.setDataFormatFunc(System.Func{System.Data.DataRow,System.Object,System.String})">
            <summary>
            自訂資料格式字串程序
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdBoundColumn.convertBoundValueToText(System.Object,System.Object)">
            <summary>
            轉換繫結原生資料成文字資料
            </summary>      
        </member>
        <member name="M:ftd.web.ui.FwbGdBoundColumn.setTextLimit(System.Int32,System.String)">
            <summary>
            指定顯示資料最大長度
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdBoundColumn.DataFormatString">
            <summary>
            資料格式字串 
            例:{0:yyyy/MM/dd}
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbGdEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdEventArgs.DataRowIndex">
            <summary>
            DataRow Index
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbGdHeaderGroup">
            <summary>
            標題群組
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdHeaderGroup.No">
            <summary>
            代號
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbGdHeaderGroup.Title">
            <summary>
            標題
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbInputValue">
            <summary>
            代表輸入值
            提供轉型函數
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputValue.format(System.String)">
            <summary>
            格式化內容
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputValue.op_Implicit(ftd.web.ui.FwbInputValue)~System.String">
            <summary>
            轉成字串
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputValue.op_Implicit(ftd.web.ui.FwbInputValue)~System.Nullable{System.Int32}">
            <summary>
            轉成INT
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputValue.op_Implicit(ftd.web.ui.FwbInputValue)~System.Nullable{System.Decimal}">
            <summary>
            轉成DECIMAL
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputValue.op_Implicit(ftd.web.ui.FwbInputValue)~System.Nullable{System.Double}">
            <summary>
            轉成Double
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputValue.op_Implicit(ftd.web.ui.FwbInputValue)~System.Nullable{System.DateTime}">
            <summary>
            轉成DATETIME
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputValue.SelectedValues">
            <summary>
            選取到的複值(List選項才能使用)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputValue.SelectedValue">
            <summary>
            選取到的單值(List選項才能使用)
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbRenderControl">
            <summary>
            Render Control
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbRenderControl.RenderEvent">
            <summary>
            
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbGdSortChangeHandler">
            <summary>
            排序變更事件
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbGdPageChangeHandler">
            <summary>
            頁面變更事件
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbGdItemHandler">
            <summary>
            項目事件
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbGdItemCreateHandler">
            <summary>
            項目建立事件
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbGdButtonSetStyle">
            <summary>
            列出樣式
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdButtonSetStyle.Normal">
            <summary>
            一般模式
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdButtonSetIconName.RemoveFromList">
            <summary>
            自清單移除
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdButtonSetItem.CommandName">
            <summary>
            命令名稱
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdButtonSetItem.CommandText">
            <summary>
            命令文字
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdButtonSetItem.IconName">
            <summary>
            命令圖示
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdButtonSetItem.IconUrl">
            <summary>
            命令網址
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdButtonSetItem.OnClientClick">
            <summary>
            Client 按下Click執行的命令
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdButtonSetItem.HyperLink">
            <summary>
            項目超連結
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdButtonSetItem.HyperLinkTarget">
            <summary>
            項目超連結 Target
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdButtonSetItem.IsAjaxEventMode">
            <summary>
            Support Ajax Event
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbGdButtonSetItem.Visible">
            <summary>
            可否看見
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbGdButtonSetEventArgs">
            <summary>
            事件類別
            </summary>        
        </member>
        <member name="T:ftd.web.ui.FwbGdButtonSetColumn">
            <summary>
            按鈕集合欄位
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdButtonSetColumn.getItemClickEvent_Hyperlink(ftd.web.ui.FwbGdButtonSet,System.Int32)">
            <summary>
            欄位事件
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdButtonSetColumn.getItemClickEvent_Hyperlink_NonAjax(ftd.web.ui.FwbGdButtonSet,System.Int32)">
            <summary>
            欄位事件
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdButtonSetColumn.getItemClickEvent_OnClick(ftd.web.ui.FwbGdCellControl,System.Int32)">
            <summary>
            欄位事件
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbGdButtonSetColumn.ItemClick">
            <summary>
            命令圖示被點選時
            </summary>          
        </member>
        <member name="F:ftd.web.ui.FwbGdButtonSet.Items">
            <summary>
            命令列表
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbGdButtonSet.DisplayStyle">
            <summary>
            顯示樣式
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbGdButtonSet.StyleRender">
            <summary>
            Style Render
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbWindowParameterAttribute">
            <summary>
            視窗屬性標籤
            可提供更進階的視窗訊息 利用 ToString()
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbTabControl">
            <summary>
            代表頁簽控制項
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.TabControlRender">
            <summary>
            頁簽控制項的Render
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.IsDialog">
            <summary>
            頁簽控制項 是否是Dialog模式
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.IsTopDialog">
            <summary>
            頁簽控制項 是否是TopDialog模式
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.DisplayInSlave">
            <summary>
            是否顯示在副顯示區
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.DialogWidth">
            <summary>
            以Dialog模式顯示時的寬度(選擇性)
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.DialogHeight">
            <summary>
            以Dialog模式顯示時的高度(選擇性)
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.DialogZIndex">
            <summary>
            以Dialog模式顯示時的HTML ZIndex
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.DisplayControl">
            <summary>
            此Control所應該Render的Control
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.InnerTabControl">
            <summary>
            內縮的TabControl
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbTabControl.TabControlTitle">
            <summary>
            代表頁簽控制項內的每一頁簽
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.TabControlTitle.Window">
            <summary>
            頁簽-視窗
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.TabControlTitle.TabTitlePrefix">
            <summary>
            頁簽-標題前綴字
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.TabControlTitle.TabTitle">
            <summary>
            頁簽-標題
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.TabControlTitle.TabFocusCommandHref">
            <summary>
            頁簽-取的焦點的URL
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.TabControlTitle.TabCloseCommandHref">
            <summary>
            頁簽-關閉的URL
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.TabControlTitle.TabIconName">
            <summary>
            頁簽圖示名稱
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.TabControlTitle.IsCloseButtonEnable">
            <summary>
            頁簽-關閉按鈕是否顯示
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbTabControl.TabControlTitle.IsFocus">
            <summary>
            頁簽-是否為焦點
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbToolbar.EC1">
            <summary>
            Support Non Ajax
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbToolbar.onItemClick(ftd.web.ui.FwbToolbarEventArgs)">
            <summary>
            項目點選事件
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbToolbar.findCommand(System.String)">
            <summary>
            尋找命令 by CommandName
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbToolbar.Items">
            <summary>
            命令列表
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbToolbar.Item(System.String)">
            <summary>
            功能表項目
            </summary>     
        </member>
        <member name="P:ftd.web.ui.FwbToolbar.RenderStyle">
            <summary>
            顯示樣式(Normal XmlAttrDefault)
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbToolbar.ItemClick">
            <summary>
            項目點選事件
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbToolbarEventArgs">
            <summary>
            事件類別
            </summary>        
        </member>
        <member name="F:ftd.web.ui.FwbToolbarEventArgs.Command">
            <summary>
            ToolBar項目
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbToolbarItem">
            <summary>
            Toolbar Item項目
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbToolbarItem.CommandName">
            <summary>
            命令名稱
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbToolbarItem.CommandText">
            <summary>
            命令文字
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbToolbarItem.CommandDesc">
            <summary>
            命令描述
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbToolbarItem.IconUrl">
            <summary>
            圖示位址
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbToolbarItem.HyperLink">
            <summary>
            指定超連結
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbToolbarItem.HyperLinkTarget">
            <summary>
            指定超連結目的
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbToolbarItem.Visible">
            <summary>
            是否顯示
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbToolbarItem.IsAjaxEventMode">
            <summary>
            是否Support Ajax Event
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbToolbarItem.OnClientClick">
            <summary>
            Client 按下Click執行的命令
            </summary>
        </member>
        <member name="T:ftd.web.ui.render.FwbInputTextItemRender">
            <summary>
            輸入文字內容中的[輸入項目]Render        
            </summary>
        </member>
        <member name="F:ftd.web.ui.render.FwbInputTextYearMonthItemRender.IncludeMonth">
            <summary>
            是否包含月的部分
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbCodeQueryWindowArgs">
            <summary>
            CodeQuery Window 參數
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbCodeQueryWindowArgs.DataProviderTypeQName">
            <summary>
            資料提供者
            (類型為必須為FwbCodeQueryProvider)
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbCodeQueryWindowArgs.QueryParameters">
            <summary>
            查詢輸入參數
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbCodeQueryWindowArgs.QueryResults">
            <summary>
            查詢回傳參數
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbCodeQueryWindowArgs.CodeQueryWindow">
            <summary>
            執行CodeQuery的Window      
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbCodeQueryWindowArgs.setCustomAttribute(System.String,System.String)">
            <summary>
            設定自定屬性
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbCodeQueryWindowArgs.getCustomAttribute(System.String)">
            <summary>
            設定自定屬性
            </summary>        
        </member>
        <member name="T:ftd.web.ui.FwbCodeQueryButton">
            <summary>
            CodeQuery Button
            </summary> 
        </member>
        <member name="M:ftd.web.ui.FwbCodeQueryButton.onCodeQueryOpen">
            <summary>
            準備CodeQuery
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbCodeQueryButton.onCodeQueryFinish(ftd.web.ui.FwbWindow)">
            <summary>
            CodeQuery完成
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbCodeQueryButton.onCodeQueryClear">
            <summary>
            CodeQuery清空
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbCodeQueryButton.CodeQueryOpen">
            <summary>
            CodeQuery開啟事件        
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbCodeQueryButton.CodeQueryFinish">
            <summary>
            CodeQuery完成事件
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbCodeQueryButton.CodeQueryClear">
            <summary>
            CodeQuery清空事件
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbCodeQueryButton.QueryClick">
            <summary>
            查詢點選
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbCodeQueryButton.ClearClick">
            <summary>
            清除點選
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbCodeQueryButton.CodeQueryStyleName">
            <summary>
            查詢樣式
            如果此參數未指定則須自行指定於CodeQueryWindow於CodeQueryOpen事件中
            </summary>      
        </member>
        <member name="P:ftd.web.ui.FwbCodeQueryButton.SupportEventMode">
            <summary>
            事件模型 
            N(Normal) CodeQueryOpen,CodeQueryFinish,CodeQueryClear
            S(Simple) QueryClick, ClearClick
            </summary>      
        </member>
        <member name="P:ftd.web.ui.FwbCodeQueryButton.IsAjaxEvent">
            <summary>
            Is Support Ajax Event or Not (XmlAttrDefault true)
            </summary>      
        </member>
        <member name="P:ftd.web.ui.FwbCodeQueryButton.IsShowClearButton">
            <summary>
            顯示清除按鈕
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbCodeQueryButton.IsCQWindowOpend">
            <summary>
            CQ視窗是否開啟
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbCodeQueryButton.CQWindowId">
            <summary>
            CQ視窗代號
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbCodeQueryButton.ButtonText">
            <summary>
            按鈕文字
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbCodeQueryProvider">
            <summary>
            CodeQuery資料提供者
            包含欄位等資訊
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbCodeQueryProvider.getQueryData(System.Collections.Specialized.NameValueCollection)">
            <summary>
            取得CodeQuery資料
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbCodeQueryProvider.getRecordCountOfPage">
            <summary>
            每頁資料筆數(預設為12)
            </summary>		
        </member>
        <member name="M:ftd.web.ui.FwbCodeQueryProvider.getDefaultSortColumnName">
            <summary>
            預設排序欄位名稱(DataTable)
            </summary>            
        </member>
        <member name="M:ftd.web.ui.FwbCodeQueryProvider.getDefaultSortDirection">
            <summary>
            預設排序順序
            </summary>            
        </member>
        <member name="M:ftd.web.ui.FwbCodeQueryProvider.setCustomAttribute(System.String,System.String)">
            <summary>
            設定自定屬性
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbCodeQueryProvider.getCustomAttribute(System.String)">
            <summary>
            設定自定屬性
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbCodeQueryProvider.DisplayColumns">
            <summary>
            取得顯示欄位名稱
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbCodeQueryProvider.SearchParameters">
            <summary>
            搜尋的欄位集合
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbCodeQueryProvider.CsDisplayColumn">
            <summary>
            顯示欄位
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbCodeQueryProvider.CsSearchParameter">
            <summary>
            搜尋參數
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbEventControlEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbEventControl">
            <summary>
            事件控制項    
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbEventControl.PostBack">
            <summary>
            PostBack事件
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbBetweenStyle">
            <summary>
            將底下兩個 FwbInput以From To 的樣式來呈現
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbBetweenStyle.getInputPosition(ftd.web.ui.FwbInput)">
            <summary>
            子項目可透過此方法來得知其樣式
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbFunTree">
            <summary>
            Ftd Function Tree
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbFunTree.findTreeItemByTreeNo(System.String)">
            <summary>
            treeNo 例:0.1.2
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbFunTree.onItemClicked(System.String)">
            <summary>
            當項目點選
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbFunTree.renderTree(System.Web.UI.HtmlTextWriter)">
            <summary>
            畫出Tree
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbFunTree.renderTreeItem_ClientMode(System.Web.UI.HtmlTextWriter,ftd.web.ui.FwbFunTreeItem)">
            <summary>
            支援 Client Side JavaScript Folder Expand
            </summary>    
        </member>
        <member name="M:ftd.web.ui.FwbFunTree.renderTreeItem_ServerMode(System.Web.UI.HtmlTextWriter,ftd.web.ui.FwbFunTreeItem)">
            <summary>
            支援 Server Side Folder Expand
            </summary>      
        </member>
        <member name="E:ftd.web.ui.FwbFunTree.ItemClicked">
            <summary>
            項目選擇事件
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbFunTree.FolderClicked">
            <summary>
            目錄選擇事件
            注意:只有後端模式會觸發
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbFunTree.RootItem">
            <summary>
            根項目(根項目僅作為項目的頭，並不參與Render)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbFunTree.IsServerMode">
            <summary>
            是否為伺服端模式
            預設:False(利用JavaScript來做Folder切換)
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbFunTreeEventArgs">
            <summary>
            項目選擇事件
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbFunTreeEventArgs.#ctor(ftd.web.ui.FwbFunTreeItem)">
            <summary>
            Constructor
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbFunTreeEventArgs.MenuItem">
            <summary>
            項目
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbFunTreeItemRenderInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbFunTreeItemRenderInfo.treectl">
            <summary>
            功能樹
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbFunTreeItemRenderInfo.parentItem">
            <summary>
            父項目
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbFunTreeItemRenderInfo.level">
            <summary>
            階層 0:第一層 1:第二層 ...
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbFunTreeItemRenderInfo.isBrotherFirst">
            <summary>
            是否是兄弟的First
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbFunTreeItemRenderInfo.isBrotherLast">
            <summary>
            是否是兄弟的Last
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbFunTreeItemRenderInfo.treeNo">
            <summary>
            樹係代號 For Render
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbFunTreeItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbFunTreeItem.RenderInfo">
            <summary>
            RenderInfo 於Render時提供
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbFunTreeItem.getItemClickScript(System.String)">
            <summary>
            取得終端節點項目ClickScript
            </summary>            
        </member>
        <member name="M:ftd.web.ui.FwbFunTreeItem.writeItemContent(System.Web.UI.HtmlTextWriter)">
            <summary>
            項目內容
            </summary>            
        </member>
        <member name="M:ftd.web.ui.FwbFunTreeItem.addItem(ftd.web.ui.FwbFunTreeItem)">
            <summary>
            加入子項目
            </summary>            
        </member>
        <member name="M:ftd.web.ui.FwbFunTreeItem.findItem(System.String)">
            <summary>
            尋找項目
            </summary>            
        </member>
        <member name="P:ftd.web.ui.FwbFunTreeItem.IsExpand">
            <summary>
            節點是否展開
            (必須IsFolderNode=true才有作用)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbFunTreeItem.ItemId">
            <summary>
            項目代號(必須為唯一值)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbFunTreeItem.TreeItems">
            <summary>
            子項目
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbFunTreeItem.IsFolderNode">
            <summary>
            是否為目錄節點(有子節點者)
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbInput">
            <summary>
            基礎輸入欄位
            </summary>
        </member>
        <member name="T:ftd.web.ui.IFwbWindowOpener">
            <summary>
            提供一介面使得非視窗(控制項)能使的開啟後的視窗回到其控制內
            </summary>
        </member>
        <member name="M:ftd.web.ui.IFwbWindowOpener.onWindowClose(ftd.web.ui.FwbWindow)">
            <summary>
            當視窗關閉時
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInput.getValue(System.Boolean,System.Boolean)">
            <summary>
            取得指定版本{Current/Original}內容
            並是否轉成字串格式或原始格式
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInput.writeBackUserInput">
            <summary>
            回寫輸入內容
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInput.onTitleClick">
            <summary>
            TitleClick
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInput.onSuffixClick">
            <summary>
            SuffixClick
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInput.isValueValid(System.String@)">
            <summary>
            Value是否正確
            </summary>    
        </member>
        <member name="M:ftd.web.ui.FwbInput.validFieldValue">
            <summary>
            驗證欄位內容，如錯誤訊息會寫至 FieldError內。
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInput.toDbValue">
            <summary>
            轉成資料庫值
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbInput.loadDbValue(System.Object)">
            <summary>
            载入資料庫值
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbInput.loadDbValue(System.Data.DataRow)">
            <summary>
            载入資料
            </summary>  
        </member>
        <member name="M:ftd.web.ui.FwbInput.isFromStyle">
            <summary>
            是否是BetweenStyle中的From
            當套上FwbBetweenStyle時
            </summary>      
        </member>
        <member name="M:ftd.web.ui.FwbInput.isToStyle">
            <summary>
            是否是BetweenStyle中的To
            當套上FwbBetweenStyle時
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInput.save">
            <summary>
            儲存目前內容至原始版本
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInput.load">
            <summary>
            回存原始版本至目前內容
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbInput.TitleClick">
            <summary>
            當Title為LinkButton被點選時
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbInput.SuffixClick">
            <summary>
            當Suffix為LinkButton被點選時
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.IsTableMode">
            <summary>
            是否是表格模式的呈現方式
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbInput.BUG_IE6_001">
            <summary>
            當其值為True時，表示位於IE6的Browser下，且頭上有Dilaog視窗存在
            Window內的所有 HTML Select 元件必須要不顯示
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbInput.RenderStyle">
            <summary>
            顯示樣式
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.GroupNo">
            <summary>
            集合群組
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.FieldName">
            <summary>
            欄位名稱(無指定預設為ID)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.InputHint">
            <summary>
            輸入內框中的提示文字
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.DataTypeName">
            <summary>
            資料類型-名稱
            預設NVarchar20
            </summary>   
        </member>
        <member name="P:ftd.web.ui.FwbInput.DataType">
            <summary>
            資料類型
            1.第一順位依 DataTypeName
            2.第二順位依 ColumnName 所屬DataType
            3.預設為NVARCHAR20
            </summary>       
        </member>
        <member name="P:ftd.web.ui.FwbInput.FieldError">
            <summary>
            欄位錯誤訊息
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbInput.TitleStyle">
            <summary>
            欄位標題樣式(預設是Label)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.SuffixStyle">
            <summary>
            欄位後綴樣式(預設是Label)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.TitleHyperLinkUrl">
            <summary>
            欄位標題外部超連結
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.SuffixHyperLinkUrl">
            <summary>
            欄位後綴外部超連結
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.Title">
            <summary>
            欄位標題
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.Suffix">
            <summary>
            欄位後綴
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.TextOrginal">
            <summary>
            欄位原始內容
            透過 acceptChanges()存入
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbInput.Text">
            <summary>
            欄位文字
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbInput.Value">
            <summary>
            欄位值(字串|日期|整數|Decimal)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.CValue">
            <summary>
            現行值
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.OValue">
            <summary>
            原始值
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.TextWidth">
            <summary>
            (樣式)欄位寬度(default 100pt)
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbInput.TitleWidth">
            <summary>
            (樣式)標題寬度(default 70px)
            </summary>               
        </member>
        <member name="P:ftd.web.ui.FwbInput.SuffixWidth">
            <summary>
            (樣式)後綴寬度(default 70px)
            </summary>               
        </member>
        <member name="P:ftd.web.ui.FwbInput.IsDisplayTitle">
            <summary>
            (樣式)是否顯示標題(default true)
            </summary>                
        </member>
        <member name="P:ftd.web.ui.FwbInput.IsDisplaySuffix">
            <summary>
            (樣式)是否顯示後綴(default false)
            </summary>                
        </member>
        <member name="P:ftd.web.ui.FwbInput.IsNullValue">
            <summary>
            (判斷)目前輸入內容是否為空值
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.IsWriteable">
            <summary>
            (限定)是否為可寫入(default true)
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbInput.IsReadOnly">
            <summary>
            (限定)是否為唯讀(default false)
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbInput.IsKeepEmpty">
            <summary>
            (限定)是否為必須為空白(default false)
            </summary>   
        </member>
        <member name="P:ftd.web.ui.FwbInput.IsRequired">
            <summary>
            (限定)是否為必要欄位(default false)
            </summary>   
        </member>
        <member name="P:ftd.web.ui.FwbInput.IsWriteBack">
            <summary>
            是否必須回寫
            </summary>         
        </member>
        <member name="P:ftd.web.ui.FwbInput.VDate">
            <summary>
            Value為DateTime
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.VString">
            <summary>
            Value為String
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.VInt">
            <summary>
            Value為Integer
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.VDouble">
            <summary>
            Value為Double
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInput.VDecimal">
            <summary>
            Value為Decimal
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbInput.ETitleStyle">
            <summary>
            標題樣式
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbInput.ETitleStyle.Label">
            <summary>
            文字
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbInput.ETitleStyle.LinkButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbInput.ETitleStyle.HyperLink">
            <summary>
            
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbInputCollection">
            <summary>
            欄位集合物件，代表輸入項目集合
            </summary>    
        </member>
        <member name="M:ftd.web.ui.FwbInputCollection.findInputs_Recursive(System.Web.UI.Control,System.Collections.Generic.List{ftd.web.ui.FwbInput})">
            <summary>
            尋找輸入項目
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbInputCollection.loadValue(System.Data.DataRow)">
            <summary>
            载入欄位值
            </summary>        
        </member>
        <member name="F:ftd.web.ui.FwbInputCollection.ValidFieldsMessage">
            <summary>
            欄位驗證錯誤訊息
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputCollection.validFields(System.Boolean)">
            <summary>
            驗證欄位內容是否正確，如有錯誤訊息寫至ValidFieldsMessage
            </summary>        
            <param node_4="isBreakOnError">當有任意欄位驗證失敗時，是否中止。</param>        
        </member>
        <member name="M:ftd.web.ui.FwbInputCollection.collectFieldErrors">
            <summary>
            蒐集錯誤訊息存放至 ValidFieldsMessage
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputCollection.postValueTo(System.Data.DataRow)">
            <summary>
            寫入欄位資料至指定儲存體
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbInputCollection.setViewMode">
            <summary>
            設定所有的控制項為檢視模式
            全部皆為ReadOnly與NotRequired與CodeQuery Disable
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputCollection.setEditMode">
            <summary>
            設定所有的控制項為編輯模式
            全部皆為Writeable與NotRequire
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputCollection.ns_findExtNames">
            <summary>
            搜尋全部的衍生欄位
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputCollection.toDataTable``1">
            <summary>
            轉成DataTable
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputCollection.save">
            <summary>
            儲存目前內容至原始版本
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputCollection.load">
            <summary>
            回存原始版本至目前內容
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputCollection.Fields">
            <summary>
            欄位集合
            </summary> 
        </member>
        <member name="P:ftd.web.ui.FwbInputCollection.Item(System.String)">
            <summary>
            所屬欄位
            </summary>   
        </member>
        <member name="P:ftd.web.ui.FwbInputCollection.Item(System.Int32)">
            <summary>
            所屬欄位
            </summary> 
        </member>
        <member name="T:ftd.web.ui.FwbInputList">
            <summary>
            列表控制項
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputList.clear">
            <summary>
            清空項目清單
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputList.addListItem(System.String,System.String,System.Boolean)">
            <summary>
            增加項目清單
            EX.("Yes", "Y", true)
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbInputList.setListItems(System.Data.DataRow[],System.Data.DataColumn,System.Data.DataColumn)">
            <summary>
            設定列表項目內容        
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputList.setSelectValues(System.Collections.Generic.IList{System.String})">
            <summary>
            設定選擇到的值
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputList.clearItems">
            <summary>
            清空所有Item
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputList.ListType">
            <summary>
            列表類型
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputList.SplitChar">
            <summary>
            分隔字元預設為#
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputList.CodeTypeName">
            <summary>
            指定CodeType,資料將自動附加。
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputList.RepeatLayout">
            <summary>
            每一列欄位數
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputList.RepeatColumns">
            <summary>
            每一列欄位數
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputList.IsCodeTypeLoad">
            <summary>
            指定CodeType是否已載入
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputList.ListItemTexts">
            <summary>
            列出項目名稱 例: 是#否
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputList.ListItemValues">
            <summary>
            列出項目內容 例: T#F
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputList.ListItems">
            <summary>
            列出項目組合
            (Value, Text)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputList.IsMultiOptions">
            <summary>
            控制項是否是多重輸入
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbInputList.SelectedIndexChanged">
            <summary>
            SelectIndexChanged
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputList.AutoPostBack">
            <summary>
            AutoPostBack
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputList.SelectedValues">
            <summary>
            選擇到的內容(複選)  
            {"Name", "Name_U", "C"}   
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputList.SelectedValue">
            <summary>
            選擇到的內容(單選)  
            "Name" or null
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputList.SelectedTexts">
            <summary>
            選擇到的文字(複選)
            {"AXXX", "BXXX", "CXXX"}
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputList.SelectedText">
            <summary>
            選擇到的內容(單選)  
            "Name" or null
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbInputList.CListItem">
            <summary>
            列出項目
            (Value, Text)
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbInputList.CLists">
            <summary>
            列出項目集合
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbInputList.CLists.Items">
            <summary>
            項目
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputList.CLists.findByValue(System.String)">
            <summary>
            依值搜尋項目
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbInputList.FtdListType">
            <summary>
            列表類型名稱
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbInputList.FtdListType.CheckBoxTrueFalse">
            <summary>
            True為前一個 False為下一個
            </summary>
        </member>
        <member name="F:ftd.web.ui.render.FwbInputListRender.ctl_input">
            <summary>
            輸入控制項
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbInputListRender.isMulitLineStyle">
            <summary>
            選取到的值於唯讀模式時是否每一列列出一個值
            </summary>        
        </member>
        <member name="M:ftd.web.ui.render.FwbInputListRender.InputValueChanged(System.Object,System.EventArgs)">
            <summary>
            輸入值發生改變時
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbInputSearch">
            <summary>
            搜尋用輸入欄位
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputSearch.toFullTextSearchs">
            <summary>
            轉成全文檢索字串
            </summary>
        </member>
        <member name="T:ftd.service.FwbUiService">
            <summary>
            關於WebUi的服務
            </summary>
        </member>
        <member name="F:ftd.service.FwbUiService.WindowDebugMode">
            <summary>
            視窗是否位於偵錯模式
            偵錯模式會Show出視窗的資訊
            </summary>
        </member>
        <member name="F:ftd.service.FwbUiService.DisplayHelperIcon">
            <summary>
            是否會顯示Online Helper圖示
            </summary>
        </member>
        <member name="M:ftd.service.FwbUiService.overrideWindowType(System.Type)">
            <summary>
            搜尋WindowType 可於此時覆改WindowType
            </summary>
        </member>
        <member name="M:ftd.service.FwbUiService.getFieldTypeByFieldName(System.String)">
            <summary>
            取得FieldType,依據欄位名稱
            </summary>    
        </member>
        <member name="M:ftd.service.FwbUiService.createInputRender(ftd.web.ui.FwbInput)">
            <summary>
            建立Input所屬的Render
            </summary>
        </member>
        <member name="M:ftd.service.FwbUiService.createToolBarRender(ftd.web.ui.FwbToolbar)">
            <summary>
            建立ToolBarRender
            </summary>
        </member>
        <member name="M:ftd.service.FwbUiService.createWebGridRender(ftd.web.ui.FwbWebGrid)">
            <summary>
            建立WebGridRender
            </summary>
        </member>
        <member name="M:ftd.service.FwbUiService.createCodeQueryWindow(ftd.web.ui.FwbWindowRuntime,System.String)">
            <summary>
            建立CodeQueryWindow，依據指定的樣式。
            注意CodeQueryWindow應該要Support IFwbCodeQueryWindow介面
            </summary>
        </member>
        <member name="M:ftd.service.FwbUiService.createTextItemRender(ftd.web.ui.render.FwbInputTextRender)">
            <summary>
            輸入文字項目Render
            </summary>      
        </member>
        <member name="M:ftd.service.FwbUiService.createWindowTabRender(System.String)">
            <summary>
            建立WindowTabRender
            </summary>
        </member>
        <member name="M:ftd.service.FwbUiService.onWindowCreate(ftd.web.ui.FwbWindow)">
            <summary>
            當視窗建立時
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbInputText">
            <summary>
            (輸入項目)文字
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputText.isCustomTextItemRender">
            <summary>
            是否自定義文字輸出
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputText.is_codequery_clear_hanlde">
            <summary>
            CodeQuery Clear Button Hanlder Exists
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputText.toFullTextSearchs">
            <summary>
            轉成全文檢索字串
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbInputText.CodeQueryOpen">
            <summary>
            CodeQuery被Click
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbInputText.CodeQueryClear">
            <summary>
            CodeQuery按下清除
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbInputText.CodeQueryFinish">
            <summary>
            CodeQuery完成
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputText.TheWindow">
            <summary>
            所在的視窗
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbInputText.CustomTextItemRender">
            <summary>
            自定義文字輸出方法
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputText.FieldTextSplitChar">
            <summary>
            欄位內容分割字元
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbInputText.FieldTextSplits">
            <summary>
            欄位內容分格後的結果(也可指定)
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbInputText.IsCodeQueryButtonAjaxEvent">
            <summary>
            CodeQueryButton事件類型 default(true)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputText.FieldTextHeight">
            <summary>
            欄位內容-寬度
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbInputText.IsHelpIconVisible">
            <summary>
            求助圖示是否可見
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputText.HelpIconHint">
            <summary>
            求助提示
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbInputText.DoCustomTextItemRender">
            <summary>
            自定義TextItemRender
            </summary>
        </member>
        <member name="T:ftd.web.ui.render.FwbInputTextHourMinuteItemRender">
            <summary>
            輸入項目Render
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbInputTextHourMinuteItemRender.renderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render文字內容
            </summary>        
        </member>
        <member name="T:ftd.web.ui.render.FwbInputTextDefaultItemRender">
            <summary>
            輸入項目Render
            </summary>
        </member>
        <member name="T:ftd.web.ui.render.FwbInputTextRender">
            <summary>
            文字輸入項 Render
            </summary>
        </member>
        <member name="F:ftd.web.ui.render.FwbInputTextRender.ctl_cq">
            <summary>
            CodeQuery Button
            </summary>
        </member>
        <member name="F:ftd.web.ui.render.FwbInputTextRender.InputText">
            <summary>
            文字輸入項資料結構
            </summary>
        </member>
        <member name="F:ftd.web.ui.render.FwbInputTextRender.ItemRender">
            <summary>
            文字內容項目Render
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbInputTextRender.getInputTitleForRender">
            <summary>
            取得標題顯示內容 For Render
            </summary>     
        </member>
        <member name="M:ftd.web.ui.render.FwbInputTextRender.renderItem(System.Web.UI.HtmlTextWriter)">
            <summary>
            繪製輸入項目
            </summary>
        </member>
        <member name="P:ftd.web.ui.render.FwbInputTextRender.TheWindow">
            <summary>
            所在的視窗
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbPathControl">
            <summary>
            路徑元件
            </summary>
        </member>
        <member name="F:ftd.web.ui.FtdPathNode.RenderInfo">
            <summary>
            Render Infomation
            </summary>
        </member>
        <member name="F:ftd.web.ui.FtdPathNode.NodeName">
            <summary>
            Node Name for display
            </summary>
        </member>
        <member name="F:ftd.web.ui.FtdPathNode.NodeValue">
            <summary>
            Node Value for program
            </summary>
        </member>
        <member name="M:ftd.web.ui.FtdPathNode.render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render Node Content
            </summary>        
        </member>
        <member name="T:ftd.web.ui.FwbWebGrid">
            <summary>
            Ftd WebGrid
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbConstructStateWebControl">
            <summary>
            動態控制項
            </summary>    
        </member>
        <member name="M:ftd.web.ui.FwbConstructStateWebControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbConstructStateWebControl.ConstructState">
            <summary>
            建構狀態
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbWebGrid.ctl_event">
            <summary>
            提供非Ajax的事件
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbWebGrid.ctl_render">
            <summary>
            提供動態控制項與建構狀態
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWebGrid.setSortColumns(System.Object[])">
            <summary>
            設定排序順序
            例: "EO_EmployeeName", SortDirection.Ascending, "EO_EmployeeSex", SortDirection.Descending        
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWebGrid.getRowCellControls(System.Int32)">
            <summary>
            尋找某列的控制項
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWebGrid.setColumnsVisible(System.String[])">
            <summary>
            限定只有指定的欄位顯示
            不包含 CellColumn
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWebGrid.createGridRender">
            <summary>
            依據RenderStyle建立並初始GridRender
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWebGrid.getPostBackClientHyperlink_Column(ftd.web.ui.FwbGdColumn,System.String)">
            <summary>
            欄位事件
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWebGrid.getPostBackClientHyperlink_Column_NonAjax(ftd.web.ui.FwbGdColumn,System.String)">
            <summary>
            欄位事件
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWebGrid.getPostBackClientEventReference_Column(ftd.web.ui.FwbGdColumn,System.String)">
            <summary>
            欄位事件
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbWebGrid.UserDefineRender">
            <summary>
            自訂欄位Render事件
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbWebGrid.SortCommand">
            <summary>
            資料排序要求發生時
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbWebGrid.PageIndexChanged">
            <summary>
            頁面索引改變事件
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbWebGrid.ItemCreated">
            <summary>
            項目建立事件
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbWebGrid.ItemSelected">
            <summary>
            項目被選擇事件
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.UserDefineRender_SummaryAll">
            <summary>
            自訂SummaryAll的Render
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.PageCount">
            <summary>
            頁面數量
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.HeaderGroups">
            <summary>
            標題群組
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.RenderStyle">
            <summary>
            Render Style
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.SelectionIndexs">
            <summary>
            選擇的項目(GridIndex)
            必須加入FwbGdSelectionColumn才有此功能
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.GridRender">
            <summary>
            WebGrid Render
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.IsOnDialog">
            <summary>
            是否存在於DialogWindow中
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.IsSelectionMode">
            <summary>
            項目選擇模式
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.ItemSelectionModeEnable">
            <summary>
            項目選擇模式
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.IsScrollMode">
            <summary>
            是否啟動巡覽模式
            巡覽模式:移動到的列會焦點顯示
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.IsSelectionModeOnAjax">
            <summary>
            巡覽模式是否為Ajax模式
            (Default true)
            </summary>       
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.IsAjaxEvent_ItemSelection">
            <summary>
            Ajax事件是否支援 (XmlAttrDefault true)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.PageSize">
            <summary>
            每頁筆數
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.CurrentPageIndex">
            <summary>
            目前PageIndex
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.IsMulitSort">
            <summary>
            多重欄位排序？(XmlAttrDefault false)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.DataRowIndexs">
            <summary>
            Binding DataRowIndex
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.Columns">
            <summary>
            欄位集合
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.IsDisplayHead">
            <summary>
            顯示欄位標題與否？
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.IsDisplayHeader">
            <summary>
            顯示欄位標題與否？(default true)
            </summary>        
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.IsDisplayHeaderGroup">
            <summary>
            顯示標題欄位群組？(default false)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.IsDisplaySummaryAll">
            <summary>
            是否顯示SummaryAll
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.IsWriteBack">
            <summary>
            是否必須回寫
            </summary>          
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.SortExpress">
            <summary>
            資料欄位排序命令
            例: EOE_Employee, EOE_EmployeeName desc
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.SortExpressNote">
            <summary>
            資料欄位備註
            例: 年度, 性別 DESC
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.Rows">
            <summary>
            BindingRows
            顯示用的資料列
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.DataSource">
            <summary>
            資料來源
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWebGrid.DataSourceRowCount">
            <summary>
            Bing資料來源的項目數
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbWindow">
            <summary>
            視窗
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbWindow.BUG_IE6_001">
            <summary>
            當其值為True時，表示位於IE6的Browser下，且頭上有Dilaog視窗存在
            Window內的所有 HTML Select 元件必須要不顯示
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.raiseDataEvent(System.String,System.String)">
            <summary>
            釋放資料事件(以父-父父-父父父)順序傳遞
            onDataEventReceive()會接收到此事件
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.onDataEventReceive(System.String,System.String)">
            <summary>
            接收到資料事件
            Return true 事件已處理。不用繼續往上傳遞
            Return false 事件未處理 事件繼續往上傳遞
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindow.getParentWindow">
            <summary>
            取得父視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindow.getParentWindow``1">
            <summary>
            取得父視窗
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.getChildWindows">
            <summary>
            取得子視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindow.createWindow(System.Type)">
            <summary>
            建立新視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindow.createWindow``1">
            <summary>
            建立新視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindow.doOpenWindow(ftd.web.ui.FwbWindow,ftd.web.ui.FwbWindow.EWinType,System.String)">
            <summary>
            開啟視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindow.openDialog">
            <summary>
            開啟視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindow.openWindow">
            <summary>
            開啟視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindow.openDialog(ftd.web.ui.FwbWindow)">
            <summary>
            開啟視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindow.openDialog(ftd.web.ui.FwbWindow,System.String)">
            <summary>
            開啟視窗(並指定開啟者)
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindow.openWindow(ftd.web.ui.FwbWindow)">
            <summary>
            開啟視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindow.openMessage">
            <summary>
            開啟視窗-訊息
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindow.removeChildWindowBy(System.String)">
            <summary>
            開啟指定視窗為子視窗(樣式必須僅有一個)
            </summary> 
        </member>
        <member name="M:ftd.web.ui.FwbWindow.closeWindow">
            <summary>
            關閉視窗
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.removeWindow">
            <summary>
            直接移除視窗(不觸發任何事件)
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.lostFocus">
            <summary>
            放棄焦點,焦點回歸父視窗，或LastFocusTop視窗
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.setFocusWindow">
            <summary>
            設定本視窗取得焦點
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.onWindowOpen">
            <summary>
            當視窗開啟
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.onWindowLoad">
            <summary>
            當視窗Load載入
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.onWindowFocus">
            <summary>
            當視窗取得焦點
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.whenWindowClose">
            <summary>
            當視窗關閉
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.findInWindowScope``1(System.Func{``0,System.Boolean})">
            <summary>
            Search Window's Scope Control
            Scope:in this Window not in Other'Window
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.onWindowClose">
            <summary>
            當視窗關閉
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.onChildWindowClose(ftd.web.ui.FwbWindow)">
            <summary>
            當子視窗關閉
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.onWindowEvent(System.Threading.ThreadStart)">
            <summary>
            發生視窗事件時
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindow.onWindowEventException(System.Exception)">
            <summary>
            發生視窗事件例外時
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindow.doRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            控制項在Render時，應走過本程序，如本程序回覆false。        
            1.FwbWindow
            2.FwbWindowHeader
            3.FwbWindowBody
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.onWindowRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            當視窗Render時
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbWindow.Render_InFocusPath">
            <summary>
            是否位於焦點路徑上(Render時設定)
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.Render_FindLastFocusWindow">
            <summary>
            找尋最後取的焦點的視窗於視窗樹中
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.renderWindow(ftd.web.ui.render.FwbWindowRuntimeRender)">
            <summary>
            RenderWindow
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindow.setWinParamByString(System.String)">
            <summary>
            設定視窗的參數依據paramString        
            </summary>
            <param node_4="parmString">格式依照標準的URL的QueryString</param>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.getInputGroup">
            <summary>
            Get Window' Scope's Inputs(DefaultGroup) 
            </summary>
            <returns></returns>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.getInputGroup(System.String)">
            <summary>
            Get Window' Scope's Inputs(by group_no) 
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.findChildItemWindow``1(System.String)">
            <summary>
            尋找指定的子視窗
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.findChildItemWindow``1(ftd.web.ui.FwbWindowRuntime,System.String)">
            <summary>
            尋找指定的子視窗
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.doOpenChildItemWindow``1(ftd.web.ui.FwbWindowRuntime,System.String,System.Action{``0},System.String)">
            <summary>
            existAction F:(Focus) N:(New) R:(Replace)
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.openChildItemWindow``1(System.String,System.Action{``0},System.String)">
            <summary>
            existAction F:(Focus) N:(New) R:(Replace)
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.openChildItemWindow``1(ftd.web.ui.FwbWindowRuntime,System.String,System.Action{``0},System.String)">
            <summary>
            existAction F:(Focus) N:(New) R:(Replace)
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbWindow.WindowClose">
            <summary>
            視窗關閉
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowFocusId">
            <summary>
            焦點順序
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowExceptionMessage">
            <summary>
            視窗例外訊息
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowParentId">
            <summary>
            父視窗ID
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowId">
            <summary>
            視窗ID
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowTitle">
            <summary>
            視窗標題
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowTitlePrefix">
            <summary>
            視窗標題前綴字
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.ProxyUtility">
            <summary>
            Proxy Untitly
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.CustomParameters">
            <summary>
            自訂參數
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.IsTableLayout">
            <summary>
            內部的輸入控制項(Input)是否啟用Table Layout模式
            default(false)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowTitleEmbed">
            <summary>
            當子視窗是否內嵌顯示時，本頁簽的名稱為何        
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.IsEmbedSelf">
            <summary>
            視窗是否自我內嵌顯示(default false)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.IsEmbedChildWindow">
            <summary>
            子視窗是否內嵌顯示(default false)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowIconName">
            <summary>
            視窗圖示
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowIconNameEmbed">
            <summary>
            視窗圖示(內簽)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.DialogWidth">
            <summary>
            對話盒寬度
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.DialogHeight">
            <summary>
            對話盒高度
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.IsDialog">
            <summary>
            是否為對話盒(Dialog,Message)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.IsDisplayInSlave">
            <summary>
            是否顯示在副顯示區(只有Dialog視窗此屬性才有作用)
            副顯示區一般都是放在非Ajax的位置，所以此視窗才可以執行HttpFileUpload的動作。
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.IsOnOpenProcess">
            <summary>
            是否在開啟程序中
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowKindName">
            <summary>
            視窗類型名稱(給使用者自定義用)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowOpenerId">
            <summary>
            開啟本視窗的控制項
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowFocused">
            <summary>
            視窗是否取得焦點
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.IsChildWindowFocused">
            <summary>
            子樹係視窗是否有取得焦點
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowCloseButtonEnabled">
            <summary>
            視窗關閉按鈕啟用？
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowType">
            <summary>
            視窗類型
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowState">
            <summary>
            視窗狀態
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowCloseAction">
            <summary>
            視窗關閉時應執行的動作
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowActionOk">
            <summary>
            視窗動作是否完成
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.IsWindowWriteBack">
            <summary>
            指示視窗是否處於回寫狀態
            如是的話時應該將自行Render的控制項資料保存
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.RenderStyle_Dialog">
            <summary>
            Dialog外框樣式
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.RenderStyle_Embed">
            <summary>
            內簽外框樣式
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowRuntime">
            <summary>
            Window所在的Runtime
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.Render_InEmbedRender">
            <summary>
            視窗是否實際上以Embed的方式顯示(Render時設定)        
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowHeader">
            <summary>
            Window Header
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.WindowBody">
            <summary>
            Window Body
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbWindow.EWinType">
            <summary>
            視窗類型
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbWindow.EWinType.Normal">
            <summary>
            一般視窗
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbWindow.EWinType.Dialog">
            <summary>
            對話盒
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbWindow.EWinType.Message">
            <summary>
            訊息
            訊息視窗的Parent為動態自行指定(永遠為最後取得焦點的視窗)
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbWindow.EWinState">
            <summary>
            視窗狀態
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbWindow.EWinState.WindowCreate">
            <summary>
            視窗建立
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbWindow.EWinState.WindowOpen">
            <summary>
            視窗開啟
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbWindow.EWinState.WindowClose">
            <summary>
            視窗關閉
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbWindow.EWinState.WindowRemove">
            <summary>
            視窗移除
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbWindow.CProxyUtility">
            <summary>
            Proxy Utitliy
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbWindow.CProxyUtility.TempUnVisibleSouceIds">
            <summary>
            暫時不顯示的SourceContols'Id
            </summary>            
        </member>
        <member name="M:ftd.web.ui.FwbWindow.CProxyUtility.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.CProxyUtility.letSourceTempUnVisible(System.Web.UI.Control)">
            <summary>
            暫時另Source UnVisible Utitly Next Load
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.CProxyUtility.onWindowLoad(ftd.web.ui.FwbWindow)">
            <summary>
            Window OnLoad Event Will Call this
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindow.CProxyUtility.onWindowPreRender(ftd.web.ui.FwbWindow)">
            <summary>
            Window OnPreRender Event Will Call this
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindow.CProxyUtility.AllProxys">
            <summary>
            All Porxy's
            </summary>           
        </member>
        <member name="P:ftd.web.ui.FwbWindow.CProxyUtility.AllSources">
            <summary>
            All Source's
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbWindowBody">
            <summary>
            WindowBody區塊內
            裡面的內容於視窗取得焦點時顯示
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindowBody.setVisibility(ftd.web.ui.FwbWindow,ftd.web.ui.FwbWindow)">
            <summary>
            設定其顯示性
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbWindowCloseAction">
            <summary>
            當視窗關閉時應執行的動作
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbWindowHeader">
            <summary>
            標題區塊    
            裡面的內容，當視窗位於焦點路徑時顯示。
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindowHeader.setVisibility(ftd.web.ui.FwbWindow,ftd.web.ui.FwbWindow)">
            <summary>
            設定其顯示性
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindowHeader.IsAlwayVisible">
            <summary>
            指定本區塊是否永遠顯示，否則只會自我內簽時顯示
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbWindowRuntime">
            <summary>
            視窗執行環境
            </summary>
        </member>
        <member name="T:ftd.web.ui.IFwbDynamicControl">
            <summary>
            動態控制項介面
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.removeCloseWindow">
            <summary>
            自動移除已關閉的視窗，除非他關閉過程中發生錯誤
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.getNewDynamicControlId">
            <summary>
            取得新動態控制項的ID名稱
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.createWindow(System.Type)">
            <summary>
            建立視窗
            </summary>    
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.createWindow``1">
            <summary>
            建立視窗
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.getWindow(System.Int32)">
            <summary>
            取得視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.getWindowByKindName(System.String)">
            <summary>
            取得視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.closeWindow(System.Int32)">
            <summary>
            關閉指定視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.closeAllWindow">
            <summary>
            關閉全部視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.removeWindow(System.Int32)">
            <summary>
            移除指定視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.getChildWindows(System.Int32)">
            <summary>
            取得子視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.getFocusWindow">
            <summary>
            取得焦點視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.replaceWindow(System.Int32,System.Int32)">
            <summary>
            以新的視窗取代指定視窗
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.getTopWindows">
            <summary>
            取得所有TOP視窗(已開啟者)
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.getAllWindows">
            <summary>
            取得所有的視窗
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.getPostBackClientHyperLink_Focus(ftd.web.ui.FwbWindow,System.Boolean)">
            <summary>
            isFoucsToLast : 是否所屬視窗最後取的焦點的視窗作為焦點對象
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.createTabControlRender(System.String)">
            <summary>
            取得頁簽提供者
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.setMessageWindowParent">
            <summary>
            設定MessageWindow的父視窗
            </summary>
        </member>
        <member name="F:ftd.web.ui.FwbWindowRuntime.FocusPathWindows">
            <summary>
            焦點路徑視窗(開頭為焦點)(有Render時才有)
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbWindowRuntime.updateVisibleWindows">
            <summary>
            設定可見的視窗,與焦點路徑,與Slave
            視窗可見的定義
            1.視窗是焦點視窗
            2.焦點路徑上-視窗的子視窗是Dialog者
            3.焦點路徑上-視窗是自我內簽視窗，且子視窗是可見的
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbWindowRuntime.WindowClosed">
            <summary>
            視窗關閉
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindowRuntime.CurrentMaxWindowId">
            <summary>
            現在最大的WindowId (用以發行視窗)
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindowRuntime.RenderStyle">
            <summary>
            外框樣式
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindowRuntime.Windows">
            <summary>
            所有視窗
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindowRuntime.RuntimeSlave">
            <summary>
            附屬顯示區塊
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindowRuntime.FocusWindowId">
            <summary>
            焦點視窗代號
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbWindowRuntime.CurrentMaxFocusId">
            <summary>
            現在最大的FocusId (用以顯示順序)
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbWindowRuntime.WhenWindowClose">
            <summary>
            當視窗關閉時
            </summary>
        </member>
        <member name="F:ftd.web.ui.render.FwbWindowRuntimeRender.TabControls">
            <summary>
            頁簽集合
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbWindowRuntimeRender.beginTabControl(System.Boolean,System.String,System.String,ftd.web.ui.render.FwbTabControlRender,System.Boolean)">
            <summary>
            isDialog為true將上移一個圖層
            </summary>        
        </member>
        <member name="M:ftd.web.ui.render.FwbWindowRuntimeRender.renderWindows(System.Web.UI.HtmlTextWriter)">
            <summary>
            畫出WindowRuntime全部的Window
            </summary>        
        </member>
        <member name="M:ftd.web.ui.render.FwbWindowRuntimeRender.renderWindowsSlave(System.Web.UI.HtmlTextWriter)">
            <summary>
            畫出WindowRuntime全部的Window(複區)
            </summary>        
        </member>
        <member name="M:ftd.web.ui.render.FwbWindowRuntimeRender.renderDialogBegin(ftd.web.ui.FwbTabControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.Int32)">
            <summary>
            Dialog浮上來起始
            </summary>        
        </member>
        <member name="M:ftd.web.ui.render.FwbWindowRuntimeRender.renderDialogEnd(ftd.web.ui.FwbTabControl,System.Web.UI.HtmlTextWriter)">
            <summary>
            Dialog浮上來結束
            </summary>
        </member>
        <member name="M:ftd.web.ui.render.FwbWindowRuntimeRender.renderTabStripCollectionRecursive(ftd.web.ui.FwbTabControl,System.Web.UI.HtmlTextWriter)">
            <summary>
            畫出每個TabStripCollection與Window
            </summary>        
        </member>
        <member name="T:ftd.web.ui.FwbWindowRuntimeSlave">
            <summary>
            視窗執行環境
            </summary>
        </member>
        <member name="T:ftd.web.view.IFwbCodeQueryWindow">
            <summary>
            簡單類型CodeQueryWindow
            </summary>
        </member>
        <member name="P:ftd.web.view.IFwbCodeQueryWindow.P_CodeQueryArgs">
            <summary>
            CodeQuery參數
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbGdRowSerializer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            反序列 Stream->Object
            </summary>          
        </member>
        <member name="M:ftd.web.ui.FwbGdRowSerializer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            序列化 Object->Stream
            </summary>           
        </member>
        <member name="T:ftd.web.ui.FwbContentSection">
            <summary>
            內容框
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbContentSection.IsDisplayFrame">
            <summary>
            是否顯示框線？
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbDefaultDesigner">
            <summary>
            Default Designer
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbDropEvent">
            <summary>
            提供 Drag Drop Event的功能
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbDropEvent.getNodeImage(System.String)">
            <summary>
            取得拖拉節點HTML
            </summary>
        </member>
        <member name="E:ftd.web.ui.FwbDropEvent.DropEvent">
            <summary>
            Drop事件
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbDropEvent.CursorStyle">
            <summary>
            拖拉時滑鼠的樣式
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbDropEvent.ImageNodeUrl">
            <summary>
            拖拉影像的URL
            預設(~/images/app/drag.gif)
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbDropEvent.CEventArg">
            <summary>
            
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbDropEvent.ECursorStyle">
            <summary>
            
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbDynamicControl">
            <summary>
            動態控制項
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbInputComplex">
            <summary>
            複合輸入控制項
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputComplex.ViewPath">
            <summary>
            複合輸入樣本路徑
            例：~/complex_input/HcMemberMark1Complex.ascx
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbInputComplex.CView">
            <summary>
            複合View基本類型
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbInputGroup">
            <summary>
            輸入群組物件
            </summary>    
        </member>
        <member name="M:ftd.web.ui.FwbInputGroup.#ctor(ftd.web.ui.FwbWindow)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputGroup.#ctor(ftd.web.ui.FwbWindow,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputGroup.validate(System.Boolean)">
            <summary>
            驗證欄位內容是否正確
            當有欄位驗證失敗時，是否中止。
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputGroup.validate_fails">
            <summary>
            取得驗證失敗的輸入項目
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputGroup.setWriteable">
             <summary>
            設定為可編輯 
             </summary>
             <returns></returns>
        </member>
        <member name="M:ftd.web.ui.FwbInputGroup.setViewMode">
            <summary>
            ReadOnly and NotRequire and No CodeQuery
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputGroup.ns_findExtNames">
            <summary>
            搜尋全部的衍生欄位
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputGroup.ns_findAllNames">
            <summary>
            搜尋全部的實體與衍生欄位
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputGroup.dt_loadRow(System.Data.DataRow)">
            <summary>
            载入指定的列
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbInputGroup.dt_updateRow(System.Data.DataRow)">
            <summary>
            更新資料至指定的列
            </summary>        
        </member>
        <member name="M:ftd.web.ui.FwbInputGroup.dt_toRowTable``1">
            <summary>
            轉成單一列DataTable
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputGroup.acceptChanges">
            <summary>
            儲存目前內容至原始版本
            </summary>
        </member>
        <member name="M:ftd.web.ui.FwbInputGroup.rejectChanges">
            <summary>
            回存原始版本至目前內容
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputGroup.GroupNo">
            <summary>
            群組號碼
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbInputGroup.Item(System.String)">
            <summary>
            欄位 by ColumnName
            </summary>        
        </member>
        <member name="T:ftd.web.ui.FwbLabel">
            <summary>
            Label
            </summary>    
        </member>
        <member name="T:ftd.web.ui.FwbProxy">
            <summary>
            Proxy Control For Window
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbProxy.SourceID">
            <summary>
            SourceId
            </summary>
        </member>
        <member name="P:ftd.web.ui.FwbProxy.SourceObject">
            <summary>
            Source Object
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbProxy.CDesigner">
            <summary>
            Designer
            </summary>
        </member>
        <member name="T:ftd.web.ui.FwbWindowProxyZone">
            <summary>
            Window Proxy Control's Place Zone
            </summary>
        </member>
        <member name="T:ftd.web.FwbFileViewState">
            <summary>
            檔案ViewState功能
            需於設定檔中指定ViewState目錄-[FwbFileViewState.ViewStateTempPath]，或自行指定
            </summary>
        </member>
        <member name="M:ftd.web.FwbFileViewState.getFileState``1(System.Web.UI.StateBag,System.String)">
            <summary>
            取得FileState         
            </summary>        
        </member>
        <member name="M:ftd.web.FwbFileViewState.setFileState(System.Web.UI.StateBag,System.String,System.Object)">
            <summary>
            設定FileState 
            </summary>       
        </member>
        <member name="M:ftd.web.FwbFileViewState.#cctor">
            <summary>
            靜態建構子
            </summary>
        </member>
        <member name="M:ftd.web.FwbFileViewState.serializeObject(System.String,System.Object)">
            <summary>
            序列化物件並回傳存放路徑
            </summary>        
        </member>
        <member name="M:ftd.web.FwbFileViewState.createTempFileName">
            <summary>
            產生儲存檔案名稱
            </summary>        
        </member>
        <member name="M:ftd.web.FwbFileViewState.deserializeObject``1(System.String)">
            <summary>
            反序列化物件並回傳其值
            </summary>        
        </member>
        <member name="M:ftd.web.FwbFileViewState.createFileWrapper``1(``0)">
            <summary>
            建立FileWrapper物件
            </summary>        
        </member>
        <member name="P:ftd.web.FwbFileViewState.StorageFolderPath">
            <summary>
            ViewState目錄
            </summary>
        </member>
        <member name="P:ftd.web.FwbFileViewState.StorageExpiredMinute">
            <summary>
            逾時分鐘數
            </summary>
        </member>
        <member name="T:ftd.web.FwbFileViewState.FileWrapper`1">
            <summary>
            檔案封裝
            </summary>
        </member>
        <member name="F:ftd.web.FwbFileViewState.FileWrapper`1.IsFirstCreate">
            <summary>
            是否為首次建立
            只有第一次建立才需要序列儲存物件
            </summary>
        </member>
        <member name="F:ftd.web.FwbFileViewState.FileWrapper`1.SaveFileName">
            <summary>
            資料儲放檔案名稱
            </summary>
        </member>
        <member name="M:ftd.web.FwbFileViewState.FileWrapper`1.#ctor(`0)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ftd.web.FwbFileViewState.FileWrapper`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            序列化 Object->Stream
            </summary>           
        </member>
        <member name="M:ftd.web.FwbFileViewState.FileWrapper`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            反序列 Stream->Object
            </summary>          
        </member>
        <member name="P:ftd.web.FwbFileViewState.FileWrapper`1.StorageObject">
            <summary>
            存放物件
            </summary>
        </member>
        <member name="T:ftd.web.FwbViewStatePresister">
            <summary>
            可將Asp.Net ViewState寫入SQLExprees資料庫中
            </summary>
        </member>
        <member name="F:ftd.web.FwbViewStatePresister.db_readCommand">
            <summary>
            SQL讀取命令
            </summary>
        </member>
        <member name="F:ftd.web.FwbViewStatePresister.db_addCommand">
            <summary>
            SQL寫入命令
            </summary>
        </member>
        <member name="F:ftd.web.FwbViewStatePresister._ScheduleThread">
            <summary>
            回收排程
            </summary>
        </member>
        <member name="M:ftd.web.FwbViewStatePresister.#cctor">
            <summary>
            Static Constructor
            </summary>
        </member>
        <member name="M:ftd.web.FwbViewStatePresister.Load">
            <summary>
            載入ViewState
            </summary>
        </member>
        <member name="M:ftd.web.FwbViewStatePresister.Save">
            <summary>
            保存狀態
            </summary>
        </member>
        <member name="M:ftd.web.FwbViewStatePresister.db_addState(System.Byte[],System.Nullable{System.Int64},System.Nullable{System.Int64}@)">
            <summary>
            資料庫-追加狀態
            </summary>
        </member>
        <member name="M:ftd.web.FwbViewStatePresister.db_readState(System.Int64,System.Byte[]@,System.Nullable{System.Int64}@)">
            <summary>
            資料庫讀取狀態
            </summary>        
        </member>
        <member name="P:ftd.web.FwbViewStatePresister.StorageConnection">
            <summary>
            儲存體連接字串
            </summary>
        </member>
        <member name="P:ftd.web.FwbViewStatePresister.StorageExpiredMinute">
            <summary>
            逾時分鐘數
            </summary>
        </member>
        <member name="P:ftd.web.FwbViewStatePresister.ViewStateId">
            <summary>
            目前的ViewStateId
            </summary>
        </member>
        <member name="P:ftd.web.FwbViewStatePresister.ConstructorState">
            <summary>
            建構狀態
            </summary>
        </member>
        <member name="T:ftd.web.FwbPage">
            <summary>
            FwbPage
            </summary>
        </member>
        <member name="F:ftd.web.FwbPage.ConstructorStates">
            <summary>
            建構狀態
            </summary>
        </member>
        <member name="F:ftd.web.FwbPage.CacheState">
            <summary>
            Cache State用
            </summary>
        </member>
        <member name="M:ftd.web.FwbPage.loadConstructState(System.String)">
            <summary>
            載入ConstructorState
            </summary>      
        </member>
        <member name="M:ftd.web.FwbPage.savaConstructState(System.String,System.Object)">
            <summary>
            儲存ConstructorState
            </summary>
        </member>
        <member name="M:ftd.web.FwbPage.getWindowRuntimeSlave">
            <summary>
            取得頁面的RuntimeSlave
            </summary>
        </member>
        <member name="P:ftd.web.FwbPage.PageStatePersister">
            <summary>
            FwbPage的PageStatePersister 只能是 FwbViewStatePresister
            所以禁止 override
            </summary>
        </member>
        <member name="T:ftd.FtdBrowserVersion">
            <summary>
            瀏覽器版本
            </summary>
        </member>
        <member name="F:ftd.FtdWebHelper.CryptoParameterName">
            <summary>
            加密參數名稱
            </summary>
        </member>
        <member name="F:ftd.FtdWebHelper.IsQueryStringCrypto">
            <summary>
            是否使用QueryString加密
            </summary>
        </member>
        <member name="F:ftd.FtdWebHelper.QueryStringCryptoDES_IV">
            <summary>
            QueryString 加密鍵值 IV
            </summary>
        </member>
        <member name="F:ftd.FtdWebHelper.QueryStringCryptoDES_KEY">
            <summary>
            QueryString 加密鍵值 KEY
            </summary>
        </member>
        <member name="M:ftd.FtdWebHelper.#cctor">
            <summary>
            靜態建構子
            </summary>
        </member>
        <member name="M:ftd.FtdWebHelper.EncodeJavaScriptString(System.String)">
            <summary>
            將指定字串轉換成JavaScript的字串類型
            </summary>
            <param node_4="javaString">例 123'445\789</param>
            <returns>'123\'445\\789'</returns>
        </member>
        <member name="M:ftd.FtdWebHelper.resolveUrl(System.String)">
            <summary>
            取得相對網址(必須在Page物件中呼叫)
            </summary>
        </member>
        <member name="M:ftd.FtdWebHelper.getHostUrl">
            <summary>
            取得主機網址(.aspx頁面訪問階段呼叫)
            EX.http://ekm.kcg.gov.tw:2100/
            </summary>        
        </member>
        <member name="M:ftd.FtdWebHelper.getPageUrl">
            <summary>
            取得主機網址(.aspx頁面訪問階段呼叫)
            EX.http://ekm.kcg.gov.tw:2100/Hello.aspx
            </summary>        
        </member>
        <member name="M:ftd.FtdWebHelper.selectAllControls``1(System.Web.UI.Control)">
            <summary>
            搜尋指定物件底下所有類型為ControlType的控制項(不含自己)
            </summary>
        </member>
        <member name="M:ftd.FtdWebHelper.selectAllControlsRecursive``1(System.Web.UI.Control,System.Collections.Generic.List{``0})">
            <summary>
            遞回找出所有控制項
            </summary>        
        </member>
        <member name="M:ftd.FtdWebHelper.getWebUrl">
            <summary>
            取得網站網址(.aspx頁面訪問階段呼叫)
            EX.http://ekm.kcg.gov.tw/km2007/
            </summary>        
        </member>
        <member name="M:ftd.FtdWebHelper.cryptoCurrentWebUrl(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            加密現行網站Url 可使用~/xxx
            </summary>        
        </member>
        <member name="M:ftd.FtdWebHelper.cryptoUrl(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            加密Url
            </summary>        
        </member>
        <member name="M:ftd.FtdWebHelper.cryptoUrl(System.String,System.Collections.Specialized.NameValueCollection,System.Byte[],System.Byte[])">
            <summary>
            加密Url
            </summary>        
        </member>
        <member name="M:ftd.FtdWebHelper.decryptoQueryString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            反解 QueryString
            </summary>        
        </member>
        <member name="M:ftd.FtdWebHelper.decryptoQueryString(System.Collections.Specialized.NameValueCollection,System.Byte[],System.Byte[])">
            <summary>
            反解 QueryString
            </summary>        
        </member>
        <member name="M:ftd.FtdWebHelper.nv_serialize(System.Collections.Specialized.NameValueCollection)">
            <summary>
            NameValue Serialize，Serailize後的資料較短
            </summary>	
        </member>
        <member name="M:ftd.FtdWebHelper.nv_deserialize(System.String)">
            <summary>
            還原NameValueCollection 由 nv_serialize() 的字串
            </summary>	
        </member>
        <member name="M:ftd.FtdWebHelper.getViewState``1(System.Web.UI.StateBag,System.String)">
            <summary>
            取得ViewState內容
            </summary>        
        </member>
        <member name="M:ftd.FtdWebHelper.getViewState``1(System.Web.UI.StateBag,System.String,``0)">
            <summary>
            取得ViewState內容
            </summary>        
        </member>
        <member name="M:ftd.FtdWebHelper.catchExceptionForHandler(System.Web.UI.Control,System.Threading.ThreadStart)">
            <summary>
            例外攔截區塊
            </summary>        
        </member>
        <member name="P:ftd.FtdWebHelper.BrowserVerion">
            <summary>
            目前Request的瀏覽器版本
            </summary>
        </member>
        <member name="P:ftd.FtdWebHelper.CallLevel">
            <summary>
            呼叫深度初值為0
            </summary>
        </member>
        <member name="T:ftd.service.FtdWebFolderService">
            <summary>
            網站目錄檔案服務
            </summary>
        </member>
        <member name="F:ftd.service.FtdWebFolderService.WFN_APP_Temp">
            <summary>
            暫存檔目錄
            </summary>
        </member>
        <member name="F:ftd.service.FtdWebFolderService.WFN_APP_ViewState">
            <summary>
            ViewState目錄
            </summary>
        </member>
        <member name="F:ftd.service.FtdWebFolderService.WFN_APP_Log">
            <summary>
            Log目錄
            </summary>
        </member>
        <member name="F:ftd.service.FtdWebFolderService.RootPath">
            <summary>
            Root Path
            </summary>
        </member>
        <member name="M:ftd.service.FtdWebFolderService.getDatabaseFile(System.String)">
            <summary>
            取得資料庫檔案
            </summary>
        </member>
        <member name="M:ftd.service.FtdWebFolderService.tmp_newFileName">
            <summary>
            TEMP 產生新的檔名
            </summary>        
        </member>
        <member name="M:ftd.service.FtdWebFolderService.tmp_newFileName(System.String)">
            <summary>
            TEMP 產生新檔名 指定副檔名 ex(.txt)
            </summary>        
        </member>
        <member name="M:ftd.service.FtdWebFolderService.tmp_createFolder">
            <summary>
            TEMP 產生新的目錄，並傳回FolderPath
            </summary>
        </member>
        <member name="M:ftd.service.FtdWebFolderService.tmp_newFolderName">
            <summary>
            TEMP 產生新的目錄名稱
            </summary>
        </member>
        <member name="M:ftd.service.FtdWebFolderService.toFolderFullPath(System.String)">
            <summary>
            轉成目錄
            </summary>
        </member>
        <member name="T:ftd.service.FtdWebFolderService.FileTransaction">
            <summary>
            檔案交易
            </summary>
        </member>
        <member name="F:ftd.service.FtdWebFolderService.FileTransaction.Items">
            <summary>
            異動項目集合
            </summary>
        </member>
        <member name="M:ftd.service.FtdWebFolderService.FileTransaction.doFolderDelete(System.String)">
            <summary>
            目錄刪除
            </summary>
        </member>
        <member name="M:ftd.service.FtdWebFolderService.FileTransaction.doFolderCreate(System.String)">
            <summary>
            目錄建立
            </summary>
        </member>
        <member name="M:ftd.service.FtdWebFolderService.FileTransaction.doFolderMove(System.String,System.String)">
            <summary>
            目錄搬移
            </summary>
        </member>
        <member name="M:ftd.service.FtdWebFolderService.FileTransaction.doFileCopy(System.String,System.String)">
            <summary>
            執行-檔案複製
            </summary>
        </member>
        <member name="M:ftd.service.FtdWebFolderService.FileTransaction.doFileMove(System.String,System.String)">
            <summary>
            執行-檔案搬移
            </summary>
        </member>
        <member name="M:ftd.service.FtdWebFolderService.FileTransaction.doFileDelete(System.String)">
            <summary>
            執行-檔案刪除
            </summary>
        </member>
        <member name="M:ftd.service.FtdWebFolderService.FileTransaction.doCommit">
            <summary>
            動作完成
            </summary>
        </member>
        <member name="M:ftd.service.FtdWebFolderService.FileTransaction.doRollback">
            <summary>
            動作取消
            </summary>
        </member>
        <member name="T:ftd.service.FtdWebFolderService.FileTransaction.CTranItem">
            <summary>
            異動項目
            </summary>
        </member>
        <member name="F:ftd.service.FtdWebFolderService.FileTransaction.CTranItem.IsCommit">
            <summary>
            動作是否完成
            </summary>
        </member>
        <member name="F:ftd.service.FtdWebFolderService.FileTransaction.CTranItem.doCommit">
            <summary>
            完成動作
            </summary>
        </member>
        <member name="F:ftd.service.FtdWebFolderService.FileTransaction.CTranItem.doRollback">
            <summary>
            還原動作
            </summary>
        </member>
        <member name="T:ftd.web.FwbWebTempFolder">
            <summary>
            網站站存目錄
            </summary>
        </member>
        <member name="M:ftd.web.FwbWebTempFolder.newTempFileName">
            <summary>
            產生新的TempFile
            </summary>        
        </member>
        <member name="M:ftd.web.FwbWebTempFolder.newTempFileName(System.String)">
            <summary>
            產生新的TempFile
            </summary>        
        </member>
        <member name="M:ftd.web.FwbWebTempFolder.saveFile(System.IO.Stream)">
            <summary>
            存檔並回傳檔名
            </summary>
        </member>
        <member name="M:ftd.web.FwbWebTempFolder.scheduleMain">
            <summary>
            排程
            </summary>        
        </member>
        <member name="P:ftd.web.FwbWebTempFolder.StorageFolderPath">
            <summary>
            暫存目錄
            </summary>
        </member>
        <member name="P:ftd.web.FwbWebTempFolder.StorageExpiredMinute">
            <summary>
            逾時分鐘數
            </summary>
        </member>
        <member name="T:ftd.web.IFwbWebExceptionHandler">
            <summary>
            例外事件實作者
            </summary>
        </member>
        <member name="T:ftd.FtdMathHelper">
            <summary>
            數學計算的工具
            </summary>
        </member>
        <member name="F:ftd.FtdMathHelper.ROUND_FACTOR">
            <summary>
            要進位的數值(1~9)，例：四捨五入為5，三捨四入為4
            </summary>
        </member>
        <member name="M:ftd.FtdMathHelper.Round(System.Int32,System.Decimal,System.Int32)">
            <summary>
            特殊進位法
            </summary>
            <param name="factor">要進位的值，例：四捨五入為5，三捨四入為4</param>
            <param name="d">原數值</param>
            <param name="digis">小數位數</param>
            <returns>進位後的結果</returns>
        </member>
    </members>
</doc>
